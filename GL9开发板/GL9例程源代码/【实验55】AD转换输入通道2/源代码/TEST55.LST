C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST55
OBJECT MODULE PLACED IN TEST55.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST55.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          #include <Intrins.h>       //因本例需要使用空操作，必须调用这个头文件
  11          
  12          //---------------------------------------
  13          //1602液晶相关I/O设置
  14          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  15          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  16          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  17          //---------------------------------------
  18          
  19          //---------------------------------------
  20          //软件模拟IIC相关I/O设置
  21          sbit SCL=P1^7;             //PCF8591T的 SCL 引脚接于单片机的P1^7引脚上
  22          sbit SDA=P1^6;             //PCF8591T的 SDA 引脚接于单片机的P1^6引脚上
  23          //---------------------------------------
  24          
  25          //---------------------------------------
  26          //A/D转换用寄存器设置
  27          unsigned char ADbuf;       //设置8位的寄存器用来暂存A/D转换结果
  28          //---------------------------------------
  29          
  30          //---------------------------------------
  31          //1602液晶寄存器设置
  32          unsigned char DISbuf;     //设置8位的unsigend char型寄存器用来暂存1602要显示的内容
  33          unsigned char j;          //设置8位的unsigend char型寄存器用来暂存转换数据
  34          //---------------------------------------
  35          
  36          //---------------------------------------
  37          //名称：生IIC启动信号函数
  38          //适用：给力者GL9单片机开发学习系统
  39          //公司：宁波芯动电子有限公司
  40          //网址：www.MovingChip.com
  41          //日期：20120914
  42          //---------------------------------------
  43          void IICstart(void)
  44          { 
  45   1           SDA=1;                //先将SDA=1，以准备在SCL=1时，将SDA=0
  46   1           SCL=1;                //时钟总线拉高 
  47   1           _nop_();                   //略做延时
  48   1           _nop_();                   //略做延时
  49   1           SDA=0;                //SCL=1时，将SDA拉低即产生启动信号 
  50   1           _nop_();                   //略做延时
  51   1           _nop_();                   //略做延时
  52   1           SCL=0;                //将SCL=0，完成启动信号操作      
  53   1      } 
  54          
  55          //---------------------------------------
C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 2   

  56          //名称：IIC停止信号函数
  57          //适用：给力者GL9单片机开发学习系统
  58          //公司：宁波芯动电子有限公司
  59          //网址：www.MovingChip.com
  60          //日期：20120914
  61          //---------------------------------------
  62          void IICstop(void)
  63          { 
  64   1           SDA=0;                //先将SDA=0，以准备在SCL=1时，将SDA=1
  65   1           SCL=1;                //时钟总线拉高 
  66   1           _nop_();                   //略做延时
  67   1           _nop_();                   //略做延时
  68   1           SDA=1;                //SCL=1时，将SDA拉高即产生停止信号 
  69   1           _nop_();                   //略做延时
  70   1           _nop_();                   //略做延时
  71   1           SCL=0;                //将SCL=0，完成启动信号操作      
  72   1      } 
  73          //---------------------------------------
  74          //名称：向IIC总线写入1个字节函数
  75          //适用：给力者GL9单片机开发学习系统
  76          //公司：宁波芯动电子有限公司
  77          //网址：www.MovingChip.com
  78          //日期：20120914
  79          //---------------------------------------
  80          void Write1Byte(unsigned char Buf1)
  81          { 
  82   1           unsigned char k;      //1个字节要分8次写入，需要定义一个寄存器用来计数
  83   1           for(k=0;k<8;k++)      //做一个8次的循环，每次写入1位，需要写8次
  84   1           {
  85   2               if(Buf1&0x80)     //从最高位开始写 
  86   2               {
  87   3                   SDA=1;        //如果欲写入数据为1，就将数据线置1
  88   3               }
  89   2               else
  90   2               {
  91   3                   SDA=0;        //如果欲写入数据为0，就将数据线写0 
  92   3               }
  93   2               _nop_();          //略做延时
  94   2               _nop_();          //略做延时
  95   2               SCL=1;            //时钟线做一个上升沿，将一位数据写入
  96   2               Buf1=Buf1<<1;     //数据左移一位，将下次要写入的位数据移到最高位
  97   2               _nop_();          //略做延时
  98   2               SCL=0;            //将SCL=0，以准备通过上升沿将数据写入
  99   2               _nop_();          //略做延时
 100   2           }
 101   1           SDA=1;                //将SDA=1，准备读应答信号
 102   1           _nop_();              //略做延时
 103   1           SCL=1;                //将SCL=1，做个上升沿准备读应答信号
 104   1           _nop_();              //略做延时
 105   1           _nop_();              //略做延时
 106   1           SCL=0;                //将SCL=0，结束应答信号读操作
 107   1      } 
 108          
 109          //---------------------------------------
 110          //名称：从IIC总线读入1个字节函数
 111          //适用：给力者GL9单片机开发学习系统
 112          //公司：宁波芯动电子有限公司
 113          //网址：www.MovingChip.com
 114          //日期：20120914
 115          //---------------------------------------
 116          unsigned char Read1Byte(void)
 117          { 
C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 3   

 118   1           unsigned char k;      //1个字节要分8次读出，需要定义一个寄存器用来计数
 119   1           unsigned char t=0;    //定义一个寄存器用保存读出数据
 120   1           for(k=0;k<8;k++)      //做一个8次的循环，每次读入1位，需要读8次
 121   1           {
 122   2               t=t<<1;           //数据左移一位，空出最低位以准备保存读入的一位数据
 123   2               SDA=1;            //将SDA写1准备读
 124   2               SCL=1;            //将SCL=1，做个上升沿准备读一位数据
 125   2               _nop_();          //略做延时
 126   2               _nop_();          //略做延时
 127   2               if(SDA==1)        //读一位数据，并判断 
 128   2               {
 129   3                   t=t|0x01;     //如果读入数据为1，就将接收缓冲区最低一位置1
 130   3               }
 131   2               else
 132   2               {
 133   3                   t=t&0xfe;     //如果读入数据为0，就将接收缓冲区最低一位写0
 134   3               }
 135   2               SCL=0;            //SCL恢复为0，结束一位数据读操作
 136   2               _nop_();          //略做延时
 137   2               _nop_();          //略做延时
 138   2           }
 139   1           return t;             //将读入的一个字节返回
 140   1      } 
 141          
 142          //---------------------------------------
 143          //名称：软件模拟IIC向PCF8591指定地址写一个字节函数
 144          //适用：给力者GL9单片机开发学习系统
 145          //公司：宁波芯动电子有限公司
 146          //网址：www.MovingChip.com
 147          //日期：20120914
 148          //---------------------------------------
 149          void WritePCF8591(unsigned char Databuf)
 150          {                          //直接调用本函数即可启动PCF8591的D/A转换
 151   1          IICstart();            //IIC启动信号
 152   1      
 153   1          Write1Byte(0x90);      //发送PCF8591的器件地址和写信号
 154   1      
 155   1          Write1Byte(0x40);      //发送器件子地址
 156   1      
 157   1          Write1Byte(Databuf);   //发送数据
 158   1      
 159   1          IICstop();             //产生IIC停止信号
 160   1      }
 161          
 162          //---------------------------------------
 163          //名称：软件模拟IIC从PCF8563指定地址读一个字节函数
 164          //适用：给力者GL9单片机开发学习系统
 165          //公司：宁波芯动电子有限公司
 166          //网址：www.MovingChip.com
 167          //日期：20120914
 168          //---------------------------------------
 169          unsigned ReadPCF8591(unsigned char Ch)
 170          {                          //直接调用本函数即可从PCF8591的Ch通道读出数据返回
 171   1          unsigned char buf;     //定义一个寄存器用来暂存读出的数据
 172   1          IICstart();            //IIC启动信号
 173   1      
 174   1          Write1Byte(0x90);      //发送PCF8591的器件地址和写信号
 175   1      
 176   1          Write1Byte(0x40|Ch);   //发送器件通道参数Ch=0-3
 177   1      
 178   1          IICstart();            //IIC启动信号
 179   1      
C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 4   

 180   1          Write1Byte(0x91);      //发送PCF8591的器件地址和读信号
 181   1      
 182   1          buf=Read1Byte();//读一个字节数据
 183   1      
 184   1          IICstop();             //产生IIC停止信号
 185   1      
 186   1          return(buf);           //将读出数据返回
 187   1      }
 188          
 189          //---------------------------------------
 190          //名称：1602液晶用延时函数
 191          //适用：给力者GL9单片机开发学习系统
 192          //公司：宁波芯动电子有限公司
 193          //网址：www.MovingChip.com
 194          //日期：20120914
 195          //---------------------------------------
 196          void Delay1602(unsigned int t)
 197          { 
 198   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
 199   1           for(k=0;k<t;k++);    //延时 
 200   1      } 
 201          
 202          //---------------------------------------
 203          //名称：1602液晶忙检测函数
 204          //适用：给力者GL9单片机开发学习系统
 205          //公司：宁波芯动电子有限公司
 206          //网址：www.MovingChip.com
 207          //日期：20120914
 208          //---------------------------------------
 209          void LCD1602_busy(void)
 210          { 
 211   1           P0_7=1;              //将P0.7置1，为读状态做准备 
 212   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 213   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 214   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 215   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
 216   1           E=0;                 //读完以后，恢复E的电平
 217   1      } 
 218          
 219          //---------------------------------------
 220          //名称：1600写命令函数
 221          //适用：给力者GL9单片机开发学习系统
 222          //公司：宁波芯动电子有限公司
 223          //网址：www.MovingChip.com
 224          //日期：20120914
 225          //---------------------------------------
 226          void LCD1602_Write_com(unsigned char combuf)
 227          { 
 228   1           RS=0;                //选择指令寄存器
 229   1           RW=0;                //选择写状态
 230   1           P0=combuf;           //将命令字通过P0口送至DB
 231   1           E=1;                 //E高电平将命令字写入1602液晶
 232   1           E=0;                 //写完以后，恢复E的电平
 233   1      } 
 234          
 235          //---------------------------------------
 236          //名称：1602写命令函数(带忙检测)
 237          //适用：给力者GL9单片机开发学习系统
 238          //公司：宁波芯动电子有限公司
 239          //网址：www.MovingChip.com
 240          //日期：20120914
 241          //---------------------------------------
C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 5   

 242          void LCD1602_Write_com_busy(unsigned char combuf)
 243          { 
 244   1           LCD1602_busy();            //调用忙检测函数
 245   1           LCD1602_Write_com(combuf); //调用忙检测函数
 246   1      } 
 247          
 248          //---------------------------------------
 249          //名称：1602写数据函数(带忙检测)
 250          //适用：给力者GL9单片机开发学习系统
 251          //公司：宁波芯动电子有限公司
 252          //网址：www.MovingChip.com
 253          //日期：20120914
 254          //---------------------------------------
 255          void LCD1602_Write_data_busy(unsigned char databuf)
 256          { 
 257   1           LCD1602_busy();      //调用忙检测函数
 258   1           RS=1;                //选择数据寄存器
 259   1           RW=0;                //选择写状态
 260   1           P0=databuf;          //将命令字通过P0口送至DB
 261   1           E=1;                 //E高电平将命令字写入1602液晶
 262   1           E=0;                 //写完以后，恢复E的电平
 263   1      } 
 264          
 265          //---------------------------------------
 266          //名称：1602液晶显示地址写函数
 267          //适用：给力者GL9单片机开发学习系统
 268          //公司：宁波芯动电子有限公司
 269          //网址：www.MovingChip.com
 270          //日期：20120914
 271          //---------------------------------------
 272          void LCD1602_Write_address(unsigned char x,unsigned char y)
 273          { 
 274   1           x&=0x0f;             //列地址限制在0-15间
 275   1           y&=0x01;             //行地址限制在0-1间
 276   1           if(y==0)             //如果是第一行
 277   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 278   1           else                 //如果是第二行
 279   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 280   1      } 
 281          
 282          //---------------------------------------
 283          //名称：1602液晶初始化函数
 284          //适用：给力者GL9单片机开发学习系统
 285          //公司：宁波芯动电子有限公司
 286          //网址：www.MovingChip.com
 287          //日期：20120914
 288          //---------------------------------------
 289          void LCD1602_init(void)
 290          { 
 291   1           Delay1602(1500);               //调用延时函数
 292   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 293   1           Delay1602(500);                //调用延时函数
 294   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 295   1           Delay1602(500);                //调用延时函数
 296   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 297   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 298   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 299   1           LCD1602_Write_com_busy(0x01);  //清屏
 300   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 301   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 302   1      } 
 303          
C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 6   

 304          //---------------------------------------
 305          //名称：1602液晶指定地址显示函数
 306          //适用：给力者GL9单片机开发学习系统
 307          //公司：宁波芯动电子有限公司
 308          //网址：www.MovingChip.com
 309          //日期：20120914
 310          //---------------------------------------
 311          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 312          { 
 313   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 314   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 315   1      } 
 316          
 317          //---------------------------------------
 318          //名称: 主函数
 319          //适用：给力者GL9单片机开发学习系统
 320          //公司：宁波芯动电子有限公司
 321          //网址：www.MovingChip.com
 322          //日期：20120914
 323          //---------------------------------------
 324          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 325          {
 326   1      
 327   1          LCD1602_init();        //调用1602液晶初始化函数
 328   1      
 329   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
 330   1          {
 331   2              ADbuf=ReadPCF8591(1);     //将AIN1通道A/D转换结果暂存在ADbuf
 332   2      
 333   2          //**给1602显示寄存器赋值(0x00-0xFF)**
 334   2              DISbuf=ADbuf;           //
 335   2          //***********************************
 336   2      
 337   2          //***1602液晶显示0x00-0xFF***
 338   2              LCD1602_Disp(0,0,'0');      //在第1行的第1列显示0
 339   2              LCD1602_Disp(1,0,'x');      //在第1行的第2列显示x
 340   2              j=DISbuf>>4;                //把要显示内容的高4位移到低4位上
 341   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 342   2              {
 343   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 344   3              }
 345   2              else
 346   2              {
 347   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 348   3              }
 349   2              LCD1602_Disp(2,0,j);        //在第1行的第3列显示高4位的十六进制数字
 350   2              j=DISbuf&0x0F;              //把要显示内容的高4位屏蔽掉，保留低4位
 351   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 352   2              {
 353   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 354   3              }
 355   2              else
 356   2              {
 357   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 358   3              }
 359   2              LCD1602_Disp(3,0,j);        //在第1行的第4列显示低4位的十六进制数字
 360   2          //***********************
 361   2      
 362   2          }
 363   1      }
 364          

C51 COMPILER V7.00  TEST55                                                                 09/18/2012 21:12:08 PAGE 7   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    392    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
