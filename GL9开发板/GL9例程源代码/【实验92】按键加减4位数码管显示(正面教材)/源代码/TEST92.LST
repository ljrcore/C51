C51 COMPILER V7.00  TEST92                                                                 01/25/2014 16:16:50 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST92
OBJECT MODULE PLACED IN TEST92.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST92.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //数码管字形表，供显示时查询
  13          unsigned char code LED[10]=
  14          {                          //定义表格一定要使用code，这样会做到程序存储区中
  15              0x3F,                  //"0"的字形表，0B00111111
  16              0x06,                  //"1"的字形表，0B00000110
  17              0x5B,                  //"2"的字形表，0B01011011
  18              0x4F,                  //"3"的字形表，0B01001111
  19              0x66,                  //"4"的字形表，0B01100110
  20              0x6D,                  //"5"的字形表，0B01101101
  21              0x7D,                  //"6"的字形表，0B01111101
  22              0x07,                  //"7"的字形表，0B00000111
  23              0x7F,                  //"8"的字形表，0B01111111
  24              0x6F,                  //"9"的字形表，0B01101111
  25          };
  26          
  27          //---------------------------------------
  28          //4位数码管相关I/O设置
  29          sbit U165A0=P0^0;           //U165(74HC138)的A0脚接在P0.0口上
  30          sbit U165A1=P0^1;           //U165(74HC138)的A1脚接在P0.1口上
  31          sbit U165A2=P0^2;           //U165(74HC138)的A2脚接在P0.2口上
  32          //---------------------------------------
  33          
  34          //---------------------------------------
  35          //名称: 主函数
  36          //适用：给力者GL9单片机开发学习系统
  37          //公司：宁波芯动电子有限公司
  38          //网址：www.MovingChip.com
  39          //日期：20140125
  40          //---------------------------------------
  41          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
  42          {
  43   1      
  44   1         unsigned char c=0;     //定义一个char型变量，做延时用
  45   1         unsigned char d=0;     //定义一个char型变量，控制显示位置
  46   1         unsigned int  f=0;     //定义一个int型变量，显示内容用，显示内容0-9999
  47   1              unsigned char keycon;
  48   1              bit keybit;
  49   1              while(1)               //死循环,单片机初始化后,将一直运行这个死循环
  50   1         {
  51   2      
  52   2            for(c=0;c<250;c++); //做一个0-250的循环，不执行其他操作，只为延时  
  53   2      //----------------------------------------------------------------------------------
  54   2      //以下为按键处理部分
  55   2              if(P1_0==1)         //如果P1键没按下
C51 COMPILER V7.00  TEST92                                                                 01/25/2014 16:16:50 PAGE 2   

  56   2                      {                       
  57   3                              if(keybit==0)
  58   3                              {
  59   4                                      if(++keycon>100) //消除抖动参数，越大消抖效果越好，但是按键越不灵敏
  60   4                                      {
  61   5                                              keycon=0;
  62   5                                              keybit=1;     //时间到达，标志位置1，表示可以接收下一个按键输入了
  63   5                                      }
  64   4                              }
  65   3                              else
  66   3                                      keycon=0;                       
  67   3                      }          
  68   2                      else               //如果P1键按下
  69   2                      {
  70   3                              if(keybit==1)   //如果标志位有效，说明这个是有效按键
  71   3                              {
  72   4                                      keybit=0;               //清除标志位，以保证每次按键只处理一次
  73   4                                      if(++f>9999) f=0;//加1并限制范围为0-9999，因为4位数码管只能显示到9999
  74   4                              }
  75   3                 }    
  76   2      //以上为按键部分
  77   2      //-----------------------------------------------------------------------------------
  78   2      //以下为显示部分，按键部分处理f的数值，显示部分负责显示
  79   2            P2=0;              //关一次显示，以免显示出鬼影
  80   2            if(++d>3) d=0;     //先将d加1，然后判断是否大于3，大于3归零
  81   2            if(d==0)           //如果d=0,显示千位
  82   2            {
  83   3               P0=0x1b;       //U165A0=1,U165A1=1,U165A2=0选通数码管的千位进行显示
  84   3               P2=LED[f/1000];          //将要显示的f的千位提取出来查表后送显示 
  85   3            }
  86   2            else if(d==1)      //如果d=1,显示百位
  87   2            {
  88   3               P0=0x1a;       //U165A0=0,U165A1=1,U165A2=0选通数码管的百位进行显示
  89   3               P2=LED[(f%1000)/100];    //将要显示的f的百位提取出来查表后送显示
  90   3            }
  91   2            else if(d==2)      //如果d=2,显示十位
  92   2            {
  93   3              P0=0x19;       //U165A0=1,U165A1=0,U165A2=0选通数码管的十位进行显示
  94   3               P2=LED[(f%100)/10];      //将要显示的f的十位提取出来查表后送显示
  95   3            }
  96   2            else               //如果d=3,显示个位
  97   2            {
  98   3               P0=0x18;       //U165A0=0,U165A1=0,U165A2=0选通数码管的个位进行显示
  99   3               P2=LED[f%10];            //将要显示的f的个位提取出来查表后送显示
 100   3            }
 101   2      //以上为显示部分
 102   2         }
 103   1      }
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
