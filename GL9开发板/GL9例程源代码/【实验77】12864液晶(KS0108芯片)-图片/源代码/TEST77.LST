C51 COMPILER V7.00  TEST77                                                                 09/18/2012 22:03:53 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST77
OBJECT MODULE PLACED IN TEST77.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST77.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          #include <Intrins.h>    //因为本例中用到空操作_nop_();所以必须调用这个头文件
  11          
  12          //---------------------------------------
  13          //12864液晶相关I/O设置
  14          sbit RS=P2^0;                   //寄存器选择端 H:数据寄存器，L:命令寄存器
  15          sbit RW=P2^1;                   //读/写选择信号，R/W=1：读选通，R/W=0：写选通
  16          sbit E =P2^2;                   //读写使能信号，在E下降沿，数据被锁存(写)入,在E高电平器件，数据被读出
  17          sbit CS1=P2^3;                  //前64点选择，1有效
  18          sbit CS2=P2^4;                  //后64点选择，1有效
  19          sbit RST=P2^5;                  //复位信号
  20          sbit DB0=P0^7;                  //
  21          sbit DB1=P0^6;                  //
  22          sbit DB2=P0^5;                  //
  23          sbit DB3=P0^4;                  //
  24          sbit DB4=P0^3;                  //
  25          sbit DB5=P0^2;                  //
  26          sbit DB6=P0^1;                  //
  27          sbit DB7=P0^0;                  //
  28          //---------------------------------------
  29          
  30          //用取模软件将要显示图片的数据提出来
  31          unsigned char code picture[]={
  32          /*--  调入了一幅图像：I:\单片机工具\取字模软件\BMP图片\位图(1bit)\05.bmp  --*/
  33          /*--  宽度x高度=128x64  --*/
  34          0x00,0x40,0x04,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x00,
  35          0x0B,0x00,0x04,0x02,0x04,0x02,0x00,0x00,0x00,0x06,0x01,0x06,0x01,0x04,0x7D,0x54,
  36          0xFB,0x7A,0xA8,0x59,0xA0,0x00,0x00,0x01,0x20,0x40,0x20,0x59,0xAC,0x53,0xAE,0xD1,
  37          0xEE,0x75,0xFA,0xDF,0xED,0xF7,0xFF,0xFE,0xFE,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,
  38          0xFF,0xFF,0xFF,0xEF,0xEF,0xF7,0xFF,0xB5,0x75,0x6B,0x52,0xAA,0x15,0x22,0x15,0x09,
  39          0x06,0x01,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
  40          0x0A,0x17,0xD7,0x3F,0xF9,0xFB,0xF5,0xFE,0xFF,0xEE,0xF9,0x9E,0xF0,0xE8,0x84,0x01,
  41          0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,
  42          0x20,0x81,0x00,0x00,0x80,0x00,0x03,0x00,0x01,0xC8,0x11,0xE8,0x81,0x32,0x08,0x40,
  43          0x80,0x40,0x80,0x00,0x80,0x00,0x80,0x10,0x80,0x04,0x80,0xE0,0xF1,0x35,0xAD,0x43,
  44          0x82,0x05,0x1A,0xC3,0x82,0x26,0x18,0x44,0x40,0x50,0xB5,0xFA,0xED,0xFF,0xFB,0xFD,
  45          0xFF,0xFF,0xFF,0xFF,0xBF,0x63,0x13,0x2B,0x13,0x47,0xD7,0xFF,0xFF,0x7F,0xDF,0x3F,
  46          0x6F,0x3F,0x2F,0x3F,0x07,0x1F,0x03,0x0E,0x02,0x05,0x02,0x04,0x02,0x04,0x04,0x04,
  47          0x10,0x48,0xB0,0x40,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  48          0x00,0x00,0x00,0x43,0x2C,0x57,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFE,0xE8,
  49          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x10,0x30,0x00,0x00,
  50          0x20,0x10,0x03,0x08,0x20,0x00,0x00,0x00,0x01,0x00,0x03,0x00,0x00,0x00,0x20,0xD0,
  51          0x05,0x80,0x5F,0xA0,0x59,0xA0,0x5D,0xE6,0x3D,0x3D,0x4B,0xF8,0xAF,0x52,0xAF,0x4C,
  52          0x85,0xAA,0x43,0x10,0x00,0x80,0x20,0x50,0x20,0x00,0x00,0x90,0x61,0x9F,0x6F,0xFF,
  53          0x7F,0x97,0xFF,0xFF,0xFF,0xFF,0xDF,0xFF,0xBF,0x2F,0x0B,0x05,0x02,0x01,0x00,0x00,
  54          0x00,0x00,0x00,0x00,0x00,0x04,0x02,0x0D,0x0E,0x16,0x0A,0x96,0x02,0x36,0x7C,0x3E,
  55          0xF8,0x28,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x40,
C51 COMPILER V7.00  TEST77                                                                 09/18/2012 22:03:53 PAGE 2   

  56          0xA0,0x50,0xA0,0x45,0xF0,0x82,0x95,0x5F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  57          0xAA,0x00,0x08,0x20,0x00,0x04,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
  58          0x01,0x20,0x00,0x04,0x02,0x00,0xC0,0x00,0x40,0x00,0x70,0x0C,0x34,0x0D,0x32,0x4D,
  59          0x22,0x5F,0x60,0x1A,0x25,0x48,0xD3,0x22,0xD0,0x2A,0x84,0x2F,0x00,0x03,0x08,0x01,
  60          0x04,0x00,0x03,0x00,0x6C,0x31,0xD8,0xF8,0xF8,0xF8,0xE4,0xDC,0xFB,0xFF,0x0D,0xF2,
  61          0xBD,0xEF,0xFF,0xFF,0xBF,0x2F,0x1B,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  62          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01,
  63          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0xA1,0x10,0x40,0x71,
  64          0xF0,0xE2,0xF0,0xE0,0x89,0x70,0x87,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  65          0x6A,0x90,0x6E,0x11,0x29,0x58,0xAC,0x60,0x9C,0x64,0x8C,0x78,0x88,0x10,0x00,0x01,
  66          0x58,0xA0,0xA8,0x78,0x10,0xA8,0x13,0xCC,0x01,0x02,0x40,0x80,0x00,0x80,0x00,0x08,
  67          0x01,0x01,0x02,0x01,0x01,0x03,0x00,0x03,0x04,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
  68          0x00,0x00,0x00,0xD4,0xE5,0xF9,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA,0xFF,0xFF,
  69          0xFF,0xAF,0x2B,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  70          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x40,0x80,0x60,
  71          0xE0,0x20,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,
  72          0x01,0x01,0x07,0x03,0xF0,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,
  73          0x02,0x04,0x83,0x04,0x02,0x00,0x01,0x04,0x13,0x02,0x01,0x01,0x00,0x00,0x00,0x00,
  74          0x01,0x74,0x0A,0xD5,0x40,0xAA,0x50,0xA0,0x50,0xA0,0x00,0x00,0x01,0x02,0x00,0x00,
  75          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  76          0x00,0x00,0x00,0x7C,0xFC,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEB,0xFF,0xFF,0xFF,
  77          0xFF,0xFA,0xE8,0xA0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  78          0x00,0x00,0x00,0x00,0x04,0x0C,0x06,0x78,0x08,0xD8,0x10,0xB8,0x20,0x68,0x60,0xC0,
  79          0xA0,0x46,0x81,0x02,0x05,0x02,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  80          0x00,0xC0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xAF,0x43,0x00,
  81          0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,
  82          0x00,0x00,0x00,0x03,0x04,0x1B,0x05,0x1A,0x05,0x0A,0x04,0x00,0x00,0x00,0x00,0x00,
  83          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  84          0x00,0x00,0x00,0x55,0xFF,0x3F,0xD7,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,
  85          0xFF,0xFF,0xFF,0xFF,0xFF,0xEA,0xB4,0x48,0xA0,0x40,0x80,0x00,0x00,0x00,0x00,0x00,
  86          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x05,0x00,0x1C,0x02,0x38,0x04,
  87          0x11,0x09,0x07,0x06,0x0A,0x00,0x00,0x00,0x40,0x00,0xD0,0xC0,0xF0,0xF8,0xFC,0xFF,
  88          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x2B,0xC0,0x00,0x60,
  89          0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,0x00,
  90          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  91          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  92          0x00,0x00,0x00,0x01,0x96,0x51,0xFD,0xFB,0xFF,0xFF,0xFB,0xF7,0x80,0xC1,0x83,0xE0,
  93          0xC7,0xF7,0xF7,0xFF,0xA7,0x5B,0xEE,0xA9,0x06,0xB9,0x46,0x29,0x56,0x28,0x54,0xA8,
  94          0x50,0xA8,0x50,0xA0,0x50,0x80,0x40,0x80,0x20,0x80,0x40,0x80,0x00,0xC0,0xA0,0xD0,
  95          0xC0,0xD0,0xE8,0xF4,0xF0,0xF6,0xF8,0xFD,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  96          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0xEF,0x7F,0x8B,0x74,0x0B,0x54,0xAA,
  97          0x1C,0xF6,0x76,0xBB,0x64,0x19,0x35,0x00,0x11,0x09,0x2C,0x03,0x00,0x00,0x00,0x00,
  98          };
  99          //---------------------------------------
 100          //名称：液晶用延时函数
 101          //适用：给力者GL9单片机开发学习系统
 102          //公司：宁波芯动电子有限公司
 103          //网址：www.MovingChip.com
 104          //日期：20120918
 105          //---------------------------------------
 106          void delay(unsigned int t)
 107          {
 108   1              unsigned int i;
 109   1              for(i=0;i<t;i++);       
 110   1      }
 111          //---------------------------------------
 112          //名称：字节内位数据位置转换函数
 113          //适用：给力者GL9单片机开发学习系统
 114          //公司：宁波芯动电子有限公司
 115          //网址：www.MovingChip.com
 116          //日期：20120918
 117          //---------------------------------------
C51 COMPILER V7.00  TEST77                                                                 09/18/2012 22:03:53 PAGE 3   

 118          unsigned char num(unsigned char dat)
 119          {
 120   1         unsigned char val;
 121   1              val = ((dat & 0x01) << 7) | ((dat & 0x02) << 5) | ((dat & 0x04) << 3) | ((dat & 0x08) << 1) |
 122   1         ((dat & 0x10) >> 1) | ((dat & 0x20) >> 3) | ((dat & 0x40) >> 5) | ((dat & 0x80) >> 7);
 123   1         return  val;
 124   1      } 
 125          //---------------------------------------
 126          //名称：写命令函数
 127          //适用：给力者GL9单片机开发学习系统
 128          //公司：宁波芯动电子有限公司
 129          //网址：www.MovingChip.com
 130          //日期：20120918
 131          //---------------------------------------
 132          void write_com(unsigned char cmdcode)
 133          {                                          
 134   1              RS=0;                           //选择命令寄存器
 135   1              RW=0;                           //写选通
 136   1              P0=num(cmdcode);    //将命令写入总线
 137   1              _nop_();            //空操作，做短暂的延时
 138   1              E=1;                    //E的下降沿，数据写入
 139   1              _nop_();            //空操作，做短暂的延时
 140   1              E=0;                    //E的下降沿，数据写入
 141   1      }
 142          //---------------------------------------
 143          //名称：写数据函数
 144          //适用：给力者GL9单片机开发学习系统
 145          //公司：宁波芯动电子有限公司
 146          //网址：www.MovingChip.com
 147          //日期：20120918
 148          //---------------------------------------
 149          void write_data(unsigned char Rsspdata)
 150          {
 151   1      
 152   1              RS=1;                           //选择数据寄存器
 153   1              RW=0;                           //写选通
 154   1              P0=num(Rsspdata);   //将数据写入总线
 155   1              _nop_();            //空操作，做短暂的延时
 156   1              E=1;                    //E的下降沿，数据写入
 157   1              _nop_();            //空操作，做短暂的延时
 158   1              E=0;                    //E的下降沿，数据写入
 159   1      } 
 160          //---------------------------------------
 161          //名称：清屏函数
 162          //适用：给力者GL9单片机开发学习系统
 163          //公司：宁波芯动电子有限公司
 164          //网址：www.MovingChip.com
 165          //日期：20120918
 166          //---------------------------------------
 167          void Clr_Scr(void)
 168          {
 169   1              unsigned char j,k;
 170   1              CS1=1;                                                  //左半屏选通
 171   1              CS2=1;                                                  //右半屏选通
 172   1              write_com(0x40+0);         //将列地址写入  
 173   1                      //列地址格式为: 0 1 C5 C4 C3 C2 C1 C0,其中C5-C0=0~0x3f
 174   1                      //分别代表1~64列
 175   1              for(k=0;k<8;k++)
 176   1              {
 177   2                      write_com(0xb8+k);     //将行地址写入   
 178   2                      //行地址格式为: 1 0 1 1 1 P2 P1 P0,其中P3-C0=0~0x07
 179   2                      //分别代表1~8行
C51 COMPILER V7.00  TEST77                                                                 09/18/2012 22:03:53 PAGE 4   

 180   2      
 181   2                      for(j=0;j<64;j++)               //每行的64列都写0，因为选了左右两屏，
 182   2                      {
 183   3                              write_data(0x00);       //64列同时写0
 184   3                      }
 185   2              }
 186   1      } 
 187          //---------------------------------------
 188          //名称：地址写入函数
 189          //适用：给力者GL9单片机开发学习系统
 190          //公司：宁波芯动电子有限公司
 191          //网址：www.MovingChip.com
 192          //日期：20120918
 193          //---------------------------------------
 194          void werite_x_y(unsigned char x,unsigned char y)
 195          {
 196   1              y=y&0x7f;                                 //限定范围，列不能超过128
 197   1              x=x&0x07;                                 //限定范围，行不能超过8
 198   1              if(y<64)                  //如果列小于64
 199   1              {
 200   2                      CS1=1;                 //选通左半屏
 201   2                      CS2=0;                 //关闭右半屏
 202   2                      write_com(0x40+y);     //将列地址写入  
 203   2                      //列地址格式为: 0 1 C5 C4 C3 C2 C1 C0,其中C5-C0=0~0x3f
 204   2                      //分别代表1~64列
 205   2              }
 206   1              else
 207   1              {
 208   2                      CS1=0;                 //关闭左半屏
 209   2                      CS2=1;                 //选通右半屏
 210   2                      y&=0x3f;
 211   2                      write_com(0x40+y);     //将列地址写入  
 212   2                      //列地址格式为: 0 1 C5 C4 C3 C2 C1 C0,其中C5-C0=0~0x3f
 213   2                      //分别代表1~64列        
 214   2              }
 215   1              write_com(0xb8+x);     //将行地址写入   
 216   1                      //行地址格式为: 1 0 1 1 1 P2 P1 P0,其中P3-C0=0~0x07
 217   1                      //分别代表1~8行
 218   1      } 
 219          
 220          //---------------------------------------
 221          //名称：全屏写图片函数
 222          //适用：给力者GL9单片机开发学习系统
 223          //公司：宁波芯动电子有限公司
 224          //网址：www.MovingChip.com
 225          //日期：20120918
 226          //---------------------------------------
 227          void write_bmp(void)
 228          {
 229   1              unsigned char j=0,i=0;  
 230   1              for(j=0;j<8;j++)
 231   1              {
 232   2                      werite_x_y(j,0);
 233   2                      for(i=0;i<64;i++) write_data(picture[j*128+i]);
 234   2                      werite_x_y(j,64);
 235   2                      for(i=64;i<128;i++) write_data(picture[j*128+i]);
 236   2              }
 237   1      }
 238          //---------------------------------------
 239          //名称：12864初始化函数
 240          //适用：给力者GL9单片机开发学习系统
 241          //公司：宁波芯动电子有限公司
C51 COMPILER V7.00  TEST77                                                                 09/18/2012 22:03:53 PAGE 5   

 242          //网址：www.MovingChip.com
 243          //日期：20120918
 244          //--------------------------------------- 
 245          void init_lcd(void)
 246          {          
 247   1              RST=0;                 //液晶复位
 248   1              delay(250);            //适当延时
 249   1              RST=1;                 //复位结束
 250   1              CS1=1;                                    //左半屏选通
 251   1              CS2=1;                                    //右半屏选通  
 252   1              delay(250);            //适当延时
 253   1              write_com(0x3f);       //显示开
 254   1      }  
 255          //---------------------------------------
 256          //名称: 主函数
 257          //适用：给力者GL9单片机开发学习系统
 258          //公司：宁波芯动电子有限公司
 259          //网址：www.MovingChip.com
 260          //日期：20120918
 261          //---------------------------------------       
 262          void main()
 263          {  
 264   1              init_lcd();                                       //初始化液晶
 265   1              Clr_Scr();                                        //清屏  
 266   1              write_bmp();            //调用图片写函数
 267   1              while(1)
 268   1              {                       
 269   2                      
 270   2              }
 271   1      }
 272          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    301    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
