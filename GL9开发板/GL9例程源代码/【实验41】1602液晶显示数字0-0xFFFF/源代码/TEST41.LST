C51 COMPILER V7.00  TEST41                                                                 09/19/2012 08:51:04 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST41
OBJECT MODULE PLACED IN TEST41.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST41.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //1602液晶相关I/O设置
  13          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  14          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  15          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  16          //---------------------------------------
  17          
  18          //---------------------------------------
  19          //1602液晶寄存器设置
  20          unsigned int  DISbuf;     //设置16位的unsigend int型寄存器用来暂存1602要显示的内容
  21          unsigned char j;          //设置8位的unsigend char型寄存器用来暂存转换数据
  22          //---------------------------------------
  23          
  24          //---------------------------------------
  25          //名称：1602液晶用延时函数
  26          //适用：给力者GL9单片机开发学习系统
  27          //公司：宁波芯动电子有限公司
  28          //网址：www.MovingChip.com
  29          //日期：20120914
  30          //---------------------------------------
  31          void Delay1602(unsigned int t)
  32          { 
  33   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
  34   1           for(k=0;k<t;k++);    //延时 
  35   1      } 
  36          
  37          //---------------------------------------
  38          //名称：1602液晶忙检测函数
  39          //适用：给力者GL9单片机开发学习系统
  40          //公司：宁波芯动电子有限公司
  41          //网址：www.MovingChip.com
  42          //日期：20120914
  43          //---------------------------------------
  44          void LCD1602_busy(void)
  45          { 
  46   1           P0_7=1;              //将P0.7置1，为读状态做准备 
  47   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  48   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  49   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  50   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
  51   1           E=0;                 //读完以后，恢复E的电平
  52   1      } 
  53          
  54          //---------------------------------------
  55          //名称：1600写命令函数
C51 COMPILER V7.00  TEST41                                                                 09/19/2012 08:51:04 PAGE 2   

  56          //适用：给力者GL9单片机开发学习系统
  57          //公司：宁波芯动电子有限公司
  58          //网址：www.MovingChip.com
  59          //日期：20120914
  60          //---------------------------------------
  61          void LCD1602_Write_com(unsigned char combuf)
  62          { 
  63   1           RS=0;                //选择指令寄存器
  64   1           RW=0;                //选择写状态
  65   1           P0=combuf;           //将命令字通过P0口送至DB
  66   1           E=1;                 //E高电平将命令字写入1602液晶
  67   1           E=0;                 //写完以后，恢复E的电平
  68   1      } 
  69          
  70          //---------------------------------------
  71          //名称：1602写命令函数(带忙检测)
  72          //适用：给力者GL9单片机开发学习系统
  73          //公司：宁波芯动电子有限公司
  74          //网址：www.MovingChip.com
  75          //日期：20120914
  76          //---------------------------------------
  77          void LCD1602_Write_com_busy(unsigned char combuf)
  78          { 
  79   1           LCD1602_busy();            //调用忙检测函数
  80   1           LCD1602_Write_com(combuf); //调用忙检测函数
  81   1      } 
  82          
  83          //---------------------------------------
  84          //名称：1602写数据函数(带忙检测)
  85          //适用：给力者GL9单片机开发学习系统
  86          //公司：宁波芯动电子有限公司
  87          //网址：www.MovingChip.com
  88          //日期：20120914
  89          //---------------------------------------
  90          void LCD1602_Write_data_busy(unsigned char databuf)
  91          { 
  92   1           LCD1602_busy();      //调用忙检测函数
  93   1           RS=1;                //选择数据寄存器
  94   1           RW=0;                //选择写状态
  95   1           P0=databuf;          //将命令字通过P0口送至DB
  96   1           E=1;                 //E高电平将命令字写入1602液晶
  97   1           E=0;                 //写完以后，恢复E的电平
  98   1      } 
  99          
 100          //---------------------------------------
 101          //名称：1602液晶显示地址写函数
 102          //适用：给力者GL9单片机开发学习系统
 103          //公司：宁波芯动电子有限公司
 104          //网址：www.MovingChip.com
 105          //日期：20120914
 106          //---------------------------------------
 107          void LCD1602_Write_address(unsigned char x,unsigned char y)
 108          { 
 109   1           x&=0x0f;             //列地址限制在0-15间
 110   1           y&=0x01;             //行地址限制在0-1间
 111   1           if(y==0)             //如果是第一行
 112   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 113   1           else                 //如果是第二行
 114   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 115   1      } 
 116          
 117          //---------------------------------------
C51 COMPILER V7.00  TEST41                                                                 09/19/2012 08:51:04 PAGE 3   

 118          //名称：1602液晶初始化函数
 119          //适用：给力者GL9单片机开发学习系统
 120          //公司：宁波芯动电子有限公司
 121          //网址：www.MovingChip.com
 122          //日期：20120914
 123          //---------------------------------------
 124          void LCD1602_init(void)
 125          { 
 126   1           Delay1602(1500);               //调用延时函数
 127   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 128   1           Delay1602(500);                //调用延时函数
 129   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 130   1           Delay1602(500);                //调用延时函数
 131   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 132   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 133   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 134   1           LCD1602_Write_com_busy(0x01);  //清屏
 135   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 136   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 137   1      } 
 138          
 139          //---------------------------------------
 140          //名称：1602液晶指定地址显示函数
 141          //适用：给力者GL9单片机开发学习系统
 142          //公司：宁波芯动电子有限公司
 143          //网址：www.MovingChip.com
 144          //日期：20120914
 145          //---------------------------------------
 146          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 147          { 
 148   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 149   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 150   1      } 
 151          
 152          //---------------------------------------
 153          //名称: 主函数
 154          //适用：给力者GL9单片机开发学习系统
 155          //公司：宁波芯动电子有限公司
 156          //网址：www.MovingChip.com
 157          //日期：20120914
 158          //---------------------------------------
 159          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 160          {
 161   1      
 162   1          LCD1602_init();        //调用1602液晶初始化函数
 163   1      
 164   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
 165   1          {
 166   2      
 167   2          //**给1602显示寄存器赋值(0x000-0xFFF)**
 168   2              DISbuf=0xA2DE;              //比如说，想显示0xA2DE，直接赋值给它就可以了
 169   2          //**************************************
 170   2      
 171   2          //***1602液晶显示0x00-0xFFF***
 172   2              LCD1602_Disp(0,0,'0');      //在第1行的第1列显示0
 173   2              LCD1602_Disp(1,0,'x');      //在第1行的第2列显示x
 174   2              j=DISbuf>>12;               //把要显示内容的最高4位右移到最低4位上
 175   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 176   2              {
 177   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 178   3              }
 179   2              else
C51 COMPILER V7.00  TEST41                                                                 09/19/2012 08:51:04 PAGE 4   

 180   2              {
 181   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 182   3              }
 183   2              LCD1602_Disp(2,0,j);        //在第1行的第3列显示最高4位的十六进制数字
 184   2              j=(DISbuf>>8)&0x0F;         //把要显示内容的次高4位右移到低4位上，屏蔽其他位
 185   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 186   2              {
 187   3              j+='0';                     //0-9的数据以0为基点进行偏移即可
 188   3              }
 189   2              else
 190   2              {
 191   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 192   3              }
 193   2              LCD1602_Disp(3,0,j);        //在第1行的第4列显示次高4位的十六进制数字
 194   2              j=(DISbuf>>4)&0x0F;         //把要显示内容的次低4位右移到低4位上，屏蔽其他位
 195   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 196   2              {
 197   3              j+='0';                     //0-9的数据以0为基点进行偏移即可
 198   3              }
 199   2              else
 200   2              {
 201   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 202   3              }
 203   2              LCD1602_Disp(4,0,j);        //在第1行的第5列显示次低4位的十六进制数字
 204   2              j=DISbuf&0x0F;              //把要显示内容的高12位屏蔽掉，保留低4位
 205   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 206   2              {
 207   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 208   3              }
 209   2              else
 210   2              {
 211   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 212   3              }
 213   2              LCD1602_Disp(5,0,j);        //在第1行的第6列显示低4位的十六进制数字
 214   2          //****************************
 215   2      
 216   2          }
 217   1      }
 218          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    317    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
