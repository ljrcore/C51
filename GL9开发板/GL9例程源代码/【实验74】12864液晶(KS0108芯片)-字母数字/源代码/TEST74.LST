C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST74
OBJECT MODULE PLACED IN TEST74.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST74.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          #include <Intrins.h>    //因为本例中用到空操作_nop_();所以必须调用这个头文件
  11          
  12          //---------------------------------------
  13          //12864液晶相关I/O设置
  14          sbit RS=P2^0;                   //寄存器选择端 H:数据寄存器，L:命令寄存器
  15          sbit RW=P2^1;                   //读/写选择信号，R/W=1：读选通，R/W=0：写选通
  16          sbit E =P2^2;                   //读写使能信号，在E下降沿，数据被锁存(写)入,在E高电平器件，数据被读出
  17          sbit CS1=P2^3;                  //前64点选择，1有效
  18          sbit CS2=P2^4;                  //后64点选择，1有效
  19          sbit RST=P2^5;                  //复位信号
  20          sbit DB0=P0^7;                  //
  21          sbit DB1=P0^6;                  //
  22          sbit DB2=P0^5;                  //
  23          sbit DB3=P0^4;                  //
  24          sbit DB4=P0^3;                  //
  25          sbit DB5=P0^2;                  //
  26          sbit DB6=P0^1;                  //
  27          sbit DB7=P0^0;                  //
  28          //---------------------------------------
  29          
  30          //因为液晶无字库，数字和字库的字形需要用软件做出
  31          unsigned char code egk[]={
  32          /*--  文字:  0  --*/
  33          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  34          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,
  35          
  36          /*--  文字:  1  --*/
  37          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  38          0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
  39          
  40          /*--  文字:  2  --*/
  41          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  42          0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,
  43          
  44          /*--  文字:  3  --*/
  45          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  46          0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,
  47          
  48          /*--  文字:  4  --*/
  49          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  50          0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,
  51          
  52          /*--  文字:  5  --*/
  53          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  54          0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,
  55          
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 2   

  56          /*--  文字:  6  --*/
  57          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  58          0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,
  59          
  60          /*--  文字:  7  --*/
  61          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  62          0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,
  63          
  64          /*--  文字:  8  --*/
  65          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  66          0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,
  67          
  68          /*--  文字:  9  --*/
  69          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  70          0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,
  71          
  72          /*--  文字:  a  --10*/
  73          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  74          0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,
  75          
  76          /*--  文字:  b  --11*/
  77          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  78          0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,
  79          
  80          /*--  文字:  c  --12*/
  81          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  82          0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,
  83          
  84          /*--  文字:  d  --13*/
  85          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  86          0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,
  87          
  88          /*--  文字:  e  --*/
  89          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  90          0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,
  91          
  92          /*--  文字:  f  --*/
  93          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  94          0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
  95          
  96          /*--  文字:  g  --16*/
  97          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
  98          0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,
  99          
 100          /*--  文字:  h  --*/
 101          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 102          0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,
 103          
 104          /*--  文字:  i  --*/
 105          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 106          0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 107          
 108          /*--  文字:  j  --19*/
 109          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 110          0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,
 111          
 112          /*--  文字:  k  --*/
 113          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 114          0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,
 115          
 116          /*--  文字:  l  --*/
 117          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 3   

 118          0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 119          
 120          /*--  文字:  m  --22*/
 121          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 122          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,
 123          
 124          /*--  文字:  n  --23*/
 125          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 126          0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,
 127          
 128          /*--  文字:  o  --24*/
 129          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 130          0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,
 131          
 132          /*--  文字:  p  --*/
 133          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 134          0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,
 135          
 136          /*--  文字:  q  --*/
 137          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 138          0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,
 139          
 140          /*--  文字:  r  --*/
 141          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 142          0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,
 143                                                                                                                                                                     
 144          /*--  文字:  s  --*/
 145          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 146          0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,
 147          
 148          /*--  文字:  t  --*/
 149          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 150          0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,
 151          
 152          /*--  文字:  u  --30*/
 153          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 154          0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,
 155          
 156          /*--  文字:  v  --*/
 157          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 158          0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,
 159          
 160          /*--  文字:  w  --*/
 161          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 162          0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,
 163          
 164          /*--  文字:  x  --*/
 165          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 166          0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,
 167          
 168          /*--  文字:  y  --*/
 169          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 170          0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,
 171          
 172          /*--  文字:  z  --35*/
 173          /*--  宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
 174          0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,
 175          
 176          /*--  文字:  A  --*/
 177          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 178          0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,
 179          
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 4   

 180          /*--  文字:  B  --*/
 181          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 182          0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,
 183          
 184          /*--  文字:  C  --*/
 185          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 186          0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,
 187          
 188          /*--  文字:  D  --*/
 189          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 190          0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,
 191          
 192          /*--  文字:  E  --*/
 193          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 194          0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,
 195          
 196          /*--  文字:  F  --*/
 197          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 198          0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,
 199          
 200          /*--  文字:  G  --*/
 201          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 202          0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,
 203          
 204          /*--  文字:  H  --*/
 205          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 206          0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,
 207          
 208          /*--  文字:  I  --*/
 209          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 210          0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
 211          
 212          /*--  文字:  J  --*/
 213          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 214          0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,
 215          
 216          /*--  文字:  K  --*/
 217          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 218          0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,
 219          
 220          /*--  文字:  L  --*/
 221          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 222          0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,
 223          
 224          /*--  文字:  M  --*/
 225          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 226          0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,
 227          
 228          /*--  文字:  N  --*/
 229          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 230          0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,
 231          
 232          /*--  文字:  O  --*/
 233          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 234          0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,
 235          
 236          /*--  文字:  P  --*/
 237          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 238          0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,
 239          
 240          /*--  文字:  Q  --*/
 241          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 5   

 242          0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,
 243          
 244          /*--  文字:  R  --*/
 245          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 246          0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,
 247          
 248          /*--  文字:  S  --*/
 249          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 250          0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,
 251          
 252          /*--  文字:  T  --*/
 253          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 254          0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,
 255          
 256          /*--  文字:  U  --*/
 257          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 258          0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,
 259          
 260          /*--  文字:  V  --*/
 261          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 262          0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,
 263          
 264          /*--  文字:  W  --*/
 265          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 266          0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,
 267          
 268          /*--  文字:  X  --*/
 269          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 270          0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,
 271          
 272          /*--  文字:  Y  --*/
 273          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 274          0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,
 275          
 276          /*--  文字:  Z  --*/
 277          /*--  Trebuchet MS12;  此字体下对应的点阵为：宽x高=8x16   --*/
 278          0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,  
 279          
 280          };
 281          
 282          //---------------------------------------
 283          //名称：液晶用延时函数
 284          //适用：给力者GL9单片机开发学习系统
 285          //公司：宁波芯动电子有限公司
 286          //网址：www.MovingChip.com
 287          //日期：20120918
 288          //---------------------------------------
 289          void delay(unsigned int t)
 290          {
 291   1              unsigned int i;
 292   1              for(i=0;i<t;i++);       
 293   1      }
 294          //---------------------------------------
 295          //名称：字节内位数据位置转换函数
 296          //适用：给力者GL9单片机开发学习系统
 297          //公司：宁波芯动电子有限公司
 298          //网址：www.MovingChip.com
 299          //日期：20120918
 300          //---------------------------------------
 301          unsigned char num(unsigned char dat)
 302          {
 303   1         unsigned char val;
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 6   

 304   1              val = ((dat & 0x01) << 7) | ((dat & 0x02) << 5) | ((dat & 0x04) << 3) | ((dat & 0x08) << 1) |
 305   1         ((dat & 0x10) >> 1) | ((dat & 0x20) >> 3) | ((dat & 0x40) >> 5) | ((dat & 0x80) >> 7);
 306   1         return  val;
 307   1      }       
 308          //---------------------------------------
 309          //名称：写命令函数
 310          //适用：给力者GL9单片机开发学习系统
 311          //公司：宁波芯动电子有限公司
 312          //网址：www.MovingChip.com
 313          //日期：20120918
 314          //---------------------------------------
 315          void write_com(unsigned char cmdcode)
 316          {                                          
 317   1              RS=0;                           //选择命令寄存器
 318   1              RW=0;                           //写选通
 319   1              P0=num(cmdcode);    //将命令写入总线
 320   1              _nop_();            //空操作，做短暂的延时
 321   1              E=1;                    //E的下降沿，数据写入
 322   1              _nop_();            //空操作，做短暂的延时
 323   1              E=0;                    //E的下降沿，数据写入
 324   1      }
 325          
 326          //---------------------------------------
 327          //名称：写数据函数
 328          //适用：给力者GL9单片机开发学习系统
 329          //公司：宁波芯动电子有限公司
 330          //网址：www.MovingChip.com
 331          //日期：20120918
 332          //---------------------------------------
 333          void write_data(unsigned char Rsspdata)
 334          {
 335   1      
 336   1              RS=1;                           //选择数据寄存器
 337   1              RW=0;                           //写选通
 338   1              P0=num(Rsspdata);   //将数据写入总线
 339   1              _nop_();            //空操作，做短暂的延时
 340   1              E=1;                    //E的下降沿，数据写入
 341   1              _nop_();            //空操作，做短暂的延时
 342   1              E=0;                    //E的下降沿，数据写入
 343   1      } 
 344          
 345          //---------------------------------------
 346          //名称：清屏函数
 347          //适用：给力者GL9单片机开发学习系统
 348          //公司：宁波芯动电子有限公司
 349          //网址：www.MovingChip.com
 350          //日期：20120918
 351          //---------------------------------------
 352          void Clr_Scr(void)
 353          {
 354   1              unsigned char j,k;
 355   1              CS1=1;                                                  //左半屏选通
 356   1              CS2=1;                                                  //右半屏选通
 357   1              write_com(0x40+0);         //将列地址写入  
 358   1                      //列地址格式为: 0 1 C5 C4 C3 C2 C1 C0,其中C5-C0=0~0x3f
 359   1                      //分别代表1~64列
 360   1              for(k=0;k<8;k++)
 361   1              {
 362   2                      write_com(0xb8+k);     //将行地址写入   
 363   2                      //行地址格式为: 1 0 1 1 1 P2 P1 P0,其中P3-C0=0~0x07
 364   2                      //分别代表1~8行
 365   2      
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 7   

 366   2                      for(j=0;j<64;j++)               //每行的64列都写0，因为选了左右两屏，
 367   2                      {
 368   3                              write_data(0x00);       //64列同时写0
 369   3                      }
 370   2              }
 371   1      } 
 372                  
 373          //---------------------------------------
 374          //名称：地址写入函数
 375          //适用：给力者GL9单片机开发学习系统
 376          //公司：宁波芯动电子有限公司
 377          //网址：www.MovingChip.com
 378          //日期：20120918
 379          //---------------------------------------
 380          void werite_x_y(unsigned char x,unsigned char y)
 381          {
 382   1              y=y&0x7f;                                 //限定范围，列不能超过128
 383   1              x=x&0x07;                                 //限定范围，行不能超过8
 384   1              if(y<64)                  //如果列小于64
 385   1              {
 386   2                      CS1=1;                 //选通左半屏
 387   2                      CS2=0;                 //关闭右半屏
 388   2                      write_com(0x40+y);     //将列地址写入  
 389   2                      //列地址格式为: 0 1 C5 C4 C3 C2 C1 C0,其中C5-C0=0~0x3f
 390   2                      //分别代表1~64列
 391   2              }
 392   1              else
 393   1              {
 394   2                      CS1=0;                 //关闭左半屏
 395   2                      CS2=1;                 //选通右半屏
 396   2                      y&=0x3f;
 397   2                      write_com(0x40+y);     //将列地址写入  
 398   2                      //列地址格式为: 0 1 C5 C4 C3 C2 C1 C0,其中C5-C0=0~0x3f
 399   2                      //分别代表1~64列        
 400   2              }
 401   1              write_com(0xb8+x);     //将行地址写入   
 402   1                      //行地址格式为: 1 0 1 1 1 P2 P1 P0,其中P3-C0=0~0x07
 403   1                      //分别代表1~8行
 404   1      } 
 405          
 406          //---------------------------------------
 407          //名称：指定位置写8*16字符函数
 408          //适用：给力者GL9单片机开发学习系统
 409          //公司：宁波芯动电子有限公司
 410          //网址：www.MovingChip.com
 411          //日期：20120918
 412          //---------------------------------------
 413          void write_english(unsigned char x,unsigned char y, unsigned char en)
 414          {
 415   1         unsigned char i=0;   
 416   1              werite_x_y(x,y);          //设定起始地址
 417   1      
 418   1              //en为索引，每个数字或英文占用16个字节，首地址为(en-1)*32
 419   1              for(i=0;i<8;i++) write_data(egk[en*16+i]);      //先写上半个字，共8个字节
 420   1      
 421   1              werite_x_y(x+1,y);        //设定起始地址，此次将行地址加1，以便写下行
 422   1      
 423   1              for(i=0;i<8;i++) write_data(egk[en*16+8+i]);    //再写下半个字，共8个字节
 424   1              
 425   1      }
 426          
 427          //---------------------------------------
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 8   

 428          //名称：12864初始化函数
 429          //适用：给力者GL9单片机开发学习系统
 430          //公司：宁波芯动电子有限公司
 431          //网址：www.MovingChip.com
 432          //日期：20120918
 433          //--------------------------------------- 
 434          void init_lcd(void)
 435          {          
 436   1              RST=0;                 //液晶复位
 437   1              delay(250);            //适当延时
 438   1              RST=1;                 //复位结束
 439   1              CS1=1;                                    //左半屏选通
 440   1              CS2=1;                                    //右半屏选通  
 441   1              delay(250);            //适当延时
 442   1              write_com(0x3f);       //显示开
 443   1      }  
 444          //---------------------------------------
 445          //名称: 主函数
 446          //适用：给力者GL9单片机开发学习系统
 447          //公司：宁波芯动电子有限公司
 448          //网址：www.MovingChip.com
 449          //日期：20120918
 450          //---------------------------------------
 451          void main()
 452          {  
 453   1              init_lcd();                                       //初始化液晶
 454   1              Clr_Scr();                                        //清屏
 455   1      
 456   1              write_english(0,0,0);   //第1行第1-8列显示'0'   
 457   1              write_english(0,8,1);   //第1行第9-16列显示'1'
 458   1              write_english(0,16,2);  //第1行第17-24列显示'2'
 459   1              write_english(0,24,3);  //第1行第25-32列显示'3'
 460   1              write_english(0,32,4);  //第1行第33-40列显示'4'
 461   1              write_english(0,40,5);  //第1行第41-48列显示'5'
 462   1              write_english(0,48,6);   //第1行第49-56列显示'6'
 463   1              write_english(0,56,7);   //第1行第57-64列显示'7'
 464   1              write_english(0,64,8);   //第1行第65-72列显示'8'
 465   1              write_english(0,72,9);   //第1行第73-80列显示'9'
 466   1                      
 467   1              write_english(2,0,10);   //第3行第1-8列显示'a'          
 468   1              write_english(2,8,11);   //第3行第9-16列显示'b'
 469   1              write_english(2,16,12);  //第3行第17-24列显示'c'
 470   1              write_english(2,24,13);  //第3行第25-32列显示'd'
 471   1              write_english(2,32,14);  //第3行第33-40列显示'e'
 472   1              write_english(2,40,15);  //第3行第41-48列显示'f'
 473   1              write_english(2,48,16);  //第3行第49-56列显示'g'
 474   1              write_english(2,56,17);  //第3行第57-64列显示'h'
 475   1              write_english(2,64,18);  //第3行第65-72列显示'i'
 476   1              write_english(2,72,19);  //第3行第73-80列显示'j'
 477   1              write_english(2,80,20);  //第3行第81-88列显示'k'
 478   1              write_english(2,88,21);  //第3行第89-96列显示'l'
 479   1              write_english(2,96,22);  //第3行第97-104列显示'm'
 480   1              write_english(2,104,23); //第3行第105-112列显示'n'
 481   1              write_english(2,112,24); //第3行第113-120列显示'o'
 482   1              write_english(2,120,25); //第3行第121-128列显示'p'
 483   1              
 484   1              write_english(5,0,36);   //第6行第1-8列显示'A'          
 485   1              write_english(5,8,37);   //第6行第9-16列显示'B' 
 486   1              write_english(5,16,38);  //第6行第17-24列显示'C' 
 487   1              write_english(5,24,39);  //第6行第25-32列显示'D' 
 488   1              write_english(5,32,40);  //第6行第33-40列显示'E' 
 489   1              write_english(5,40,41);  //第6行第41-48列显示'F' 
C51 COMPILER V7.00  TEST74                                                                 09/18/2012 22:07:35 PAGE 9   

 490   1              write_english(5,48,42);  //第6行第49-56列显示'G' 
 491   1              write_english(5,56,43);  //第6行第57-64列显示'H' 
 492   1              write_english(5,64,44);  //第6行第65-72列显示'I' 
 493   1              write_english(5,72,45);  //第6行第73-80列显示'J' 
 494   1              write_english(5,80,46);  //第6行第81-88列显示'K' 
 495   1              write_english(5,88,47);  //第6行第89-96列显示'L' 
 496   1              write_english(5,96,48);  //第6行第97-104列显示'M' 
 497   1              write_english(5,104,49); //第6行第105-112列显示'L' 
 498   1              write_english(5,112,50); //第6行第113-120列显示'N' 
 499   1              write_english(5,120,51); //第6行第121-128列显示'O' 
 500   1              while(1)
 501   1              {                       
 502   2                      
 503   2              }
 504   1      }
 505          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    655    ----
   CONSTANT SIZE    =    992    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
