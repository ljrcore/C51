C51 COMPILER V7.00  TEST25                                                                 09/19/2012 08:23:28 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST25
OBJECT MODULE PLACED IN TEST25.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST25.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //定义一个数据表格
  13          unsigned char code TAB[8]=
  14          {                          //定义表格一定要使用code，这样会做到程序存储区中
  15              0x7F,                  //表格第1步数据0b01111111
  16              0x3F,                  //表格第2步数据0b00111111
  17              0xBF,                  //表格第3步数据0b10111111
  18              0x9F,                  //表格第4步数据0b10011111
  19              0xDF,                  //表格第5步数据0b11011111
  20              0xCF,                  //表格第6步数据0b11001111
  21              0xEF,                  //表格第7步数据0b11101111
  22              0x6F,                  //表格第8步数据0b01101111
  23          };
  24          
  25          //---------------------------------------
  26          //8独立按键相关I/O设置
  27          sbit P1key=P2^0;           //按键P1接在P2.0口上
  28          sbit P2key=P2^1;           //按键P2接在P2.1口上
  29          sbit P3key=P2^2;           //按键P3接在P2.2口上
  30          sbit P4key=P2^3;           //按键P4接在P2.3口上
  31          sbit P5key=P2^4;           //按键P5接在P2.4口上
  32          sbit P6key=P2^5;           //按键P6接在P2.5口上
  33          sbit P7key=P2^6;           //按键P7接在P2.6口上
  34          sbit P8key=P2^7;           //按键P8接在P2.7口上
  35          //---------------------------------------
  36          
  37          //---------------------------------------
  38          //按键部分用寄存器设置
  39          unsigned char KEYbuf;      //设置8位的寄存器用来暂存按键键值数据
  40          unsigned char KEYcon;
  41          bit KEYbit;
  42          //---------------------------------------
  43          unsigned char STEPspeed;
  44          //---------------------------------------
  45          //名称: 主函数
  46          //适用：给力者GL9单片机开发学习系统
  47          //公司：宁波芯动电子有限公司
  48          //网址：www.MovingChip.com
  49          //日期：20120914
  50          //---------------------------------------
  51          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
  52          {
  53   1      
  54   1          unsigned int a=0;      //定义一个int型变量，做延时用
  55   1          unsigned char b=0;    //定义一个char型变量，显示内容用
C51 COMPILER V7.00  TEST25                                                                 09/19/2012 08:23:28 PAGE 2   

  56   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
  57   1          {
  58   2                      //***8独立按键扫描部分***
  59   2          //按P1-P8键，KEYbuf赋值1-8
  60   2              if(P1key==0) KEYbuf=1;     //如果P1键按下，KEYbuf赋值写1
  61   2              else if(P2key==0) KEYbuf=2; //如果P2键按下，KEYbuf赋值写2
  62   2              else if(P3key==0) KEYbuf=3; //如果P3键按下，KEYbuf赋值写3
  63   2              else if(P4key==0) KEYbuf=4; //如果P4键按下，KEYbuf赋值写4
  64   2              else if(P5key==0) KEYbuf=5; //如果P5键按下，KEYbuf赋值写5
  65   2              else if(P6key==0) KEYbuf=6; //如果P6键按下，KEYbuf赋值写6
  66   2              else if(P7key==0) KEYbuf=7; //如果P7键按下，KEYbuf赋值写7
  67   2              else if(P8key==0) KEYbuf=8; //如果P8键按下，KEYbuf赋值写8
  68   2                        else 
  69   2                        {
  70   3                              KEYbuf=0;
  71   3                              if(KEYbit==0)
  72   3                              {
  73   4                                      if(++KEYcon>20)
  74   4                                      {
  75   5                                              KEYcon=0;
  76   5                                              KEYbit=1;              //无按键按下，KEYbit赋值为1
  77   5                                      }
  78   4                              }
  79   3                      }
  80   2          //*********************      
  81   2                      if(KEYbuf==1)               //P1键控制步进电机方向
  82   2                      {
  83   3                              if(KEYbit==1)
  84   3                              {
  85   4                                      KEYbit=0;
  86   4                                      if(++STEPspeed>3) STEPspeed=0;     //速度加1，并限制在0-3间                                                             
  87   4                              }
  88   3                      }
  89   2      
  90   2                      if(STEPspeed==0) 
  91   2                      {
  92   3                              for(a=0;a<1700;a++);            //速度1延时
  93   3                      }
  94   2                      else if(STEPspeed==1) 
  95   2                      {
  96   3                              for(a=0;a<1300;a++);            //速度2延时
  97   3                      }
  98   2                      else if(STEPspeed==2) 
  99   2                      {
 100   3                              for(a=0;a<900;a++);                     //速度3延时             
 101   3                      }
 102   2                      else  
 103   2                      {
 104   3                              for(a=0;a<500;a++);                     //速度4延时
 105   3                      }
 106   2                      if(++b>7) b=0;             //b做+1操作，并限制在0-7以内                 
 107   2                      P1=TAB[b];                                      //将TAB[b]的值送入P1口输出      
 108   2         }
 109   1      }
 110          
 111          
 112          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    202    ----
   CONSTANT SIZE    =      8    ----
C51 COMPILER V7.00  TEST25                                                                 09/19/2012 08:23:28 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
