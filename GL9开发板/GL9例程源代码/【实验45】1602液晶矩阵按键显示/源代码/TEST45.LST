C51 COMPILER V7.00  TEST45                                                                 09/19/2012 10:32:57 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST45
OBJECT MODULE PLACED IN TEST45.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST45.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //4×4矩阵式按键相关I/O设置
  13          sbit HAGN1=P1^0;           //第1行接在P3.0口上
  14          sbit HANG2=P1^1;           //第2行接在P3.1口上
  15          sbit HANB3=P1^2;           //第3行接在P3.2口上
  16          sbit HANG4=P1^3;           //第4行接在P3.3口上
  17          sbit LIE1=P1^4;            //第1列接在P3.4口上
  18          sbit LIE2=P1^5;            //第2列接在P3.5口上
  19          sbit LIE3=P1^6;            //第3列接在P3.6口上
  20          sbit LIE4=P1^7;            //第4列接在P3.7口上
  21          //---------------------------------------
  22          
  23          //---------------------------------------
  24          //1602液晶相关I/O设置
  25          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  26          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  27          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  28          //---------------------------------------
  29          
  30          //---------------------------------------
  31          //按键部分用寄存器设置
  32          unsigned char KEYbuf;      //设置8位的寄存器用来暂存按键键值数据
  33          //---------------------------------------
  34          
  35          //---------------------------------------
  36          //1602液晶寄存器设置
  37          unsigned char DISbuf;     //设置8位的unsigend char型寄存器用来暂存1602要显示的内容
  38          //---------------------------------------
  39          
  40          //---------------------------------------
  41          //名称：1602液晶用延时函数
  42          //适用：给力者GL9单片机开发学习系统
  43          //公司：宁波芯动电子有限公司
  44          //网址：www.MovingChip.com
  45          //日期：20120914
  46          //---------------------------------------
  47          void Delay1602(unsigned int t)
  48          { 
  49   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
  50   1           for(k=0;k<t;k++);    //延时 
  51   1      } 
  52          
  53          //---------------------------------------
  54          //名称：1602液晶忙检测函数
  55          //适用：给力者GL9单片机开发学习系统
C51 COMPILER V7.00  TEST45                                                                 09/19/2012 10:32:57 PAGE 2   

  56          //公司：宁波芯动电子有限公司
  57          //网址：www.MovingChip.com
  58          //日期：20120914
  59          //---------------------------------------
  60          void LCD1602_busy(void)
  61          { 
  62   1           P0_7=1;              //将P0.7置1，为读状态做准备 
  63   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  64   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  65   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  66   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
  67   1           E=0;                 //读完以后，恢复E的电平
  68   1      } 
  69          
  70          //---------------------------------------
  71          //名称：1600写命令函数
  72          //适用：给力者GL9单片机开发学习系统
  73          //公司：宁波芯动电子有限公司
  74          //网址：www.MovingChip.com
  75          //日期：20120914
  76          //---------------------------------------
  77          void LCD1602_Write_com(unsigned char combuf)
  78          { 
  79   1           RS=0;                //选择指令寄存器
  80   1           RW=0;                //选择写状态
  81   1           P0=combuf;           //将命令字通过P0口送至DB
  82   1           E=1;                 //E高电平将命令字写入1602液晶
  83   1           E=0;                 //写完以后，恢复E的电平
  84   1      } 
  85          
  86          //---------------------------------------
  87          //名称：1602写命令函数(带忙检测)
  88          //适用：给力者GL9单片机开发学习系统
  89          //公司：宁波芯动电子有限公司
  90          //网址：www.MovingChip.com
  91          //日期：20120914
  92          //---------------------------------------
  93          void LCD1602_Write_com_busy(unsigned char combuf)
  94          { 
  95   1           LCD1602_busy();            //调用忙检测函数
  96   1           LCD1602_Write_com(combuf); //调用忙检测函数
  97   1      } 
  98          
  99          //---------------------------------------
 100          //名称：1602写数据函数(带忙检测)
 101          //适用：给力者GL9单片机开发学习系统
 102          //公司：宁波芯动电子有限公司
 103          //网址：www.MovingChip.com
 104          //日期：20120914
 105          //---------------------------------------
 106          void LCD1602_Write_data_busy(unsigned char databuf)
 107          { 
 108   1           LCD1602_busy();      //调用忙检测函数
 109   1           RS=1;                //选择数据寄存器
 110   1           RW=0;                //选择写状态
 111   1           P0=databuf;          //将命令字通过P0口送至DB
 112   1           E=1;                 //E高电平将命令字写入1602液晶
 113   1           E=0;                 //写完以后，恢复E的电平
 114   1      } 
 115          
 116          //---------------------------------------
 117          //名称：1602液晶显示地址写函数
C51 COMPILER V7.00  TEST45                                                                 09/19/2012 10:32:57 PAGE 3   

 118          //适用：给力者GL9单片机开发学习系统
 119          //公司：宁波芯动电子有限公司
 120          //网址：www.MovingChip.com
 121          //日期：20120914
 122          //---------------------------------------
 123          void LCD1602_Write_address(unsigned char x,unsigned char y)
 124          { 
 125   1           x&=0x0f;             //列地址限制在0-15间
 126   1           y&=0x01;             //行地址限制在0-1间
 127   1           if(y==0)             //如果是第一行
 128   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 129   1           else                 //如果是第二行
 130   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 131   1      } 
 132          
 133          //---------------------------------------
 134          //名称：1602液晶初始化函数
 135          //适用：给力者GL9单片机开发学习系统
 136          //公司：宁波芯动电子有限公司
 137          //网址：www.MovingChip.com
 138          //日期：20120914
 139          //---------------------------------------
 140          void LCD1602_init(void)
 141          { 
 142   1           Delay1602(1500);               //调用延时函数
 143   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 144   1           Delay1602(500);                //调用延时函数
 145   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 146   1           Delay1602(500);                //调用延时函数
 147   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 148   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 149   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 150   1           LCD1602_Write_com_busy(0x01);  //清屏
 151   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 152   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 153   1      } 
 154          
 155          //---------------------------------------
 156          //名称：1602液晶指定地址显示函数
 157          //适用：给力者GL9单片机开发学习系统
 158          //公司：宁波芯动电子有限公司
 159          //网址：www.MovingChip.com
 160          //日期：20120914
 161          //---------------------------------------
 162          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 163          { 
 164   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 165   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 166   1      } 
 167          
 168          //---------------------------------------
 169          //名称: 主函数
 170          //适用：给力者GL9单片机开发学习系统
 171          //公司：宁波芯动电子有限公司
 172          //网址：www.MovingChip.com
 173          //日期：20120914
 174          //---------------------------------------
 175          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 176          {
 177   1      
 178   1          LCD1602_init();        //调用1602液晶初始化函数
 179   1               KEYbuf=255;
C51 COMPILER V7.00  TEST45                                                                 09/19/2012 10:32:57 PAGE 4   

 180   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
 181   1          {
 182   2          //***4×4矩阵按键扫描部分***
 183   2          //按K1-P16键，KEYbuf赋值0-15
 184   2              P1=0xFE;                  //将第一行置零，以扫描K1-K4是否被按下
 185   2              if(LIE1==0) KEYbuf=0;     //如果K1键按下，KEYbuf赋值写0
 186   2              else if(LIE2==0) KEYbuf=1; //如果K2键按下，KEYbuf赋值写1
 187   2              else if(LIE3==0) KEYbuf=2; //如果K3键按下，KEYbuf赋值写2
 188   2              else if(LIE4==0) KEYbuf=3; //如果K4键按下，KEYbuf赋值写3
 189   2      
 190   2              P1=0xFD;                  //将第二行置零，以扫描K5-K8是否被按下
 191   2              if(LIE1==0) KEYbuf=4;     //如果K5键按下，KEYbuf赋值写4
 192   2              else if(LIE2==0) KEYbuf=5; //如果K6键按下，KEYbuf赋值写5
 193   2              else if(LIE3==0) KEYbuf=6; //如果K7键按下，KEYbuf赋值写6
 194   2              else if(LIE4==0) KEYbuf=7; //如果K8键按下，KEYbuf赋值写7
 195   2      
 196   2              P1=0xFB;                  //将第三行置零，以扫描K9-K12是否被按下
 197   2              if(LIE1==0) KEYbuf=8;     //如果K9键按下，KEYbuf赋值写8
 198   2              else if(LIE2==0) KEYbuf=9; //如果K10键按下，KEYbuf赋值写9
 199   2              else if(LIE3==0) KEYbuf=10;//如果K11键按下，KEYbuf赋值写10
 200   2              else if(LIE4==0) KEYbuf=11;//如果K12键按下，KEYbuf赋值写11
 201   2      
 202   2              P1=0xF7;                  //将第四行置零，以扫描K13-K16是否被按下
 203   2              if(LIE1==0) KEYbuf=12;    //如果K13键按下，KEYbuf赋值写12
 204   2              else if(LIE2==0) KEYbuf=13;//如果K14键按下，KEYbuf赋值写13
 205   2              else if(LIE3==0) KEYbuf=14;//如果K15键按下，KEYbuf赋值写14
 206   2              else if(LIE4==0) KEYbuf=15;//如果K16键按下，KEYbuf赋值写15
 207   2                                      
 208   2          //*********************
 209   2      
 210   2          //**给1602显示寄存器赋值(0-255)**
 211   2              DISbuf=KEYbuf+1;           //将键值加1送显示
 212   2          //*******************************
 213   2      
 214   2          //***1602液晶显示0-255***
 215   2              LCD1602_Disp(0,0,DISbuf/100+'0');      //在第1行的第1列显示百位
 216   2              LCD1602_Disp(1,0,(DISbuf%100)/10+'0'); //在第1行的第2列显示十位
 217   2              LCD1602_Disp(2,0,DISbuf%10+'0');       //在第1行的第3列显示个位
 218   2          //***********************
 219   2      
 220   2          }
 221   1      }
 222          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    343    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
