; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Out\usb_regs.o --depend=.\Out\usb_regs.d --device=DARMSTM --apcs=interwork -O0 -I..\inc -I..\..\..\Libraries\CMSIS\Core\CM3 -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I"D:\Program Files\KeilARM350\ARM\INC\ST\STM32F10x" ..\..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_regs.c]
                          THUMB

                          AREA ||i.ByteSwap||, CODE, READONLY, ALIGN=1

                  ByteSwap PROC
;;;738    *******************************************************************************/
;;;739    uint16_t ByteSwap(uint16_t wSwW)
000000  4601              MOV      r1,r0
;;;740    {
;;;741      uint8_t bTemp;
;;;742      uint16_t wRet;
;;;743      bTemp = (uint8_t)(wSwW & 0xff);
000002  b2ca              UXTB     r2,r1
;;;744      wRet =  (wSwW >> 8) | ((uint16_t)bTemp << 8);
000004  120b              ASRS     r3,r1,#8
000006  ea432002          ORR      r0,r3,r2,LSL #8
;;;745      return(wRet);
;;;746    }
00000a  4770              BX       lr
;;;747    
                          ENDP


                          AREA ||i.ClearDTOG_RX||, CODE, READONLY, ALIGN=2

                  ClearDTOG_RX PROC
;;;420    *******************************************************************************/
;;;421    void ClearDTOG_RX(uint8_t bEpNum)
000000  490c              LDR      r1,|L2.52|
;;;422    {
;;;423      _ClearDTOG_RX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  f4114f80          TST      r1,#0x4000
00000e  d00f              BEQ      |L2.48|
000010  4908              LDR      r1,|L2.52|
000012  eb010180          ADD      r1,r1,r0,LSL #2
000016  f8d11c00          LDR      r1,[r1,#0xc00]
00001a  b289              UXTH     r1,r1
00001c  f648728f          MOV      r2,#0x8f8f
000020  4011              ANDS     r1,r1,r2
000022  f4414180          ORR      r1,r1,#0x4000
000026  4a03              LDR      r2,|L2.52|
000028  eb020280          ADD      r2,r2,r0,LSL #2
00002c  f8c21c00          STR      r1,[r2,#0xc00]
                  |L2.48|
;;;424    }
000030  4770              BX       lr
;;;425    /*******************************************************************************
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x40005000

                          AREA ||i.ClearDTOG_TX||, CODE, READONLY, ALIGN=2

                  ClearDTOG_TX PROC
;;;431    *******************************************************************************/
;;;432    void ClearDTOG_TX(uint8_t bEpNum)
000000  490c              LDR      r1,|L3.52|
;;;433    {
;;;434      _ClearDTOG_TX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  f0110f40          TST      r1,#0x40
00000e  d00f              BEQ      |L3.48|
000010  4908              LDR      r1,|L3.52|
000012  eb010180          ADD      r1,r1,r0,LSL #2
000016  f8d11c00          LDR      r1,[r1,#0xc00]
00001a  b289              UXTH     r1,r1
00001c  f648728f          MOV      r2,#0x8f8f
000020  4011              ANDS     r1,r1,r2
000022  f0410140          ORR      r1,r1,#0x40
000026  4a03              LDR      r2,|L3.52|
000028  eb020280          ADD      r2,r2,r0,LSL #2
00002c  f8c21c00          STR      r1,[r2,#0xc00]
                  |L3.48|
;;;435    }
000030  4770              BX       lr
;;;436    /*******************************************************************************
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x40005000

                          AREA ||i.ClearEPDoubleBuff||, CODE, READONLY, ALIGN=2

                  ClearEPDoubleBuff PROC
;;;343    *******************************************************************************/
;;;344    void ClearEPDoubleBuff(uint8_t bEpNum)
000000  4907              LDR      r1,|L4.32|
;;;345    {
;;;346      _ClearEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f648628f          MOV      r2,#0x8e8f
000010  4011              ANDS     r1,r1,r2
000012  4a03              LDR      r2,|L4.32|
000014  eb020280          ADD      r2,r2,r0,LSL #2
000018  f8c21c00          STR      r1,[r2,#0xc00]
;;;347    }
00001c  4770              BX       lr
;;;348    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L4.32|
                          DCD      0x40005000

                          AREA ||i.ClearEP_CTR_RX||, CODE, READONLY, ALIGN=2

                  ClearEP_CTR_RX PROC
;;;376    *******************************************************************************/
;;;377    void ClearEP_CTR_RX(uint8_t bEpNum)
000000  4907              LDR      r1,|L5.32|
;;;378    {
;;;379      _ClearEP_CTR_RX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  f3c1010e          UBFX     r1,r1,#0,#15
00000e  f648728f          MOV      r2,#0x8f8f
000012  4011              ANDS     r1,r1,r2
000014  4a02              LDR      r2,|L5.32|
000016  eb020280          ADD      r2,r2,r0,LSL #2
00001a  f8c21c00          STR      r1,[r2,#0xc00]
;;;380    }
00001e  4770              BX       lr
;;;381    /*******************************************************************************
                          ENDP

                  |L5.32|
                          DCD      0x40005000

                          AREA ||i.ClearEP_CTR_TX||, CODE, READONLY, ALIGN=2

                  ClearEP_CTR_TX PROC
;;;387    *******************************************************************************/
;;;388    void ClearEP_CTR_TX(uint8_t bEpNum)
000000  4907              LDR      r1,|L6.32|
;;;389    {
;;;390      _ClearEP_CTR_TX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f648720f          MOV      r2,#0x8f0f
000010  4011              ANDS     r1,r1,r2
000012  4a03              LDR      r2,|L6.32|
000014  eb020280          ADD      r2,r2,r0,LSL #2
000018  f8c21c00          STR      r1,[r2,#0xc00]
;;;391    }
00001c  4770              BX       lr
;;;392    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      0x40005000

                          AREA ||i.ClearEP_KIND||, CODE, READONLY, ALIGN=2

                  ClearEP_KIND PROC
;;;299    *******************************************************************************/
;;;300    void ClearEP_KIND(uint8_t bEpNum)
000000  4907              LDR      r1,|L7.32|
;;;301    {
;;;302      _ClearEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f648628f          MOV      r2,#0x8e8f
000010  4011              ANDS     r1,r1,r2
000012  4a03              LDR      r2,|L7.32|
000014  eb020280          ADD      r2,r2,r0,LSL #2
000018  f8c21c00          STR      r1,[r2,#0xc00]
;;;303    }
00001c  4770              BX       lr
;;;304    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      0x40005000

                          AREA ||i.Clear_Status_Out||, CODE, READONLY, ALIGN=2

                  Clear_Status_Out PROC
;;;310    *******************************************************************************/
;;;311    void Clear_Status_Out(uint8_t bEpNum)
000000  4907              LDR      r1,|L8.32|
;;;312    {
;;;313      _ClearEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f648628f          MOV      r2,#0x8e8f
000010  4011              ANDS     r1,r1,r2
000012  4a03              LDR      r2,|L8.32|
000014  eb020280          ADD      r2,r2,r0,LSL #2
000018  f8c21c00          STR      r1,[r2,#0xc00]
;;;314    }
00001c  4770              BX       lr
;;;315    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L8.32|
                          DCD      0x40005000

                          AREA ||i.FreeUserBuffer||, CODE, READONLY, ALIGN=2

                  FreeUserBuffer PROC
;;;706    *******************************************************************************/
;;;707    void FreeUserBuffer(uint8_t bEpNum, uint8_t bDir)
000000  2901              CMP      r1,#1
;;;708    {
;;;709      if (bDir == EP_DBUF_OUT)
000002  d110              BNE      |L9.38|
;;;710      { /* OUT double buffered endpoint */
;;;711        _ToggleDTOG_TX(bEpNum);
000004  4a11              LDR      r2,|L9.76|
000006  eb020280          ADD      r2,r2,r0,LSL #2
00000a  f8d22c00          LDR      r2,[r2,#0xc00]
00000e  b292              UXTH     r2,r2
000010  f648738f          MOV      r3,#0x8f8f
000014  401a              ANDS     r2,r2,r3
000016  f0420240          ORR      r2,r2,#0x40
00001a  4b0c              LDR      r3,|L9.76|
00001c  eb030380          ADD      r3,r3,r0,LSL #2
000020  f8c32c00          STR      r2,[r3,#0xc00]
000024  e011              B        |L9.74|
                  |L9.38|
;;;712      }
;;;713      else if (bDir == EP_DBUF_IN)
000026  2902              CMP      r1,#2
000028  d10f              BNE      |L9.74|
;;;714      { /* IN double buffered endpoint */
;;;715        _ToggleDTOG_RX(bEpNum);
00002a  4a08              LDR      r2,|L9.76|
00002c  eb020280          ADD      r2,r2,r0,LSL #2
000030  f8d22c00          LDR      r2,[r2,#0xc00]
000034  b292              UXTH     r2,r2
000036  f648738f          MOV      r3,#0x8f8f
00003a  401a              ANDS     r2,r2,r3
00003c  f4424280          ORR      r2,r2,#0x4000
000040  4b02              LDR      r3,|L9.76|
000042  eb030380          ADD      r3,r3,r0,LSL #2
000046  f8c32c00          STR      r2,[r3,#0xc00]
                  |L9.74|
;;;716      }
;;;717    }
00004a  4770              BX       lr
;;;718    
                          ENDP

                  |L9.76|
                          DCD      0x40005000

                          AREA ||i.GetBTABLE||, CODE, READONLY, ALIGN=2

                  GetBTABLE PROC
;;;129    *******************************************************************************/
;;;130    uint16_t GetBTABLE(void)
000000  4801              LDR      r0,|L10.8|
;;;131    {
;;;132      return(_GetBTABLE());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;133    }
000006  4770              BX       lr
;;;134    
                          ENDP

                  |L10.8|
                          DCD      0x40005c50

                          AREA ||i.GetCNTR||, CODE, READONLY, ALIGN=2

                  GetCNTR PROC
;;;45     *******************************************************************************/
;;;46     uint16_t GetCNTR(void)
000000  4801              LDR      r0,|L11.8|
;;;47     {
;;;48       return(_GetCNTR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;49     }
000006  4770              BX       lr
;;;50     
                          ENDP

                  |L11.8|
                          DCD      0x40005c40

                          AREA ||i.GetDADDR||, CODE, READONLY, ALIGN=2

                  GetDADDR PROC
;;;105    *******************************************************************************/
;;;106    uint16_t GetDADDR(void)
000000  4801              LDR      r0,|L12.8|
;;;107    {
;;;108      return(_GetDADDR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;109    }
000006  4770              BX       lr
;;;110    
                          ENDP

                  |L12.8|
                          DCD      0x40005c4c

                          AREA ||i.GetENDPOINT||, CODE, READONLY, ALIGN=2

                  GetENDPOINT PROC
;;;154    *******************************************************************************/
;;;155    uint16_t GetENDPOINT(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;156    {
;;;157      return(_GetENDPOINT(bEpNum));
000002  4803              LDR      r0,|L13.16|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  b280              UXTH     r0,r0
;;;158    }
00000e  4770              BX       lr
;;;159    
                          ENDP

                  |L13.16|
                          DCD      0x40005000

                          AREA ||i.GetEPAddress||, CODE, READONLY, ALIGN=2

                  GetEPAddress PROC
;;;454    *******************************************************************************/
;;;455    uint8_t GetEPAddress(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;456    {
;;;457      return(_GetEPAddress(bEpNum));
000002  4804              LDR      r0,|L14.20|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  f000000f          AND      r0,r0,#0xf
;;;458    }
000010  4770              BX       lr
;;;459    /*******************************************************************************
                          ENDP

000012  0000              DCW      0x0000
                  |L14.20|
                          DCD      0x40005000

                          AREA ||i.GetEPDblBuf0Addr||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf0Addr PROC
;;;606    *******************************************************************************/
;;;607    uint16_t GetEPDblBuf0Addr(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;608    {
;;;609      return(_GetEPDblBuf0Addr(bEpNum));
000002  4805              LDR      r0,|L15.24|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  4a03              LDR      r2,|L15.28|
00000e  f8520010          LDR      r0,[r2,r0,LSL #1]
000012  b280              UXTH     r0,r0
;;;610    }
000014  4770              BX       lr
;;;611    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L15.24|
                          DCD      0x40005c50
                  |L15.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf0Count||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf0Count PROC
;;;665    *******************************************************************************/
;;;666    uint16_t GetEPDblBuf0Count(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;667    {
;;;668      return(_GetEPDblBuf0Count(bEpNum));
000002  4806              LDR      r0,|L16.28|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1c80              ADDS     r0,r0,#2
00000e  4a04              LDR      r2,|L16.32|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  f3c00009          UBFX     r0,r0,#0,#10
;;;669    }
000018  4770              BX       lr
;;;670    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L16.28|
                          DCD      0x40005c50
                  |L16.32|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf1Addr||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf1Addr PROC
;;;617    *******************************************************************************/
;;;618    uint16_t GetEPDblBuf1Addr(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;619    {
;;;620      return(_GetEPDblBuf1Addr(bEpNum));
000002  4805              LDR      r0,|L17.24|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1d00              ADDS     r0,r0,#4
00000e  4a03              LDR      r2,|L17.28|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  b280              UXTH     r0,r0
;;;621    }
000016  4770              BX       lr
;;;622    /*******************************************************************************
                          ENDP

                  |L17.24|
                          DCD      0x40005c50
                  |L17.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf1Count||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf1Count PROC
;;;677    *******************************************************************************/
;;;678    uint16_t GetEPDblBuf1Count(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;679    {
;;;680      return(_GetEPDblBuf1Count(bEpNum));
000002  4806              LDR      r0,|L18.28|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1d80              ADDS     r0,r0,#6
00000e  4a04              LDR      r2,|L18.32|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  f3c00009          UBFX     r0,r0,#0,#10
;;;681    }
000018  4770              BX       lr
;;;682    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L18.28|
                          DCD      0x40005c50
                  |L18.32|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBufDir||, CODE, READONLY, ALIGN=2

                  GetEPDblBufDir PROC
;;;689    *******************************************************************************/
;;;690    EP_DBUF_DIR GetEPDblBufDir(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;691    {
;;;692      if ((uint16_t)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
000002  480f              LDR      r0,|L19.64|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1d80              ADDS     r0,r0,#6
00000e  4a0d              LDR      r2,|L19.68|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  f4104f7c          TST      r0,#0xfc00
000018  d001              BEQ      |L19.30|
;;;693        return(EP_DBUF_OUT);
00001a  2001              MOVS     r0,#1
                  |L19.28|
;;;694      else if (((uint16_t)(*_pEPTxCount(bEpNum)) & 0x03FF) != 0)
;;;695        return(EP_DBUF_IN);
;;;696      else
;;;697        return(EP_DBUF_ERR);
;;;698    }
00001c  4770              BX       lr
                  |L19.30|
00001e  4808              LDR      r0,|L19.64|
000020  6800              LDR      r0,[r0,#0]            ;694
000022  b280              UXTH     r0,r0                 ;694
000024  eb0000c1          ADD      r0,r0,r1,LSL #3       ;694
000028  1c80              ADDS     r0,r0,#2              ;694
00002a  4a06              LDR      r2,|L19.68|
00002c  f8520010          LDR      r0,[r2,r0,LSL #1]     ;694
000030  0580              LSLS     r0,r0,#22             ;694
000032  0d80              LSRS     r0,r0,#22             ;694
000034  d001              BEQ      |L19.58|
000036  2002              MOVS     r0,#2                 ;695
000038  e7f0              B        |L19.28|
                  |L19.58|
00003a  2000              MOVS     r0,#0                 ;697
00003c  e7ee              B        |L19.28|
;;;699    /*******************************************************************************
                          ENDP

00003e  0000              DCW      0x0000
                  |L19.64|
                          DCD      0x40005c50
                  |L19.68|
                          DCD      0x40006000

                          AREA ||i.GetEPRxAddr||, CODE, READONLY, ALIGN=2

                  GetEPRxAddr PROC
;;;500    *******************************************************************************/
;;;501    uint16_t GetEPRxAddr(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;502    {
;;;503      return(_GetEPRxAddr(bEpNum));
000002  4805              LDR      r0,|L20.24|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1d00              ADDS     r0,r0,#4
00000e  4a03              LDR      r2,|L20.28|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  b280              UXTH     r0,r0
;;;504    }
000016  4770              BX       lr
;;;505    /*******************************************************************************
                          ENDP

                  |L20.24|
                          DCD      0x40005c50
                  |L20.28|
                          DCD      0x40006000

                          AREA ||i.GetEPRxCount||, CODE, READONLY, ALIGN=2

                  GetEPRxCount PROC
;;;558    *******************************************************************************/
;;;559    uint16_t GetEPRxCount(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;560    {
;;;561      return(_GetEPRxCount(bEpNum));
000002  4806              LDR      r0,|L21.28|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1d80              ADDS     r0,r0,#6
00000e  4a04              LDR      r2,|L21.32|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  f3c00009          UBFX     r0,r0,#0,#10
;;;562    }
000018  4770              BX       lr
;;;563    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L21.28|
                          DCD      0x40005c50
                  |L21.32|
                          DCD      0x40006000

                          AREA ||i.GetEPRxStatus||, CODE, READONLY, ALIGN=2

                  GetEPRxStatus PROC
;;;251    *******************************************************************************/
;;;252    uint16_t GetEPRxStatus(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;253    {
;;;254      return(_GetEPRxStatus(bEpNum));
000002  4804              LDR      r0,|L22.20|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  f4005040          AND      r0,r0,#0x3000
;;;255    }
000010  4770              BX       lr
;;;256    
                          ENDP

000012  0000              DCW      0x0000
                  |L22.20|
                          DCD      0x40005000

                          AREA ||i.GetEPTxAddr||, CODE, READONLY, ALIGN=2

                  GetEPTxAddr PROC
;;;489    *******************************************************************************/
;;;490    uint16_t GetEPTxAddr(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;491    {
;;;492      return(_GetEPTxAddr(bEpNum));
000002  4805              LDR      r0,|L23.24|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  4a03              LDR      r2,|L23.28|
00000e  f8520010          LDR      r0,[r2,r0,LSL #1]
000012  b280              UXTH     r0,r0
;;;493    }
000014  4770              BX       lr
;;;494    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L23.24|
                          DCD      0x40005c50
                  |L23.28|
                          DCD      0x40006000

                          AREA ||i.GetEPTxCount||, CODE, READONLY, ALIGN=2

                  GetEPTxCount PROC
;;;547    *******************************************************************************/
;;;548    uint16_t GetEPTxCount(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;549    {
;;;550      return(_GetEPTxCount(bEpNum));
000002  4806              LDR      r0,|L24.28|
000004  6800              LDR      r0,[r0,#0]
000006  b280              UXTH     r0,r0
000008  eb0000c1          ADD      r0,r0,r1,LSL #3
00000c  1c80              ADDS     r0,r0,#2
00000e  4a04              LDR      r2,|L24.32|
000010  f8520010          LDR      r0,[r2,r0,LSL #1]
000014  f3c00009          UBFX     r0,r0,#0,#10
;;;551    }
000018  4770              BX       lr
;;;552    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L24.28|
                          DCD      0x40005c50
                  |L24.32|
                          DCD      0x40006000

                          AREA ||i.GetEPTxStatus||, CODE, READONLY, ALIGN=2

                  GetEPTxStatus PROC
;;;239    *******************************************************************************/
;;;240    uint16_t GetEPTxStatus(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;241    {
;;;242      return(_GetEPTxStatus(bEpNum));
000002  4804              LDR      r0,|L25.20|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  f0000030          AND      r0,r0,#0x30
;;;243    }
000010  4770              BX       lr
;;;244    
                          ENDP

000012  0000              DCW      0x0000
                  |L25.20|
                          DCD      0x40005000

                          AREA ||i.GetEPType||, CODE, READONLY, ALIGN=2

                  GetEPType PROC
;;;179    *******************************************************************************/
;;;180    uint16_t GetEPType(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;181    {
;;;182      return(_GetEPType(bEpNum));
000002  4804              LDR      r0,|L26.20|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  f40060c0          AND      r0,r0,#0x600
;;;183    }
000010  4770              BX       lr
;;;184    
                          ENDP

000012  0000              DCW      0x0000
                  |L26.20|
                          DCD      0x40005000

                          AREA ||i.GetFNR||, CODE, READONLY, ALIGN=2

                  GetFNR PROC
;;;81     *******************************************************************************/
;;;82     uint16_t GetFNR(void)
000000  4801              LDR      r0,|L27.8|
;;;83     {
;;;84       return(_GetFNR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;85     }
000006  4770              BX       lr
;;;86     
                          ENDP

                  |L27.8|
                          DCD      0x40005c48

                          AREA ||i.GetISTR||, CODE, READONLY, ALIGN=2

                  GetISTR PROC
;;;69     *******************************************************************************/
;;;70     uint16_t GetISTR(void)
000000  4801              LDR      r0,|L28.8|
;;;71     {
;;;72       return(_GetISTR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;73     }
000006  4770              BX       lr
;;;74     
                          ENDP

                  |L28.8|
                          DCD      0x40005c44

                          AREA ||i.GetRxStallStatus||, CODE, READONLY, ALIGN=2

                  GetRxStallStatus PROC
;;;365    *******************************************************************************/
;;;366    uint16_t GetRxStallStatus(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;367    {
;;;368      return(_GetRxStallStatus(bEpNum));
000002  4807              LDR      r0,|L29.32|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  f4005040          AND      r0,r0,#0x3000
000010  f5b05f80          CMP      r0,#0x1000
000014  d101              BNE      |L29.26|
000016  2001              MOVS     r0,#1
000018  e000              B        |L29.28|
                  |L29.26|
00001a  2000              MOVS     r0,#0
                  |L29.28|
00001c  b280              UXTH     r0,r0
;;;369    }
00001e  4770              BX       lr
;;;370    /*******************************************************************************
                          ENDP

                  |L29.32|
                          DCD      0x40005000

                          AREA ||i.GetTxStallStatus||, CODE, READONLY, ALIGN=2

                  GetTxStallStatus PROC
;;;354    *******************************************************************************/
;;;355    uint16_t GetTxStallStatus(uint8_t bEpNum)
000000  4601              MOV      r1,r0
;;;356    {
;;;357      return(_GetTxStallStatus(bEpNum));
000002  4807              LDR      r0,|L30.32|
000004  eb000081          ADD      r0,r0,r1,LSL #2
000008  f8d00c00          LDR      r0,[r0,#0xc00]
00000c  f0000030          AND      r0,r0,#0x30
000010  2810              CMP      r0,#0x10
000012  d101              BNE      |L30.24|
000014  2001              MOVS     r0,#1
000016  e000              B        |L30.26|
                  |L30.24|
000018  2000              MOVS     r0,#0
                  |L30.26|
00001a  b280              UXTH     r0,r0
;;;358    }
00001c  4770              BX       lr
;;;359    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L30.32|
                          DCD      0x40005000

                          AREA ||i.SetBTABLE||, CODE, READONLY, ALIGN=2

                  SetBTABLE PROC
;;;117    *******************************************************************************/
;;;118    void SetBTABLE(uint16_t wRegValue)
000000  f64f71f8          MOV      r1,#0xfff8
;;;119    {
;;;120      _SetBTABLE(wRegValue);
000004  4001              ANDS     r1,r1,r0
000006  4a01              LDR      r2,|L31.12|
000008  6011              STR      r1,[r2,#0]
;;;121    }
00000a  4770              BX       lr
;;;122    
                          ENDP

                  |L31.12|
                          DCD      0x40005c50

                          AREA ||i.SetCNTR||, CODE, READONLY, ALIGN=2

                  SetCNTR PROC
;;;33     *******************************************************************************/
;;;34     void SetCNTR(uint16_t wRegValue)
000000  4901              LDR      r1,|L32.8|
;;;35     {
;;;36       _SetCNTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;37     }
000004  4770              BX       lr
;;;38     
                          ENDP

000006  0000              DCW      0x0000
                  |L32.8|
                          DCD      0x40005c40

                          AREA ||i.SetDADDR||, CODE, READONLY, ALIGN=2

                  SetDADDR PROC
;;;93     *******************************************************************************/
;;;94     void SetDADDR(uint16_t wRegValue)
000000  4901              LDR      r1,|L33.8|
;;;95     {
;;;96       _SetDADDR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;97     }
000004  4770              BX       lr
;;;98     
                          ENDP

000006  0000              DCW      0x0000
                  |L33.8|
                          DCD      0x40005c4c

                          AREA ||i.SetDouBleBuffEPStall||, CODE, READONLY, ALIGN=2

                  SetDouBleBuffEPStall PROC
;;;218    *******************************************************************************/
;;;219    void SetDouBleBuffEPStall(uint8_t bEpNum, uint8_t bDir)
000000  b510              PUSH     {r4,lr}
;;;220    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;221      uint16_t Endpoint_DTOG_Status;
;;;222      Endpoint_DTOG_Status = GetENDPOINT(bEpNum);
000006  4610              MOV      r0,r2
000008  f7fffffe          BL       GetENDPOINT
00000c  4604              MOV      r4,r0
;;;223      if (bDir == EP_DBUF_OUT)
00000e  2b01              CMP      r3,#1
000010  d107              BNE      |L34.34|
;;;224      { /* OUT double buffered endpoint */
;;;225        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPRX_DTOG1);
000012  f4245080          BIC      r0,r4,#0x1000
000016  4908              LDR      r1,|L34.56|
000018  eb010182          ADD      r1,r1,r2,LSL #2
00001c  f8c10c00          STR      r0,[r1,#0xc00]
000020  e008              B        |L34.52|
                  |L34.34|
;;;226      }
;;;227      else if (bDir == EP_DBUF_IN)
000022  2b02              CMP      r3,#2
000024  d106              BNE      |L34.52|
;;;228      { /* IN double buffered endpoint */
;;;229        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPTX_DTOG1);
000026  f0240010          BIC      r0,r4,#0x10
00002a  4903              LDR      r1,|L34.56|
00002c  eb010182          ADD      r1,r1,r2,LSL #2
000030  f8c10c00          STR      r0,[r1,#0xc00]
                  |L34.52|
;;;230      }
;;;231    }
000034  bd10              POP      {r4,pc}
;;;232    
                          ENDP

000036  0000              DCW      0x0000
                  |L34.56|
                          DCD      0x40005000

                          AREA ||i.SetENDPOINT||, CODE, READONLY, ALIGN=2

                  SetENDPOINT PROC
;;;142    *******************************************************************************/
;;;143    void SetENDPOINT(uint8_t bEpNum, uint16_t wRegValue)
000000  4a02              LDR      r2,|L35.12|
;;;144    {
;;;145      _SetENDPOINT(bEpNum, wRegValue);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  f8c21c00          STR      r1,[r2,#0xc00]
;;;146    }
00000a  4770              BX       lr
;;;147    
                          ENDP

                  |L35.12|
                          DCD      0x40005000

                          AREA ||i.SetEPAddress||, CODE, READONLY, ALIGN=2

                  SetEPAddress PROC
;;;443    *******************************************************************************/
;;;444    void SetEPAddress(uint8_t bEpNum, uint8_t bAddr)
000000  4a07              LDR      r2,|L36.32|
;;;445    {
;;;446      _SetEPAddress(bEpNum, bAddr);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  f8d22c00          LDR      r2,[r2,#0xc00]
00000a  b292              UXTH     r2,r2
00000c  f648738f          MOV      r3,#0x8f8f
000010  401a              ANDS     r2,r2,r3
000012  430a              ORRS     r2,r2,r1
000014  4b02              LDR      r3,|L36.32|
000016  eb030380          ADD      r3,r3,r0,LSL #2
00001a  f8c32c00          STR      r2,[r3,#0xc00]
;;;447    }
00001e  4770              BX       lr
;;;448    /*******************************************************************************
                          ENDP

                  |L36.32|
                          DCD      0x40005000

                          AREA ||i.SetEPCountRxReg||, CODE, READONLY, ALIGN=1

                  SetEPCountRxReg PROC
;;;524    *******************************************************************************/
;;;525    void SetEPCountRxReg(uint32_t *pdwReg, uint16_t wCount)
000000  293e              CMP      r1,#0x3e
;;;526    {
;;;527      _SetEPCountRxReg(dwReg, wCount);
000002  dd0b              BLE      |L37.28|
000004  114a              ASRS     r2,r1,#5
000006  f0110f1f          TST      r1,#0x1f
00000a  d101              BNE      |L37.16|
00000c  1e53              SUBS     r3,r2,#1
00000e  b29a              UXTH     r2,r3
                  |L37.16|
000010  f44f4300          MOV      r3,#0x8000
000014  ea432382          ORR      r3,r3,r2,LSL #10
000018  6003              STR      r3,[r0,#0]
00001a  e007              B        |L37.44|
                  |L37.28|
00001c  104a              ASRS     r2,r1,#1
00001e  f0110f01          TST      r1,#1
000022  d001              BEQ      |L37.40|
000024  1c53              ADDS     r3,r2,#1
000026  b29a              UXTH     r2,r3
                  |L37.40|
000028  0293              LSLS     r3,r2,#10
00002a  6003              STR      r3,[r0,#0]
                  |L37.44|
;;;528    }
00002c  4770              BX       lr
;;;529    /*******************************************************************************
                          ENDP


                          AREA ||i.SetEPDblBuf0Addr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf0Addr PROC
;;;583    *******************************************************************************/
;;;584    void SetEPDblBuf0Addr(uint8_t bEpNum, uint16_t wBuf0Addr)
000000  b510              PUSH     {r4,lr}
;;;585    {
;;;586      _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);
000002  104a              ASRS     r2,r1,#1
000004  0052              LSLS     r2,r2,#1
000006  4b04              LDR      r3,|L38.24|
000008  681b              LDR      r3,[r3,#0]
00000a  b29b              UXTH     r3,r3
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  4c02              LDR      r4,|L38.28|
000012  f8442013          STR      r2,[r4,r3,LSL #1]
;;;587    }
000016  bd10              POP      {r4,pc}
;;;588    /*******************************************************************************
                          ENDP

                  |L38.24|
                          DCD      0x40005c50
                  |L38.28|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf0Count||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf0Count PROC
;;;641    *******************************************************************************/
;;;642    void SetEPDblBuf0Count(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  b530              PUSH     {r4,r5,lr}
;;;643    {
;;;644      _SetEPDblBuf0Count(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d11f              BNE      |L39.70|
000006  4b16              LDR      r3,|L39.96|
000008  681b              LDR      r3,[r3,#0]
00000a  b29b              UXTH     r3,r3
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  1c9b              ADDS     r3,r3,#2
000012  4d14              LDR      r5,|L39.100|
000014  eb050443          ADD      r4,r5,r3,LSL #1
000018  2a3e              CMP      r2,#0x3e
00001a  dd0b              BLE      |L39.52|
00001c  1153              ASRS     r3,r2,#5
00001e  f0120f1f          TST      r2,#0x1f
000022  d101              BNE      |L39.40|
000024  1e5d              SUBS     r5,r3,#1
000026  b2ab              UXTH     r3,r5
                  |L39.40|
000028  f44f4500          MOV      r5,#0x8000
00002c  ea452583          ORR      r5,r5,r3,LSL #10
000030  6025              STR      r5,[r4,#0]
000032  e007              B        |L39.68|
                  |L39.52|
000034  1053              ASRS     r3,r2,#1
000036  f0120f01          TST      r2,#1
00003a  d001              BEQ      |L39.64|
00003c  1c5d              ADDS     r5,r3,#1
00003e  b2ab              UXTH     r3,r5
                  |L39.64|
000040  029d              LSLS     r5,r3,#10
000042  6025              STR      r5,[r4,#0]
                  |L39.68|
000044  e00a              B        |L39.92|
                  |L39.70|
000046  2902              CMP      r1,#2
000048  d108              BNE      |L39.92|
00004a  4b05              LDR      r3,|L39.96|
00004c  681b              LDR      r3,[r3,#0]
00004e  b29b              UXTH     r3,r3
000050  eb0303c0          ADD      r3,r3,r0,LSL #3
000054  1c9b              ADDS     r3,r3,#2
000056  4c03              LDR      r4,|L39.100|
000058  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L39.92|
;;;645    }
00005c  bd30              POP      {r4,r5,pc}
;;;646    /*******************************************************************************
                          ENDP

00005e  0000              DCW      0x0000
                  |L39.96|
                          DCD      0x40005c50
                  |L39.100|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf1Addr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf1Addr PROC
;;;595    *******************************************************************************/
;;;596    void SetEPDblBuf1Addr(uint8_t bEpNum, uint16_t wBuf1Addr)
000000  b510              PUSH     {r4,lr}
;;;597    {
;;;598      _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);
000002  104a              ASRS     r2,r1,#1
000004  0053              LSLS     r3,r2,#1
000006  4a05              LDR      r2,|L40.28|
000008  6812              LDR      r2,[r2,#0]
00000a  b292              UXTH     r2,r2
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  1d12              ADDS     r2,r2,#4
000012  4c03              LDR      r4,|L40.32|
000014  f8443012          STR      r3,[r4,r2,LSL #1]
;;;599    }
000018  bd10              POP      {r4,pc}
;;;600    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L40.28|
                          DCD      0x40005c50
                  |L40.32|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf1Count||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf1Count PROC
;;;653    *******************************************************************************/
;;;654    void SetEPDblBuf1Count(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  b530              PUSH     {r4,r5,lr}
;;;655    {
;;;656      _SetEPDblBuf1Count(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d11f              BNE      |L41.70|
000006  4b16              LDR      r3,|L41.96|
000008  681b              LDR      r3,[r3,#0]
00000a  b29b              UXTH     r3,r3
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  1d9b              ADDS     r3,r3,#6
000012  4d14              LDR      r5,|L41.100|
000014  eb050443          ADD      r4,r5,r3,LSL #1
000018  2a3e              CMP      r2,#0x3e
00001a  dd0b              BLE      |L41.52|
00001c  1153              ASRS     r3,r2,#5
00001e  f0120f1f          TST      r2,#0x1f
000022  d101              BNE      |L41.40|
000024  1e5d              SUBS     r5,r3,#1
000026  b2ab              UXTH     r3,r5
                  |L41.40|
000028  f44f4500          MOV      r5,#0x8000
00002c  ea452583          ORR      r5,r5,r3,LSL #10
000030  6025              STR      r5,[r4,#0]
000032  e007              B        |L41.68|
                  |L41.52|
000034  1053              ASRS     r3,r2,#1
000036  f0120f01          TST      r2,#1
00003a  d001              BEQ      |L41.64|
00003c  1c5d              ADDS     r5,r3,#1
00003e  b2ab              UXTH     r3,r5
                  |L41.64|
000040  029d              LSLS     r5,r3,#10
000042  6025              STR      r5,[r4,#0]
                  |L41.68|
000044  e00a              B        |L41.92|
                  |L41.70|
000046  2902              CMP      r1,#2
000048  d108              BNE      |L41.92|
00004a  4b05              LDR      r3,|L41.96|
00004c  681b              LDR      r3,[r3,#0]
00004e  b29b              UXTH     r3,r3
000050  eb0303c0          ADD      r3,r3,r0,LSL #3
000054  1d9b              ADDS     r3,r3,#6
000056  4c03              LDR      r4,|L41.100|
000058  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L41.92|
;;;657    }
00005c  bd30              POP      {r4,r5,pc}
;;;658    /*******************************************************************************
                          ENDP

00005e  0000              DCW      0x0000
                  |L41.96|
                          DCD      0x40005c50
                  |L41.100|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuffAddr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuffAddr PROC
;;;571    *******************************************************************************/
;;;572    void SetEPDblBuffAddr(uint8_t bEpNum, uint16_t wBuf0Addr, uint16_t wBuf1Addr)
000000  b530              PUSH     {r4,r5,lr}
;;;573    {
;;;574      _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
000002  104b              ASRS     r3,r1,#1
000004  005b              LSLS     r3,r3,#1
000006  4c0a              LDR      r4,|L42.48|
000008  6824              LDR      r4,[r4,#0]
00000a  b2a4              UXTH     r4,r4
00000c  eb0404c0          ADD      r4,r4,r0,LSL #3
000010  4d08              LDR      r5,|L42.52|
000012  f8453014          STR      r3,[r5,r4,LSL #1]
000016  1053              ASRS     r3,r2,#1
000018  005c              LSLS     r4,r3,#1
00001a  4b07              LDR      r3,|L42.56|
00001c  f8d33c50          LDR      r3,[r3,#0xc50]
000020  b29b              UXTH     r3,r3
000022  eb0303c0          ADD      r3,r3,r0,LSL #3
000026  1d1b              ADDS     r3,r3,#4
000028  f8454013          STR      r4,[r5,r3,LSL #1]
;;;575    }
00002c  bd30              POP      {r4,r5,pc}
;;;576    /*******************************************************************************
                          ENDP

00002e  0000              DCW      0x0000
                  |L42.48|
                          DCD      0x40005c50
                  |L42.52|
                          DCD      0x40006000
                  |L42.56|
                          DCD      0x40005000

                          AREA ||i.SetEPDblBuffCount||, CODE, READONLY, ALIGN=2

                  SetEPDblBuffCount PROC
;;;629    *******************************************************************************/
;;;630    void SetEPDblBuffCount(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  b530              PUSH     {r4,r5,lr}
;;;631    {
;;;632      _SetEPDblBuffCount(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d11f              BNE      |L43.70|
000006  4c2c              LDR      r4,|L43.184|
000008  6824              LDR      r4,[r4,#0]
00000a  b2a4              UXTH     r4,r4
00000c  eb0404c0          ADD      r4,r4,r0,LSL #3
000010  1ca4              ADDS     r4,r4,#2
000012  4d2a              LDR      r5,|L43.188|
000014  eb050344          ADD      r3,r5,r4,LSL #1
000018  2a3e              CMP      r2,#0x3e
00001a  dd0b              BLE      |L43.52|
00001c  1154              ASRS     r4,r2,#5
00001e  f0120f1f          TST      r2,#0x1f
000022  d101              BNE      |L43.40|
000024  1e65              SUBS     r5,r4,#1
000026  b2ac              UXTH     r4,r5
                  |L43.40|
000028  f44f4500          MOV      r5,#0x8000
00002c  ea452584          ORR      r5,r5,r4,LSL #10
000030  601d              STR      r5,[r3,#0]
000032  e007              B        |L43.68|
                  |L43.52|
000034  1054              ASRS     r4,r2,#1
000036  f0120f01          TST      r2,#1
00003a  d001              BEQ      |L43.64|
00003c  1c65              ADDS     r5,r4,#1
00003e  b2ac              UXTH     r4,r5
                  |L43.64|
000040  02a5              LSLS     r5,r4,#10
000042  601d              STR      r5,[r3,#0]
                  |L43.68|
000044  e00a              B        |L43.92|
                  |L43.70|
000046  2902              CMP      r1,#2
000048  d108              BNE      |L43.92|
00004a  4b1b              LDR      r3,|L43.184|
00004c  681b              LDR      r3,[r3,#0]
00004e  b29b              UXTH     r3,r3
000050  eb0303c0          ADD      r3,r3,r0,LSL #3
000054  1c9b              ADDS     r3,r3,#2
000056  4c19              LDR      r4,|L43.188|
000058  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L43.92|
00005c  2901              CMP      r1,#1
00005e  d11f              BNE      |L43.160|
000060  4c15              LDR      r4,|L43.184|
000062  6824              LDR      r4,[r4,#0]
000064  b2a4              UXTH     r4,r4
000066  eb0404c0          ADD      r4,r4,r0,LSL #3
00006a  1da4              ADDS     r4,r4,#6
00006c  4d13              LDR      r5,|L43.188|
00006e  eb050344          ADD      r3,r5,r4,LSL #1
000072  2a3e              CMP      r2,#0x3e
000074  dd0b              BLE      |L43.142|
000076  1154              ASRS     r4,r2,#5
000078  f0120f1f          TST      r2,#0x1f
00007c  d101              BNE      |L43.130|
00007e  1e65              SUBS     r5,r4,#1
000080  b2ac              UXTH     r4,r5
                  |L43.130|
000082  f44f4500          MOV      r5,#0x8000
000086  ea452584          ORR      r5,r5,r4,LSL #10
00008a  601d              STR      r5,[r3,#0]
00008c  e007              B        |L43.158|
                  |L43.142|
00008e  1054              ASRS     r4,r2,#1
000090  f0120f01          TST      r2,#1
000094  d001              BEQ      |L43.154|
000096  1c65              ADDS     r5,r4,#1
000098  b2ac              UXTH     r4,r5
                  |L43.154|
00009a  02a5              LSLS     r5,r4,#10
00009c  601d              STR      r5,[r3,#0]
                  |L43.158|
00009e  e00a              B        |L43.182|
                  |L43.160|
0000a0  2902              CMP      r1,#2
0000a2  d108              BNE      |L43.182|
0000a4  4b04              LDR      r3,|L43.184|
0000a6  681b              LDR      r3,[r3,#0]
0000a8  b29b              UXTH     r3,r3
0000aa  eb0303c0          ADD      r3,r3,r0,LSL #3
0000ae  1d9b              ADDS     r3,r3,#6
0000b0  4c02              LDR      r4,|L43.188|
0000b2  f8442013          STR      r2,[r4,r3,LSL #1]
                  |L43.182|
;;;633    }
0000b6  bd30              POP      {r4,r5,pc}
;;;634    /*******************************************************************************
                          ENDP

                  |L43.184|
                          DCD      0x40005c50
                  |L43.188|
                          DCD      0x40006000

                          AREA ||i.SetEPDoubleBuff||, CODE, READONLY, ALIGN=2

                  SetEPDoubleBuff PROC
;;;332    *******************************************************************************/
;;;333    void SetEPDoubleBuff(uint8_t bEpNum)
000000  4908              LDR      r1,|L44.36|
;;;334    {
;;;335      _SetEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f4417180          ORR      r1,r1,#0x100
000010  f648728f          MOV      r2,#0x8f8f
000014  4011              ANDS     r1,r1,r2
000016  4a03              LDR      r2,|L44.36|
000018  eb020280          ADD      r2,r2,r0,LSL #2
00001c  f8c21c00          STR      r1,[r2,#0xc00]
;;;336    }
000020  4770              BX       lr
;;;337    /*******************************************************************************
                          ENDP

000022  0000              DCW      0x0000
                  |L44.36|
                          DCD      0x40005000

                          AREA ||i.SetEPRxAddr||, CODE, READONLY, ALIGN=2

                  SetEPRxAddr PROC
;;;478    *******************************************************************************/
;;;479    void SetEPRxAddr(uint8_t bEpNum, uint16_t wAddr)
000000  b510              PUSH     {r4,lr}
;;;480    {
;;;481      _SetEPRxAddr(bEpNum, wAddr);
000002  104a              ASRS     r2,r1,#1
000004  0053              LSLS     r3,r2,#1
000006  4a05              LDR      r2,|L45.28|
000008  6812              LDR      r2,[r2,#0]
00000a  b292              UXTH     r2,r2
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  1d12              ADDS     r2,r2,#4
000012  4c03              LDR      r4,|L45.32|
000014  f8443012          STR      r3,[r4,r2,LSL #1]
;;;482    }
000018  bd10              POP      {r4,pc}
;;;483    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L45.28|
                          DCD      0x40005c50
                  |L45.32|
                          DCD      0x40006000

                          AREA ||i.SetEPRxCount||, CODE, READONLY, ALIGN=2

                  SetEPRxCount PROC
;;;536    *******************************************************************************/
;;;537    void SetEPRxCount(uint8_t bEpNum, uint16_t wCount)
000000  b510              PUSH     {r4,lr}
;;;538    {
;;;539      _SetEPRxCount(bEpNum, wCount);
000002  4a10              LDR      r2,|L46.68|
000004  6812              LDR      r2,[r2,#0]
000006  b292              UXTH     r2,r2
000008  eb0202c0          ADD      r2,r2,r0,LSL #3
00000c  1d92              ADDS     r2,r2,#6
00000e  4c0e              LDR      r4,|L46.72|
000010  eb040342          ADD      r3,r4,r2,LSL #1
000014  293e              CMP      r1,#0x3e
000016  dd0b              BLE      |L46.48|
000018  114a              ASRS     r2,r1,#5
00001a  f0110f1f          TST      r1,#0x1f
00001e  d101              BNE      |L46.36|
000020  1e54              SUBS     r4,r2,#1
000022  b2a2              UXTH     r2,r4
                  |L46.36|
000024  f44f4400          MOV      r4,#0x8000
000028  ea442482          ORR      r4,r4,r2,LSL #10
00002c  601c              STR      r4,[r3,#0]
00002e  e007              B        |L46.64|
                  |L46.48|
000030  104a              ASRS     r2,r1,#1
000032  f0110f01          TST      r1,#1
000036  d001              BEQ      |L46.60|
000038  1c54              ADDS     r4,r2,#1
00003a  b2a2              UXTH     r2,r4
                  |L46.60|
00003c  0294              LSLS     r4,r2,#10
00003e  601c              STR      r4,[r3,#0]
                  |L46.64|
;;;540    }
000040  bd10              POP      {r4,pc}
;;;541    /*******************************************************************************
                          ENDP

000042  0000              DCW      0x0000
                  |L46.68|
                          DCD      0x40005c50
                  |L46.72|
                          DCD      0x40006000

                          AREA ||i.SetEPRxStatus||, CODE, READONLY, ALIGN=2

                  SetEPRxStatus PROC
;;;205    *******************************************************************************/
;;;206    void SetEPRxStatus(uint8_t bEpNum, uint16_t wState)
000000  b510              PUSH     {r4,lr}
;;;207    {
;;;208      _SetEPRxStatus(bEpNum, wState);
000002  4b0d              LDR      r3,|L47.56|
000004  eb030380          ADD      r3,r3,r0,LSL #2
000008  f8d33c00          LDR      r3,[r3,#0xc00]
00000c  b29b              UXTH     r3,r3
00000e  f64b748f          MOV      r4,#0xbf8f
000012  ea030204          AND      r2,r3,r4
000016  f4115f80          TST      r1,#0x1000
00001a  d001              BEQ      |L47.32|
00001c  f4825280          EOR      r2,r2,#0x1000
                  |L47.32|
000020  f4115f00          TST      r1,#0x2000
000024  d001              BEQ      |L47.42|
000026  f4825200          EOR      r2,r2,#0x2000
                  |L47.42|
00002a  4b03              LDR      r3,|L47.56|
00002c  eb030380          ADD      r3,r3,r0,LSL #2
000030  f8c32c00          STR      r2,[r3,#0xc00]
;;;209    }
000034  bd10              POP      {r4,pc}
;;;210    
                          ENDP

000036  0000              DCW      0x0000
                  |L47.56|
                          DCD      0x40005000

                          AREA ||i.SetEPRxValid||, CODE, READONLY, ALIGN=2

                  SetEPRxValid PROC
;;;275    *******************************************************************************/
;;;276    void SetEPRxValid(uint8_t bEpNum)
000000  4a09              LDR      r2,|L48.40|
;;;277    {
;;;278      _SetEPRxStatus(bEpNum, EP_RX_VALID);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  f8d22c00          LDR      r2,[r2,#0xc00]
00000a  b292              UXTH     r2,r2
00000c  f64b738f          MOV      r3,#0xbf8f
000010  ea020103          AND      r1,r2,r3
000014  f4815180          EOR      r1,r1,#0x1000
000018  f4815100          EOR      r1,r1,#0x2000
00001c  4a02              LDR      r2,|L48.40|
00001e  eb020280          ADD      r2,r2,r0,LSL #2
000022  f8c21c00          STR      r1,[r2,#0xc00]
;;;279    }
000026  4770              BX       lr
;;;280    
                          ENDP

                  |L48.40|
                          DCD      0x40005000

                          AREA ||i.SetEPTxAddr||, CODE, READONLY, ALIGN=2

                  SetEPTxAddr PROC
;;;466    *******************************************************************************/
;;;467    void SetEPTxAddr(uint8_t bEpNum, uint16_t wAddr)
000000  b510              PUSH     {r4,lr}
;;;468    {
;;;469      _SetEPTxAddr(bEpNum, wAddr);
000002  104a              ASRS     r2,r1,#1
000004  0052              LSLS     r2,r2,#1
000006  4b04              LDR      r3,|L49.24|
000008  681b              LDR      r3,[r3,#0]
00000a  b29b              UXTH     r3,r3
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  4c02              LDR      r4,|L49.28|
000012  f8442013          STR      r2,[r4,r3,LSL #1]
;;;470    }
000016  bd10              POP      {r4,pc}
;;;471    /*******************************************************************************
                          ENDP

                  |L49.24|
                          DCD      0x40005c50
                  |L49.28|
                          DCD      0x40006000

                          AREA ||i.SetEPTxCount||, CODE, READONLY, ALIGN=2

                  SetEPTxCount PROC
;;;512    *******************************************************************************/
;;;513    void SetEPTxCount(uint8_t bEpNum, uint16_t wCount)
000000  4a04              LDR      r2,|L50.20|
;;;514    {
;;;515      _SetEPTxCount(bEpNum, wCount);
000002  6812              LDR      r2,[r2,#0]
000004  b292              UXTH     r2,r2
000006  eb0202c0          ADD      r2,r2,r0,LSL #3
00000a  1c92              ADDS     r2,r2,#2
00000c  4b02              LDR      r3,|L50.24|
00000e  f8431012          STR      r1,[r3,r2,LSL #1]
;;;516    }
000012  4770              BX       lr
;;;517    /*******************************************************************************
                          ENDP

                  |L50.20|
                          DCD      0x40005c50
                  |L50.24|
                          DCD      0x40006000

                          AREA ||i.SetEPTxStatus||, CODE, READONLY, ALIGN=2

                  SetEPTxStatus PROC
;;;192    *******************************************************************************/
;;;193    void SetEPTxStatus(uint8_t bEpNum, uint16_t wState)
000000  b510              PUSH     {r4,lr}
;;;194    {
;;;195      _SetEPTxStatus(bEpNum, wState);
000002  4b0d              LDR      r3,|L51.56|
000004  eb030380          ADD      r3,r3,r0,LSL #2
000008  f8d33c00          LDR      r3,[r3,#0xc00]
00000c  b29b              UXTH     r3,r3
00000e  f64874bf          MOV      r4,#0x8fbf
000012  ea030204          AND      r2,r3,r4
000016  f0110f10          TST      r1,#0x10
00001a  d001              BEQ      |L51.32|
00001c  f0820210          EOR      r2,r2,#0x10
                  |L51.32|
000020  f0110f20          TST      r1,#0x20
000024  d001              BEQ      |L51.42|
000026  f0820220          EOR      r2,r2,#0x20
                  |L51.42|
00002a  4b03              LDR      r3,|L51.56|
00002c  eb030380          ADD      r3,r3,r0,LSL #2
000030  f8c32c00          STR      r2,[r3,#0xc00]
;;;196    }
000034  bd10              POP      {r4,pc}
;;;197    
                          ENDP

000036  0000              DCW      0x0000
                  |L51.56|
                          DCD      0x40005000

                          AREA ||i.SetEPTxValid||, CODE, READONLY, ALIGN=2

                  SetEPTxValid PROC
;;;263    *******************************************************************************/
;;;264    void SetEPTxValid(uint8_t bEpNum)
000000  4a09              LDR      r2,|L52.40|
;;;265    {
;;;266      _SetEPTxStatus(bEpNum, EP_TX_VALID);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  f8d22c00          LDR      r2,[r2,#0xc00]
00000a  b292              UXTH     r2,r2
00000c  f64873bf          MOV      r3,#0x8fbf
000010  ea020103          AND      r1,r2,r3
000014  f0810110          EOR      r1,r1,#0x10
000018  f0810120          EOR      r1,r1,#0x20
00001c  4a02              LDR      r2,|L52.40|
00001e  eb020280          ADD      r2,r2,r0,LSL #2
000022  f8c21c00          STR      r1,[r2,#0xc00]
;;;267    }
000026  4770              BX       lr
;;;268    
                          ENDP

                  |L52.40|
                          DCD      0x40005000

                          AREA ||i.SetEPType||, CODE, READONLY, ALIGN=2

                  SetEPType PROC
;;;167    *******************************************************************************/
;;;168    void SetEPType(uint8_t bEpNum, uint16_t wType)
000000  4a07              LDR      r2,|L53.32|
;;;169    {
;;;170      _SetEPType(bEpNum, wType);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  f8d22c00          LDR      r2,[r2,#0xc00]
00000a  b292              UXTH     r2,r2
00000c  f648138f          MOV      r3,#0x898f
000010  401a              ANDS     r2,r2,r3
000012  430a              ORRS     r2,r2,r1
000014  4b02              LDR      r3,|L53.32|
000016  eb030380          ADD      r3,r3,r0,LSL #2
00001a  f8c32c00          STR      r2,[r3,#0xc00]
;;;171    }
00001e  4770              BX       lr
;;;172    
                          ENDP

                  |L53.32|
                          DCD      0x40005000

                          AREA ||i.SetEP_KIND||, CODE, READONLY, ALIGN=2

                  SetEP_KIND PROC
;;;287    *******************************************************************************/
;;;288    void SetEP_KIND(uint8_t bEpNum)
000000  4908              LDR      r1,|L54.36|
;;;289    {
;;;290      _SetEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f4417180          ORR      r1,r1,#0x100
000010  f648728f          MOV      r2,#0x8f8f
000014  4011              ANDS     r1,r1,r2
000016  4a03              LDR      r2,|L54.36|
000018  eb020280          ADD      r2,r2,r0,LSL #2
00001c  f8c21c00          STR      r1,[r2,#0xc00]
;;;291    }
000020  4770              BX       lr
;;;292    
                          ENDP

000022  0000              DCW      0x0000
                  |L54.36|
                          DCD      0x40005000

                          AREA ||i.SetISTR||, CODE, READONLY, ALIGN=2

                  SetISTR PROC
;;;57     *******************************************************************************/
;;;58     void SetISTR(uint16_t wRegValue)
000000  4901              LDR      r1,|L55.8|
;;;59     {
;;;60       _SetISTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;61     }
000004  4770              BX       lr
;;;62     
                          ENDP

000006  0000              DCW      0x0000
                  |L55.8|
                          DCD      0x40005c44

                          AREA ||i.Set_Status_Out||, CODE, READONLY, ALIGN=2

                  Set_Status_Out PROC
;;;321    *******************************************************************************/
;;;322    void Set_Status_Out(uint8_t bEpNum)
000000  4908              LDR      r1,|L56.36|
;;;323    {
;;;324      _SetEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f4417180          ORR      r1,r1,#0x100
000010  f648728f          MOV      r2,#0x8f8f
000014  4011              ANDS     r1,r1,r2
000016  4a03              LDR      r2,|L56.36|
000018  eb020280          ADD      r2,r2,r0,LSL #2
00001c  f8c21c00          STR      r1,[r2,#0xc00]
;;;325    }
000020  4770              BX       lr
;;;326    /*******************************************************************************
                          ENDP

000022  0000              DCW      0x0000
                  |L56.36|
                          DCD      0x40005000

                          AREA ||i.ToWord||, CODE, READONLY, ALIGN=1

                  ToWord PROC
;;;725    *******************************************************************************/
;;;726    uint16_t ToWord(uint8_t bh, uint8_t bl)
000000  4602              MOV      r2,r0
;;;727    {
;;;728      uint16_t wRet;
;;;729      wRet = (uint16_t)bl | ((uint16_t)bh << 8);
000002  ea412002          ORR      r0,r1,r2,LSL #8
;;;730      return(wRet);
;;;731    }
000006  4770              BX       lr
;;;732    /*******************************************************************************
                          ENDP


                          AREA ||i.ToggleDTOG_RX||, CODE, READONLY, ALIGN=2

                  ToggleDTOG_RX PROC
;;;398    *******************************************************************************/
;;;399    void ToggleDTOG_RX(uint8_t bEpNum)
000000  4908              LDR      r1,|L58.36|
;;;400    {
;;;401      _ToggleDTOG_RX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f648728f          MOV      r2,#0x8f8f
000010  4011              ANDS     r1,r1,r2
000012  f4414180          ORR      r1,r1,#0x4000
000016  4a03              LDR      r2,|L58.36|
000018  eb020280          ADD      r2,r2,r0,LSL #2
00001c  f8c21c00          STR      r1,[r2,#0xc00]
;;;402    }
000020  4770              BX       lr
;;;403    /*******************************************************************************
                          ENDP

000022  0000              DCW      0x0000
                  |L58.36|
                          DCD      0x40005000

                          AREA ||i.ToggleDTOG_TX||, CODE, READONLY, ALIGN=2

                  ToggleDTOG_TX PROC
;;;409    *******************************************************************************/
;;;410    void ToggleDTOG_TX(uint8_t bEpNum)
000000  4908              LDR      r1,|L59.36|
;;;411    {
;;;412      _ToggleDTOG_TX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  f8d11c00          LDR      r1,[r1,#0xc00]
00000a  b289              UXTH     r1,r1
00000c  f648728f          MOV      r2,#0x8f8f
000010  4011              ANDS     r1,r1,r2
000012  f0410140          ORR      r1,r1,#0x40
000016  4a03              LDR      r2,|L59.36|
000018  eb020280          ADD      r2,r2,r0,LSL #2
00001c  f8c21c00          STR      r1,[r2,#0xc00]
;;;413    }
000020  4770              BX       lr
;;;414    /*******************************************************************************
                          ENDP

000022  0000              DCW      0x0000
                  |L59.36|
                          DCD      0x40005000
