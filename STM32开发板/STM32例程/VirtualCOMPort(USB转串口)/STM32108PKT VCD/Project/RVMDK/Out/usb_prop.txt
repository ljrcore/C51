; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Out\usb_prop.o --depend=.\Out\usb_prop.d --device=DARMSTM --apcs=interwork -O0 -I..\inc -I..\..\..\Libraries\CMSIS\Core\CM3 -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I"D:\Program Files\KeilARM350\ARM\INC\ST\STM32F10x" ..\src\usb_prop.c]
                          THUMB

                          AREA ||i.Virtual_Com_Port_Data_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Data_Setup PROC
;;;247    *******************************************************************************/
;;;248    RESULT Virtual_Com_Port_Data_Setup(uint8_t RequestNo)
000000  b570              PUSH     {r4-r6,lr}
;;;249    {
000002  4605              MOV      r5,r0
;;;250      uint8_t    *(*CopyRoutine)(uint16_t);
;;;251    
;;;252      CopyRoutine = NULL;
000004  2400              MOVS     r4,#0
;;;253    
;;;254      if (RequestNo == GET_LINE_CODING)
000006  2d21              CMP      r5,#0x21
000008  d108              BNE      |L1.28|
;;;255      {
;;;256        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
00000a  4812              LDR      r0,|L1.84|
00000c  6800              LDR      r0,[r0,#0]  ; pInformation
00000e  7800              LDRB     r0,[r0,#0]
000010  f000007f          AND      r0,r0,#0x7f
000014  2821              CMP      r0,#0x21
000016  d10e              BNE      |L1.54|
;;;257        {
;;;258          CopyRoutine = Virtual_Com_Port_GetLineCoding;
000018  4c0f              LDR      r4,|L1.88|
00001a  e00c              B        |L1.54|
                  |L1.28|
;;;259        }
;;;260      }
;;;261      else if (RequestNo == SET_LINE_CODING)
00001c  2d20              CMP      r5,#0x20
00001e  d10a              BNE      |L1.54|
;;;262      {
;;;263        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000020  480c              LDR      r0,|L1.84|
000022  6800              LDR      r0,[r0,#0]  ; pInformation
000024  7800              LDRB     r0,[r0,#0]
000026  f000007f          AND      r0,r0,#0x7f
00002a  2821              CMP      r0,#0x21
00002c  d100              BNE      |L1.48|
;;;264        {
;;;265          CopyRoutine = Virtual_Com_Port_SetLineCoding;
00002e  4c0b              LDR      r4,|L1.92|
                  |L1.48|
;;;266        }
;;;267        Request = SET_LINE_CODING;
000030  2020              MOVS     r0,#0x20
000032  490b              LDR      r1,|L1.96|
000034  7008              STRB     r0,[r1,#0]
                  |L1.54|
;;;268      }
;;;269    
;;;270      if (CopyRoutine == NULL)
000036  b90c              CBNZ     r4,|L1.60|
;;;271      {
;;;272        return USB_UNSUPPORT;
000038  2002              MOVS     r0,#2
                  |L1.58|
;;;273      }
;;;274    
;;;275      pInformation->Ctrl_Info.CopyData = CopyRoutine;
;;;276      pInformation->Ctrl_Info.Usb_wOffset = 0;
;;;277      (*CopyRoutine)(0);
;;;278      return USB_SUCCESS;
;;;279    }
00003a  bd70              POP      {r4-r6,pc}
                  |L1.60|
00003c  4805              LDR      r0,|L1.84|
00003e  6800              LDR      r0,[r0,#0]            ;275  ; pInformation
000040  6184              STR      r4,[r0,#0x18]         ;275
000042  2100              MOVS     r1,#0                 ;276
000044  4803              LDR      r0,|L1.84|
000046  6800              LDR      r0,[r0,#0]            ;276  ; pInformation
000048  8241              STRH     r1,[r0,#0x12]         ;276
00004a  2000              MOVS     r0,#0                 ;277
00004c  47a0              BLX      r4                    ;277
00004e  2000              MOVS     r0,#0                 ;278
000050  e7f3              B        |L1.58|
;;;280    
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      pInformation
                  |L1.88|
                          DCD      Virtual_Com_Port_GetLineCoding
                  |L1.92|
                          DCD      Virtual_Com_Port_SetLineCoding
                  |L1.96|
                          DCD      Request

                          AREA ||i.Virtual_Com_Port_GetConfigDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetConfigDescriptor PROC
;;;324    *******************************************************************************/
;;;325    uint8_t *Virtual_Com_Port_GetConfigDescriptor(uint16_t Length)
000000  b510              PUSH     {r4,lr}
;;;326    {
000002  4604              MOV      r4,r0
;;;327      return Standard_GetDescriptorData(Length, &Config_Descriptor);
000004  4902              LDR      r1,|L2.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       Standard_GetDescriptorData
;;;328    }
00000c  bd10              POP      {r4,pc}
;;;329    
                          ENDP

00000e  0000              DCW      0x0000
                  |L2.16|
                          DCD      Config_Descriptor

                          AREA ||i.Virtual_Com_Port_GetDeviceDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetDeviceDescriptor PROC
;;;312    *******************************************************************************/
;;;313    uint8_t *Virtual_Com_Port_GetDeviceDescriptor(uint16_t Length)
000000  b510              PUSH     {r4,lr}
;;;314    {
000002  4604              MOV      r4,r0
;;;315      return Standard_GetDescriptorData(Length, &Device_Descriptor);
000004  4902              LDR      r1,|L3.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       Standard_GetDescriptorData
;;;316    }
00000c  bd10              POP      {r4,pc}
;;;317    
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      Device_Descriptor

                          AREA ||i.Virtual_Com_Port_GetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetLineCoding PROC
;;;378    *******************************************************************************/
;;;379    uint8_t *Virtual_Com_Port_GetLineCoding(uint16_t Length)
000000  4601              MOV      r1,r0
;;;380    {
;;;381      if (Length == 0)
000002  b929              CBNZ     r1,|L4.16|
;;;382      {
;;;383        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
000004  2008              MOVS     r0,#8
000006  4a03              LDR      r2,|L4.20|
000008  6812              LDR      r2,[r2,#0]  ; pInformation
00000a  8210              STRH     r0,[r2,#0x10]
;;;384        return NULL;
00000c  2000              MOVS     r0,#0
                  |L4.14|
;;;385      }
;;;386      return(uint8_t *)&linecoding;
;;;387    }
00000e  4770              BX       lr
                  |L4.16|
000010  4801              LDR      r0,|L4.24|
000012  e7fc              B        |L4.14|
;;;388    
                          ENDP

                  |L4.20|
                          DCD      pInformation
                  |L4.24|
                          DCD      linecoding

                          AREA ||i.Virtual_Com_Port_GetStringDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetStringDescriptor PROC
;;;336    *******************************************************************************/
;;;337    uint8_t *Virtual_Com_Port_GetStringDescriptor(uint16_t Length)
000000  b570              PUSH     {r4-r6,lr}
;;;338    {
000002  4604              MOV      r4,r0
;;;339      uint8_t wValue0 = pInformation->USBwValue0;
000004  4806              LDR      r0,|L5.32|
000006  6800              LDR      r0,[r0,#0]  ; pInformation
000008  78c5              LDRB     r5,[r0,#3]
;;;340      if (wValue0 > 4)
00000a  2d04              CMP      r5,#4
00000c  dd01              BLE      |L5.18|
;;;341      {
;;;342        return NULL;
00000e  2000              MOVS     r0,#0
                  |L5.16|
;;;343      }
;;;344      else
;;;345      {
;;;346        return Standard_GetDescriptorData(Length, &String_Descriptor[wValue0]);
;;;347      }
;;;348    }
000010  bd70              POP      {r4-r6,pc}
                  |L5.18|
000012  4804              LDR      r0,|L5.36|
000014  eb0001c5          ADD      r1,r0,r5,LSL #3       ;346
000018  4620              MOV      r0,r4                 ;346
00001a  f7fffffe          BL       Standard_GetDescriptorData
00001e  e7f7              B        |L5.16|
;;;349    
                          ENDP

                  |L5.32|
                          DCD      pInformation
                  |L5.36|
                          DCD      String_Descriptor

                          AREA ||i.Virtual_Com_Port_Get_Interface_Setting||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Get_Interface_Setting PROC
;;;358    *******************************************************************************/
;;;359    RESULT Virtual_Com_Port_Get_Interface_Setting(uint8_t Interface, uint8_t AlternateSetting)
000000  4602              MOV      r2,r0
;;;360    {
;;;361      if (AlternateSetting > 0)
000002  2900              CMP      r1,#0
000004  dd01              BLE      |L6.10|
;;;362      {
;;;363        return USB_UNSUPPORT;
000006  2002              MOVS     r0,#2
                  |L6.8|
;;;364      }
;;;365      else if (Interface > 1)
;;;366      {
;;;367        return USB_UNSUPPORT;
;;;368      }
;;;369      return USB_SUCCESS;
;;;370    }
000008  4770              BX       lr
                  |L6.10|
00000a  2a01              CMP      r2,#1                 ;365
00000c  dd01              BLE      |L6.18|
00000e  2002              MOVS     r0,#2                 ;367
000010  e7fa              B        |L6.8|
                  |L6.18|
000012  2000              MOVS     r0,#0                 ;369
000014  e7f8              B        |L6.8|
;;;371    
                          ENDP


                          AREA ||i.Virtual_Com_Port_NoData_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_NoData_Setup PROC
;;;287    *******************************************************************************/
;;;288    RESULT Virtual_Com_Port_NoData_Setup(uint8_t RequestNo)
000000  4601              MOV      r1,r0
;;;289    {
;;;290    
;;;291      if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000002  4808              LDR      r0,|L7.36|
000004  6800              LDR      r0,[r0,#0]  ; pInformation
000006  7800              LDRB     r0,[r0,#0]
000008  f000007f          AND      r0,r0,#0x7f
00000c  2821              CMP      r0,#0x21
00000e  d107              BNE      |L7.32|
;;;292      {
;;;293        if (RequestNo == SET_COMM_FEATURE)
000010  2902              CMP      r1,#2
000012  d101              BNE      |L7.24|
;;;294        {
;;;295          return USB_SUCCESS;
000014  2000              MOVS     r0,#0
                  |L7.22|
;;;296        }
;;;297        else if (RequestNo == SET_CONTROL_LINE_STATE)
;;;298        {
;;;299          return USB_SUCCESS;
;;;300        }
;;;301      }
;;;302    
;;;303      return USB_UNSUPPORT;
;;;304    }
000016  4770              BX       lr
                  |L7.24|
000018  2922              CMP      r1,#0x22              ;297
00001a  d101              BNE      |L7.32|
00001c  2000              MOVS     r0,#0                 ;299
00001e  e7fa              B        |L7.22|
                  |L7.32|
000020  2002              MOVS     r0,#2                 ;303
000022  e7f8              B        |L7.22|
;;;305    
                          ENDP

                  |L7.36|
                          DCD      pInformation

                          AREA ||i.Virtual_Com_Port_Reset||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Reset PROC
;;;138    *******************************************************************************/
;;;139    void Virtual_Com_Port_Reset(void)
000000  b510              PUSH     {r4,lr}
;;;140    {
;;;141      /* Set Virtual_Com_Port DEVICE as not configured */
;;;142      pInformation->Current_Configuration = 0;
000002  2000              MOVS     r0,#0
000004  4934              LDR      r1,|L8.216|
000006  6809              LDR      r1,[r1,#0]  ; pInformation
000008  7288              STRB     r0,[r1,#0xa]
;;;143    
;;;144      /* Current Feature initialization */
;;;145      pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
00000a  4834              LDR      r0,|L8.220|
00000c  79c0              LDRB     r0,[r0,#7]  ; Virtual_Com_Port_ConfigDescriptor
00000e  4932              LDR      r1,|L8.216|
000010  6809              LDR      r1,[r1,#0]  ; pInformation
000012  7248              STRB     r0,[r1,#9]
;;;146    
;;;147      /* Set Virtual_Com_Port DEVICE with the default Interface*/
;;;148      pInformation->Current_Interface = 0;
000014  2000              MOVS     r0,#0
000016  4930              LDR      r1,|L8.216|
000018  6809              LDR      r1,[r1,#0]  ; pInformation
00001a  72c8              STRB     r0,[r1,#0xb]
;;;149      SetBTABLE(BTABLE_ADDRESS);
00001c  f7fffffe          BL       SetBTABLE
;;;150    
;;;151      /* Initialize Endpoint 0 */
;;;152      SetEPType(ENDP0, EP_CONTROL);
000020  f44f7100          MOV      r1,#0x200
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       SetEPType
;;;153      SetEPTxStatus(ENDP0, EP_TX_STALL);
00002a  2110              MOVS     r1,#0x10
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       SetEPTxStatus
;;;154      SetEPRxAddr(ENDP0, ENDP0_RXADDR);
000032  2140              MOVS     r1,#0x40
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       SetEPRxAddr
;;;155      SetEPTxAddr(ENDP0, ENDP0_TXADDR);
00003a  2180              MOVS     r1,#0x80
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       SetEPTxAddr
;;;156      Clear_Status_Out(ENDP0);
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       Clear_Status_Out
;;;157      SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
000048  4825              LDR      r0,|L8.224|
00004a  f890102c          LDRB     r1,[r0,#0x2c]  ; Device_Property
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       SetEPRxCount
;;;158      SetEPRxValid(ENDP0);
000054  2000              MOVS     r0,#0
000056  f7fffffe          BL       SetEPRxValid
;;;159    
;;;160      /* Initialize Endpoint 1 */
;;;161      SetEPType(ENDP1, EP_BULK);
00005a  2100              MOVS     r1,#0
00005c  2001              MOVS     r0,#1
00005e  f7fffffe          BL       SetEPType
;;;162      SetEPTxAddr(ENDP1, ENDP1_TXADDR);
000062  21c0              MOVS     r1,#0xc0
000064  2001              MOVS     r0,#1
000066  f7fffffe          BL       SetEPTxAddr
;;;163      SetEPTxStatus(ENDP1, EP_TX_NAK);
00006a  2120              MOVS     r1,#0x20
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       SetEPTxStatus
;;;164      SetEPRxStatus(ENDP1, EP_RX_DIS);
000072  2100              MOVS     r1,#0
000074  2001              MOVS     r0,#1
000076  f7fffffe          BL       SetEPRxStatus
;;;165    
;;;166      /* Initialize Endpoint 2 */
;;;167      SetEPType(ENDP2, EP_INTERRUPT);
00007a  f44f61c0          MOV      r1,#0x600
00007e  2002              MOVS     r0,#2
000080  f7fffffe          BL       SetEPType
;;;168      SetEPTxAddr(ENDP2, ENDP2_TXADDR);
000084  f44f7180          MOV      r1,#0x100
000088  2002              MOVS     r0,#2
00008a  f7fffffe          BL       SetEPTxAddr
;;;169      SetEPRxStatus(ENDP2, EP_RX_DIS);
00008e  2100              MOVS     r1,#0
000090  2002              MOVS     r0,#2
000092  f7fffffe          BL       SetEPRxStatus
;;;170      SetEPTxStatus(ENDP2, EP_TX_NAK);
000096  2120              MOVS     r1,#0x20
000098  2002              MOVS     r0,#2
00009a  f7fffffe          BL       SetEPTxStatus
;;;171    
;;;172      /* Initialize Endpoint 3 */
;;;173      SetEPType(ENDP3, EP_BULK);
00009e  2100              MOVS     r1,#0
0000a0  2003              MOVS     r0,#3
0000a2  f7fffffe          BL       SetEPType
;;;174      SetEPRxAddr(ENDP3, ENDP3_RXADDR);
0000a6  f44f7188          MOV      r1,#0x110
0000aa  2003              MOVS     r0,#3
0000ac  f7fffffe          BL       SetEPRxAddr
;;;175      SetEPRxCount(ENDP3, VIRTUAL_COM_PORT_DATA_SIZE);
0000b0  2140              MOVS     r1,#0x40
0000b2  2003              MOVS     r0,#3
0000b4  f7fffffe          BL       SetEPRxCount
;;;176      SetEPRxStatus(ENDP3, EP_RX_VALID);
0000b8  f44f5140          MOV      r1,#0x3000
0000bc  2003              MOVS     r0,#3
0000be  f7fffffe          BL       SetEPRxStatus
;;;177      SetEPTxStatus(ENDP3, EP_TX_DIS);
0000c2  2100              MOVS     r1,#0
0000c4  2003              MOVS     r0,#3
0000c6  f7fffffe          BL       SetEPTxStatus
;;;178    
;;;179      /* Set this device to response on default address */
;;;180      SetDeviceAddress(0);
0000ca  2000              MOVS     r0,#0
0000cc  f7fffffe          BL       SetDeviceAddress
;;;181    
;;;182      bDeviceState = ATTACHED;
0000d0  2001              MOVS     r0,#1
0000d2  4904              LDR      r1,|L8.228|
0000d4  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;183    }
0000d6  bd10              POP      {r4,pc}
;;;184    
                          ENDP

                  |L8.216|
                          DCD      pInformation
                  |L8.220|
                          DCD      Virtual_Com_Port_ConfigDescriptor
                  |L8.224|
                          DCD      Device_Property
                  |L8.228|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetConfiguration||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetConfiguration PROC
;;;191    *******************************************************************************/
;;;192    void Virtual_Com_Port_SetConfiguration(void)
000000  4803              LDR      r0,|L9.16|
;;;193    {
;;;194      DEVICE_INFO *pInfo = &Device_Info;
;;;195    
;;;196      if (pInfo->Current_Configuration != 0)
000002  7a81              LDRB     r1,[r0,#0xa]
000004  b111              CBZ      r1,|L9.12|
;;;197      {
;;;198        /* Device configured */
;;;199        bDeviceState = CONFIGURED;
000006  2105              MOVS     r1,#5
000008  4a02              LDR      r2,|L9.20|
00000a  6011              STR      r1,[r2,#0]  ; bDeviceState
                  |L9.12|
;;;200      }
;;;201    }
00000c  4770              BX       lr
;;;202    
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      Device_Info
                  |L9.20|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetDeviceAddress||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetDeviceAddress PROC
;;;209    *******************************************************************************/
;;;210    void Virtual_Com_Port_SetDeviceAddress (void)
000000  2004              MOVS     r0,#4
;;;211    {
;;;212      bDeviceState = ADDRESSED;
000002  4901              LDR      r1,|L10.8|
000004  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;213    }
000006  4770              BX       lr
;;;214    
                          ENDP

                  |L10.8|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetLineCoding PROC
;;;395    *******************************************************************************/
;;;396    uint8_t *Virtual_Com_Port_SetLineCoding(uint16_t Length)
000000  4601              MOV      r1,r0
;;;397    {
;;;398      if (Length == 0)
000002  b929              CBNZ     r1,|L11.16|
;;;399      {
;;;400        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
000004  2008              MOVS     r0,#8
000006  4a03              LDR      r2,|L11.20|
000008  6812              LDR      r2,[r2,#0]  ; pInformation
00000a  8210              STRH     r0,[r2,#0x10]
;;;401        return NULL;
00000c  2000              MOVS     r0,#0
                  |L11.14|
;;;402      }
;;;403      return(uint8_t *)&linecoding;
;;;404    }
00000e  4770              BX       lr
                  |L11.16|
000010  4801              LDR      r0,|L11.24|
000012  e7fc              B        |L11.14|
;;;405    
                          ENDP

                  |L11.20|
                          DCD      pInformation
                  |L11.24|
                          DCD      linecoding

                          AREA ||i.Virtual_Com_Port_Status_In||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Status_In PROC
;;;221    *******************************************************************************/
;;;222    void Virtual_Com_Port_Status_In(void)
000000  b510              PUSH     {r4,lr}
;;;223    {
;;;224      if (Request == SET_LINE_CODING)
000002  4805              LDR      r0,|L12.24|
000004  7800              LDRB     r0,[r0,#0]  ; Request
000006  2820              CMP      r0,#0x20
000008  d104              BNE      |L12.20|
;;;225      {
;;;226        USART_Config();
00000a  f7fffffe          BL       USART_Config
;;;227        Request = 0;
00000e  2000              MOVS     r0,#0
000010  4901              LDR      r1,|L12.24|
000012  7008              STRB     r0,[r1,#0]
                  |L12.20|
;;;228      }
;;;229    }
000014  bd10              POP      {r4,pc}
;;;230    
                          ENDP

000016  0000              DCW      0x0000
                  |L12.24|
                          DCD      Request

                          AREA ||i.Virtual_Com_Port_Status_Out||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Status_Out PROC
;;;237    *******************************************************************************/
;;;238    void Virtual_Com_Port_Status_Out(void)
000000  4770              BX       lr
;;;239    {}
;;;240    
                          ENDP


                          AREA ||i.Virtual_Com_Port_init||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_init PROC
;;;107    *******************************************************************************/
;;;108    void Virtual_Com_Port_init(void)
000000  b510              PUSH     {r4,lr}
;;;109    {
;;;110    
;;;111      /* Update the serial number string descriptor with the data from the unique
;;;112      ID*/
;;;113      Get_SerialNum();
000002  f7fffffe          BL       Get_SerialNum
;;;114    
;;;115      pInformation->Current_Configuration = 0;
000006  2000              MOVS     r0,#0
000008  490b              LDR      r1,|L14.56|
00000a  6809              LDR      r1,[r1,#0]  ; pInformation
00000c  7288              STRB     r0,[r1,#0xa]
;;;116    
;;;117      /* Connect the device */
;;;118      PowerOn();
00000e  f7fffffe          BL       PowerOn
;;;119      /* USB interrupts initialization */
;;;120      /* clear pending interrupts */
;;;121      _SetISTR(0);
000012  2000              MOVS     r0,#0
000014  4909              LDR      r1,|L14.60|
000016  6008              STR      r0,[r1,#0]
;;;122      wInterrupt_Mask = IMR_MSK;
000018  f44f4006          MOV      r0,#0x8600
00001c  4908              LDR      r1,|L14.64|
00001e  8008              STRH     r0,[r1,#0]
;;;123      /* set interrupts mask */
;;;124      _SetCNTR(wInterrupt_Mask);
000020  4608              MOV      r0,r1
000022  8800              LDRH     r0,[r0,#0]  ; wInterrupt_Mask
000024  4907              LDR      r1,|L14.68|
000026  f8c10c40          STR      r0,[r1,#0xc40]
;;;125    
;;;126      /* configure the USART 1 to the default settings */
;;;127      USART_Config_Default();
00002a  f7fffffe          BL       USART_Config_Default
;;;128    
;;;129      bDeviceState = UNCONNECTED;
00002e  2000              MOVS     r0,#0
000030  4905              LDR      r1,|L14.72|
000032  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;130    }
000034  bd10              POP      {r4,pc}
;;;131    
                          ENDP

000036  0000              DCW      0x0000
                  |L14.56|
                          DCD      pInformation
                  |L14.60|
                          DCD      0x40005c44
                  |L14.64|
                          DCD      wInterrupt_Mask
                  |L14.68|
                          DCD      0x40005000
                  |L14.72|
                          DCD      bDeviceState

                          AREA ||.data||, DATA, ALIGN=2

                  Request
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  linecoding
                          DCD      0x0001c200
000008  00000800          DCB      0x00,0x00,0x08,0x00
                  Device_Table
00000c  04010000          DCB      0x04,0x01,0x00,0x00
                  Device_Property
                          DCD      Virtual_Com_Port_init
                          DCD      Virtual_Com_Port_Reset
                          DCD      Virtual_Com_Port_Status_In
                          DCD      Virtual_Com_Port_Status_Out
                          DCD      Virtual_Com_Port_Data_Setup
                          DCD      Virtual_Com_Port_NoData_Setup
                          DCD      Virtual_Com_Port_Get_Interface_Setting
                          DCD      Virtual_Com_Port_GetDeviceDescriptor
                          DCD      Virtual_Com_Port_GetConfigDescriptor
                          DCD      Virtual_Com_Port_GetStringDescriptor
                          DCD      0x00000000
00003c  40000000          DCB      0x40,0x00,0x00,0x00
                  User_Standard_Requests
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetConfiguration
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetDeviceAddress
                  Device_Descriptor
                          DCD      Virtual_Com_Port_DeviceDescriptor
000068  0012              DCW      0x0012
00006a  0000              DCB      0x00,0x00
                  Config_Descriptor
                          DCD      Virtual_Com_Port_ConfigDescriptor
000070  0043              DCW      0x0043
000072  0000              DCB      0x00,0x00
                  String_Descriptor
                          DCD      Virtual_Com_Port_StringLangID
000078  0004              DCW      0x0004
00007a  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringVendor
000080  0026              DCW      0x0026
000082  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringProduct
000088  0032              DCW      0x0032
00008a  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringSerial
000090  001a              DCW      0x001a
000092  0000              DCB      0x00,0x00
