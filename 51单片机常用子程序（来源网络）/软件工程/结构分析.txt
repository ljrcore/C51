・ 软件的总体组织形式是否清晰明了？包括对于结构设计的总体评论与描述。
・ 模块定义是否清楚？包括它们的功能及其与其它模块的接口。
・ 要求定义中所提出的所有功能，是否有恰当数量的模块覆盖？
・ 结构设计是否考虑了可能的更改？
・ 是否包括了必要的购买？
・ 是否阐明了如何改进重新启用的代码来满足现在的结构设计要求？
・ 是否描述并验证了所有主要的数据结构？
・ 主要数据结构是否隐含在存取子程序中？
・ 规定数据库组织形式和其它内容了吗？
・ 是否说明并验证所有关键算法？
・ 是否说明验证所有主要目标？
・ 说明处理用户输入的策略了吗？
・ 说明并验证处理输入／输出的策略了吗？
・ 是否定义了用户界面的关键方面？
・ 用户界面是否进行了模块化，以使对它所作的改动不会影响程序其它部分
・ 是否描述并验证了内存使用估算和内存管理？
・ 是否对每一模块给出了存储空间和速度限制？
・ 是否说明了字符串处理策略？是否提供了对字符串占用空间的估计？
・ 所提供的错误处理策略是不是一致的？
・ 是否对错误信息进行了成套化管理以提供一个整洁的用户界面？
・ 是否指定了坚固性级别？
・ 有没有哪一部分结构设计被过分定义或缺少定义了？它是否明确说明了；
・ 是否明确提出了系统目标？
・ 整个结构在概念上是否是一致的？
・ 机器和使用实现的语言是否顶层设计依赖？
・ 给出做出每个重要决定的动机了吗？
・ 你作为系统实现者的程序员，对结构设计满意吗？