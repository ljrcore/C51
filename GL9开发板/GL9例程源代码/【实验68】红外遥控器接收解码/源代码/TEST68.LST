C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST68
OBJECT MODULE PLACED IN TEST68.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST68.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //1602液晶相关I/O设置
  13          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  14          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  15          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  16          //---------------------------------------
  17          
  18          //---------------------------------------
  19          //1602液晶寄存器设置
  20          unsigned char DISbuf;     //设置8位的unsigend char型寄存器用来暂存1602要显示的内容
  21          unsigned char j;          //设置8位的unsigend char型寄存器用来暂存转换数据
  22          //---------------------------------------
  23                           
  24          //---------------------------------------
  25          //红外接收解码寄存器设置
  26          unsigned char address;
  27          unsigned char shuju;
  28          unsigned char tmr_times;
  29          unsigned char int_times;
  30          unsigned char code_data;
  31          unsigned char code_data1;
  32          unsigned int beepcon;
  33          bit flagf;
  34          bit head_ok;
  35          bit lanth;
  36          //---------------------------------------
  37          
  38          //---------------------------------------
  39          //名称：1602液晶用延时函数
  40          //适用：给力者GL9单片机开发学习系统
  41          //公司：宁波芯动电子有限公司
  42          //网址：www.MovingChip.com
  43          //日期：20120916
  44          //---------------------------------------
  45          void Delay1602(unsigned int t)
  46          { 
  47   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
  48   1           for(k=0;k<t;k++);    //延时 
  49   1      } 
  50          
  51          //---------------------------------------
  52          //名称：1602液晶忙检测函数
  53          //适用：给力者GL9单片机开发学习系统
  54          //公司：宁波芯动电子有限公司
  55          //网址：www.MovingChip.com
C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 2   

  56          //日期：20120916
  57          //---------------------------------------
  58          void LCD1602_busy(void)
  59          { 
  60   1           P0_7=1;              //将P0.7置1，为读状态做准备 
  61   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  62   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  63   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  64   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
  65   1           E=0;                 //读完以后，恢复E的电平
  66   1      } 
  67          
  68          //---------------------------------------
  69          //名称：1600写命令函数
  70          //适用：给力者GL9单片机开发学习系统
  71          //公司：宁波芯动电子有限公司
  72          //网址：www.MovingChip.com
  73          //日期：20120916
  74          //---------------------------------------
  75          void LCD1602_Write_com(unsigned char combuf)
  76          { 
  77   1           RS=0;                //选择指令寄存器
  78   1           RW=0;                //选择写状态
  79   1           P0=combuf;           //将命令字通过P0口送至DB
  80   1           E=1;                 //E高电平将命令字写入1602液晶
  81   1           E=0;                 //写完以后，恢复E的电平
  82   1      } 
  83          
  84          //---------------------------------------
  85          //名称：1602写命令函数(带忙检测)
  86          //适用：给力者GL9单片机开发学习系统
  87          //公司：宁波芯动电子有限公司
  88          //网址：www.MovingChip.com
  89          //日期：20120916
  90          //---------------------------------------
  91          void LCD1602_Write_com_busy(unsigned char combuf)
  92          { 
  93   1           LCD1602_busy();            //调用忙检测函数
  94   1           LCD1602_Write_com(combuf); //调用忙检测函数
  95   1      } 
  96          
  97          //---------------------------------------
  98          //名称：1602写数据函数(带忙检测)
  99          //适用：给力者GL9单片机开发学习系统
 100          //公司：宁波芯动电子有限公司
 101          //网址：www.MovingChip.com
 102          //日期：20120916
 103          //---------------------------------------
 104          void LCD1602_Write_data_busy(unsigned char databuf)
 105          { 
 106   1           LCD1602_busy();      //调用忙检测函数
 107   1           RS=1;                //选择数据寄存器
 108   1           RW=0;                //选择写状态
 109   1           P0=databuf;          //将命令字通过P0口送至DB
 110   1           E=1;                 //E高电平将命令字写入1602液晶
 111   1           E=0;                 //写完以后，恢复E的电平
 112   1      } 
 113          
 114          //---------------------------------------
 115          //名称：1602液晶显示地址写函数
 116          //适用：给力者GL9单片机开发学习系统
 117          //公司：宁波芯动电子有限公司
C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 3   

 118          //网址：www.MovingChip.com
 119          //日期：20120916
 120          //---------------------------------------
 121          void LCD1602_Write_address(unsigned char x,unsigned char y)
 122          { 
 123   1           x&=0x0f;             //列地址限制在0-15间
 124   1           y&=0x01;             //行地址限制在0-1间
 125   1           if(y==0)             //如果是第一行
 126   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 127   1           else                 //如果是第二行
 128   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 129   1      } 
 130          
 131          //---------------------------------------
 132          //名称：1602液晶初始化函数
 133          //适用：给力者GL9单片机开发学习系统
 134          //公司：宁波芯动电子有限公司
 135          //网址：www.MovingChip.com
 136          //日期：20120916
 137          //---------------------------------------
 138          void LCD1602_init(void)
 139          { 
 140   1           Delay1602(1500);               //调用延时函数
 141   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 142   1           Delay1602(500);                //调用延时函数
 143   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 144   1           Delay1602(500);                //调用延时函数
 145   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 146   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 147   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 148   1           LCD1602_Write_com_busy(0x01);  //清屏
 149   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 150   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 151   1      } 
 152          
 153          //---------------------------------------
 154          //名称：1602液晶指定地址显示函数
 155          //适用：给力者GL9单片机开发学习系统
 156          //公司：宁波芯动电子有限公司
 157          //网址：www.MovingChip.com
 158          //日期：20120916
 159          //---------------------------------------
 160          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 161          { 
 162   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 163   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 164   1      } 
 165          
 166          //---------------------------------------
 167          //名称: 错误处理函数
 168          //适用：给力者GL9单片机开发学习系统
 169          //公司：宁波芯动电子有限公司
 170          //网址：www.MovingChip.com
 171          //日期：20120916
 172          //---------------------------------------
 173          void wrong()
 174          {
 175   1              int_times=0;
 176   1              tmr_times=0;
 177   1              head_ok=0;
 178   1              code_data=0;
 179   1              lanth=0;
C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 4   

 180   1              flagf=0;
 181   1      }
 182          
 183          //---------------------------------------
 184          //名称: 一零判断函数
 185          //适用：给力者GL9单片机开发学习系统
 186          //公司：宁波芯动电子有限公司
 187          //网址：www.MovingChip.com
 188          //日期：20120916
 189          //---------------------------------------
 190          void one_zero()
 191          {
 192   1              lanth=0;
 193   1              if((tmr_times>2)&(tmr_times<7))
 194   1              {
 195   2              lanth=0;
 196   2              }
 197   1              else if((tmr_times>7)&(tmr_times<13))
 198   1              {
 199   2              lanth=1;
 200   2              }
 201   1      }
 202          
 203          //---------------------------------------
 204          //名称：定时器0中断服务程序
 205          //适用：给力者GL9单片机开发学习系统
 206          //公司：宁波芯动电子有限公司
 207          //网址：www.MovingChip.com
 208          //日期：20120916
 209          //---------------------------------------
 210          void Timer0(void) interrupt 1 
 211          {                          //定时250微秒
 212   1          TL0=0x33;              //重新给TL0赋初值
 213   1          TH0=0xFE;              //重新给TH0赋初值
 214   1      
 215   1          //***此处用户自行添加定时器T0中断处理程序***
 216   1              tmr_times++; 
 217   1          //******************************************
 218   1      }
 219          
 220          //---------------------------------------
 221          //名称：外部INT1中断服务程序
 222          //适用：给力者GL9单片机开发学习系统
 223          //公司：宁波芯动电子有限公司
 224          //网址：www.MovingChip.com
 225          //日期：20120916
 226          //---------------------------------------
 227          void INIT1(void) interrupt 2 
 228          {
 229   1      
 230   1          //***此处用户自行添加外部INT1中断处理程序***
 231   1              EA=0;
 232   1              TH0=0xfe;
 233   1              TL0=0x33;               
 234   1              int_times++;
 235   1              if(head_ok==0)
 236   1              {
 237   2              if(tmr_times>0x31&tmr_times<0x37)               
 238   2              {
 239   3                      head_ok=1;
 240   3                      int_times=0;
 241   3                      tmr_times=0;
C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 5   

 242   3                      lanth=0;                                        
 243   3              }
 244   2              else
 245   2              {
 246   3                      wrong();
 247   3              }
 248   2              }
 249   1              else
 250   1              {    
 251   2              one_zero();
 252   2              code_data=code_data>>1;
 253   2              if(lanth==1)
 254   2              {
 255   3                      code_data|=0x80;
 256   3              }
 257   2              else
 258   2              {
 259   3                      code_data&=0x7f;
 260   3              }
 261   2              tmr_times=0;
 262   2              lanth=0;                
 263   2              if(int_times==8)
 264   2              {
 265   3                      address=code_data;       
 266   3                      }
 267   2              else if(int_times==16)
 268   2              {
 269   3                      if(code_data+address!=0xff) wrong();
 270   3                      }
 271   2              else if(int_times==24)
 272   2              {
 273   3                      code_data1=code_data;
 274   3              }
 275   2              else if(int_times==32)
 276   2              {
 277   3                      int_times=0;
 278   3                      head_ok=0;      
 279   3                      if(code_data1==~code_data)
 280   3                      {
 281   4                              flagf=1;
 282   4                                      shuju=code_data1;       
 283   4                              }
 284   3                      else
 285   3                      {
 286   4                              flagf=0;
 287   4                      }
 288   3              }
 289   2              }   
 290   1              EA=1;           
 291   1          //******************************************
 292   1      }
 293          //---------------------------------------
 294          //名称: 主函数
 295          //适用：给力者GL9单片机开发学习系统
 296          //公司：宁波芯动电子有限公司
 297          //网址：www.MovingChip.com
 298          //日期：20120916
 299          //---------------------------------------       
 300          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 301          {   
 302   1      
 303   1          //***定时器Timer0初始化***
C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 6   

 304   1          TMOD&=0xF0;            //将TMOD的低4位定时器0控制部分清零
 305   1          TMOD|=0x01;            //设置定时器0为方式1
 306   1          TL0=0x33;              //设置定时器0初值低8位
 307   1          TH0=0xFE;              //设置定时器0初值高8位
 308   1          TR0=1;                 //启动定时器0
 309   1          ET0=1;                 //Timer0中断允许
 310   1          //**********************
 311   1      
 312   1          //***外部中断INT1初始化***
 313   1          IT1=1;                 //下降沿触发方式
 314   1          EX1=1;                 //外部INT1中断允许
 315   1          //**********************
 316   1       //***开全局中断设置****
 317   1          //定时器Timer0设置了中断允许,此处要开全局中断
 318   1          //外部中断INT1设置了中断允许,此处要开全局中断
 319   1          EA=1;                  //开全局中断
 320   1          //*********************     
 321   1      
 322   1              LCD1602_init();        //调用1602液晶初始化函数
 323   1      
 324   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
 325   1               {
 326   2                      if(flagf)                //接收到有效数据标志位，注意要人工清除标志位
 327   2                      {
 328   3                              flagf=0;                                
 329   3                              //**给1602显示寄存器赋值(0x00-0xFF)**
 330   3              DISbuf=shuju;           //
 331   3          //***********************************
 332   3      
 333   3          //***1602液晶显示0x00-0xFF***
 334   3              LCD1602_Disp(0,0,'0');      //在第1行的第1列显示0
 335   3              LCD1602_Disp(1,0,'x');      //在第1行的第2列显示x
 336   3              j=DISbuf>>4;                //把要显示内容的高4位移到低4位上
 337   3              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 338   3              {
 339   4                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 340   4              }
 341   3              else
 342   3              {
 343   4                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 344   4              }
 345   3              LCD1602_Disp(2,0,j);        //在第1行的第3列显示高4位的十六进制数字
 346   3              j=DISbuf&0x0F;              //把要显示内容的高4位屏蔽掉，保留低4位
 347   3              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 348   3              {
 349   4                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 350   4              }
 351   3              else
 352   3              {
 353   4                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 354   4              }
 355   3              LCD1602_Disp(3,0,j);        //在第1行的第4列显示低4位的十六进制数字
 356   3          //***********************
 357   3                }
 358   2              }
 359   1      }
 360          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    528    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V7.00  TEST68                                                                 09/16/2012 13:56:06 PAGE 7   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
