C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST54
OBJECT MODULE PLACED IN TEST54.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST54.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          #include <Intrins.h>       //因本例需要使用空操作，必须调用这个头文件
  11          
  12          //---------------------------------------
  13          //1602液晶相关I/O设置
  14          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  15          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  16          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  17          //---------------------------------------
  18          
  19          //---------------------------------------
  20          //软件模拟IIC相关I/O设置
  21          sbit SCL=P1^7;             //PCF8591T的 SCL 引脚接于单片机的P1^7引脚上
  22          sbit SDA=P1^6;             //PCF8591T的 SDA 引脚接于单片机的P1^6引脚上
  23          //---------------------------------------
  24          
  25          //---------------------------------------
  26          //A/D转换用寄存器设置
  27          unsigned char ADbuf;       //设置8位的寄存器用来暂存A/D转换结果
  28          //---------------------------------------
  29          
  30          //---------------------------------------
  31          //1602液晶寄存器设置
  32          unsigned char DISbuf;     //设置8位的unsigend char型寄存器用来暂存1602要显示的内容
  33          unsigned char j;          //设置8位的unsigend char型寄存器用来暂存转换数据
  34          //---------------------------------------
  35          
  36          //---------------------------------------
  37          //名称：生IIC启动信号函数
  38          //适用：给力者GL9单片机开发学习系统
  39          //公司：宁波芯动电子有限公司
  40          //网址：www.MovingChip.com
  41          //日期：20120914
  42          //---------------------------------------
  43          void IICstart(void)
  44          { 
  45   1           SDA=1;                //先将SDA=1，以准备在SCL=1时，将SDA=0
  46   1           SCL=1;                //时钟总线拉高 
  47   1           _nop_();                   //略做延时
  48   1           _nop_();                   //略做延时
  49   1           SDA=0;                //SCL=1时，将SDA拉低即产生启动信号 
  50   1           _nop_();                   //略做延时
  51   1           _nop_();                   //略做延时
  52   1           SCL=0;                //将SCL=0，完成启动信号操作      
  53   1      } 
  54          
  55          //---------------------------------------
C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 2   

  56          //名称：IIC停止信号函数
  57          //适用：给力者GL9单片机开发学习系统
  58          //公司：宁波芯动电子有限公司
  59          //网址：www.MovingChip.com
  60          //日期：20120914
  61          //---------------------------------------
  62          void IICstop(void)
  63          { 
  64   1           SDA=0;                //先将SDA=0，以准备在SCL=1时，将SDA=1
  65   1           SCL=1;                //时钟总线拉高 
  66   1           _nop_();                   //略做延时
  67   1           _nop_();                   //略做延时
  68   1           SDA=1;                //SCL=1时，将SDA拉高即产生停止信号 
  69   1           _nop_();                   //略做延时
  70   1           _nop_();                   //略做延时
  71   1           SCL=0;                //将SCL=0，完成启动信号操作      
  72   1      } 
  73          
  74          //---------------------------------------
  75          //名称：向IIC总线写入1个字节函数
  76          //适用：给力者GL9单片机开发学习系统
  77          //公司：宁波芯动电子有限公司
  78          //网址：www.MovingChip.com
  79          //日期：20120914
  80          //---------------------------------------
  81          void Write1Byte(unsigned char Buf1)
  82          { 
  83   1           unsigned char k;      //1个字节要分8次写入，需要定义一个寄存器用来计数
  84   1           for(k=0;k<8;k++)      //做一个8次的循环，每次写入1位，需要写8次
  85   1           {
  86   2               if(Buf1&0x80)     //从最高位开始写 
  87   2               {
  88   3                   SDA=1;        //如果欲写入数据为1，就将数据线置1
  89   3               }
  90   2               else
  91   2               {
  92   3                   SDA=0;        //如果欲写入数据为0，就将数据线写0 
  93   3               }
  94   2               _nop_();          //略做延时
  95   2               _nop_();          //略做延时
  96   2               SCL=1;            //时钟线做一个上升沿，将一位数据写入
  97   2               Buf1=Buf1<<1;     //数据左移一位，将下次要写入的位数据移到最高位
  98   2               _nop_();          //略做延时
  99   2               SCL=0;            //将SCL=0，以准备通过上升沿将数据写入
 100   2               _nop_();          //略做延时
 101   2           }
 102   1           SDA=1;                //将SDA=1，准备读应答信号
 103   1           _nop_();              //略做延时
 104   1           SCL=1;                //将SCL=1，做个上升沿准备读应答信号
 105   1           _nop_();              //略做延时
 106   1           _nop_();              //略做延时
 107   1           SCL=0;                //将SCL=0，结束应答信号读操作
 108   1      } 
 109          
 110          //---------------------------------------
 111          //名称：从IIC总线读入1个字节函数
 112          //适用：给力者GL9单片机开发学习系统
 113          //公司：宁波芯动电子有限公司
 114          //网址：www.MovingChip.com
 115          //日期：20120914
 116          //---------------------------------------
 117          unsigned char Read1Byte(void)
C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 3   

 118          { 
 119   1           unsigned char k;      //1个字节要分8次读出，需要定义一个寄存器用来计数
 120   1           unsigned char t=0;    //定义一个寄存器用保存读出数据
 121   1           for(k=0;k<8;k++)      //做一个8次的循环，每次读入1位，需要读8次
 122   1           {
 123   2               t=t<<1;           //数据左移一位，空出最低位以准备保存读入的一位数据
 124   2               SDA=1;            //将SDA写1准备读
 125   2               SCL=1;            //将SCL=1，做个上升沿准备读一位数据
 126   2               _nop_();          //略做延时
 127   2               _nop_();          //略做延时
 128   2               if(SDA==1)        //读一位数据，并判断 
 129   2               {
 130   3                   t=t|0x01;     //如果读入数据为1，就将接收缓冲区最低一位置1
 131   3               }
 132   2               else
 133   2               {
 134   3                   t=t&0xfe;     //如果读入数据为0，就将接收缓冲区最低一位写0
 135   3               }
 136   2               SCL=0;            //SCL恢复为0，结束一位数据读操作
 137   2               _nop_();          //略做延时
 138   2               _nop_();          //略做延时
 139   2           }
 140   1           return t;             //将读入的一个字节返回
 141   1      } 
 142          
 143          //---------------------------------------
 144          //名称：软件模拟IIC向PCF8591指定地址写一个字节函数
 145          //适用：给力者GL9单片机开发学习系统
 146          //公司：宁波芯动电子有限公司
 147          //网址：www.MovingChip.com
 148          //日期：20120914
 149          //---------------------------------------
 150          void WritePCF8591(unsigned char Databuf)
 151          {                          //直接调用本函数即可启动PCF8591的D/A转换
 152   1          IICstart();            //IIC启动信号
 153   1      
 154   1          Write1Byte(0x90);      //发送PCF8591的器件地址和写信号
 155   1      
 156   1          Write1Byte(0x40);      //发送器件子地址
 157   1      
 158   1          Write1Byte(Databuf);   //发送数据
 159   1      
 160   1          IICstop();             //产生IIC停止信号
 161   1      }
 162          
 163          //---------------------------------------
 164          //名称：软件模拟IIC从PCF8563指定地址读一个字节函数
 165          //适用：给力者GL9单片机开发学习系统
 166          //公司：宁波芯动电子有限公司
 167          //网址：www.MovingChip.com
 168          //日期：20120914
 169          //---------------------------------------
 170          unsigned ReadPCF8591(unsigned char Ch)
 171          {                          //直接调用本函数即可从PCF8591的Ch通道读出数据返回
 172   1          unsigned char buf;     //定义一个寄存器用来暂存读出的数据
 173   1          IICstart();            //IIC启动信号
 174   1      
 175   1          Write1Byte(0x90);      //发送PCF8591的器件地址和写信号
 176   1      
 177   1          Write1Byte(0x40|Ch);   //发送器件通道参数Ch=0-3
 178   1      
 179   1          IICstart();            //IIC启动信号
C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 4   

 180   1      
 181   1          Write1Byte(0x91);      //发送PCF8591的器件地址和读信号
 182   1      
 183   1          buf=Read1Byte();//读一个字节数据
 184   1      
 185   1          IICstop();             //产生IIC停止信号
 186   1      
 187   1          return(buf);           //将读出数据返回
 188   1      }
 189          
 190          //---------------------------------------
 191          //名称：1602液晶用延时函数
 192          //适用：给力者GL9单片机开发学习系统
 193          //公司：宁波芯动电子有限公司
 194          //网址：www.MovingChip.com
 195          //日期：20120914
 196          //---------------------------------------
 197          void Delay1602(unsigned int t)
 198          { 
 199   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
 200   1           for(k=0;k<t;k++);    //延时 
 201   1      } 
 202          
 203          //---------------------------------------
 204          //名称：1602液晶忙检测函数
 205          //适用：给力者GL9单片机开发学习系统
 206          //公司：宁波芯动电子有限公司
 207          //网址：www.MovingChip.com
 208          //日期：20120914
 209          //---------------------------------------
 210          void LCD1602_busy(void)
 211          { 
 212   1           P0_7=1;              //将P0.7置1，为读状态做准备 
 213   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 214   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 215   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 216   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
 217   1           E=0;                 //读完以后，恢复E的电平
 218   1      } 
 219          
 220          //---------------------------------------
 221          //名称：1600写命令函数
 222          //适用：给力者GL9单片机开发学习系统
 223          //公司：宁波芯动电子有限公司
 224          //网址：www.MovingChip.com
 225          //日期：20120914
 226          //---------------------------------------
 227          void LCD1602_Write_com(unsigned char combuf)
 228          { 
 229   1           RS=0;                //选择指令寄存器
 230   1           RW=0;                //选择写状态
 231   1           P0=combuf;           //将命令字通过P0口送至DB
 232   1           E=1;                 //E高电平将命令字写入1602液晶
 233   1           E=0;                 //写完以后，恢复E的电平
 234   1      } 
 235          
 236          //---------------------------------------
 237          //名称：1602写命令函数(带忙检测)
 238          //适用：给力者GL9单片机开发学习系统
 239          //公司：宁波芯动电子有限公司
 240          //网址：www.MovingChip.com
 241          //日期：20120914
C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 5   

 242          //---------------------------------------
 243          void LCD1602_Write_com_busy(unsigned char combuf)
 244          { 
 245   1           LCD1602_busy();            //调用忙检测函数
 246   1           LCD1602_Write_com(combuf); //调用忙检测函数
 247   1      } 
 248          
 249          //---------------------------------------
 250          //名称：1602写数据函数(带忙检测)
 251          //适用：给力者GL9单片机开发学习系统
 252          //公司：宁波芯动电子有限公司
 253          //网址：www.MovingChip.com
 254          //日期：20120914
 255          //---------------------------------------
 256          void LCD1602_Write_data_busy(unsigned char databuf)
 257          { 
 258   1           LCD1602_busy();      //调用忙检测函数
 259   1           RS=1;                //选择数据寄存器
 260   1           RW=0;                //选择写状态
 261   1           P0=databuf;          //将命令字通过P0口送至DB
 262   1           E=1;                 //E高电平将命令字写入1602液晶
 263   1           E=0;                 //写完以后，恢复E的电平
 264   1      } 
 265          
 266          //---------------------------------------
 267          //名称：1602液晶显示地址写函数
 268          //适用：给力者GL9单片机开发学习系统
 269          //公司：宁波芯动电子有限公司
 270          //网址：www.MovingChip.com
 271          //日期：20120914
 272          //---------------------------------------
 273          void LCD1602_Write_address(unsigned char x,unsigned char y)
 274          { 
 275   1           x&=0x0f;             //列地址限制在0-15间
 276   1           y&=0x01;             //行地址限制在0-1间
 277   1           if(y==0)             //如果是第一行
 278   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 279   1           else                 //如果是第二行
 280   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 281   1      } 
 282          
 283          //---------------------------------------
 284          //名称：1602液晶初始化函数
 285          //适用：给力者GL9单片机开发学习系统
 286          //公司：宁波芯动电子有限公司
 287          //网址：www.MovingChip.com
 288          //日期：20120914
 289          //---------------------------------------
 290          void LCD1602_init(void)
 291          { 
 292   1           Delay1602(1500);               //调用延时函数
 293   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 294   1           Delay1602(500);                //调用延时函数
 295   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 296   1           Delay1602(500);                //调用延时函数
 297   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 298   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 299   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 300   1           LCD1602_Write_com_busy(0x01);  //清屏
 301   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 302   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 303   1      } 
C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 6   

 304          
 305          //---------------------------------------
 306          //名称：1602液晶指定地址显示函数
 307          //适用：给力者GL9单片机开发学习系统
 308          //公司：宁波芯动电子有限公司
 309          //网址：www.MovingChip.com
 310          //日期：20120914
 311          //---------------------------------------
 312          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 313          { 
 314   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 315   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 316   1      } 
 317          
 318          //---------------------------------------
 319          //名称: 主函数
 320          //适用：给力者GL9单片机开发学习系统
 321          //公司：宁波芯动电子有限公司
 322          //网址：www.MovingChip.com
 323          //日期：20120914
 324          //---------------------------------------
 325          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 326          {
 327   1      
 328   1          LCD1602_init();        //调用1602液晶初始化函数
 329   1      
 330   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
 331   1          {
 332   2              ADbuf=ReadPCF8591(0);     //将AIN0通道A/D转换结果暂存在ADbuf
 333   2      
 334   2          //**给1602显示寄存器赋值(0x00-0xFF)**
 335   2              DISbuf=ADbuf;           //
 336   2          //***********************************
 337   2      
 338   2          //***1602液晶显示0x00-0xFF***
 339   2              LCD1602_Disp(0,0,'0');      //在第1行的第1列显示0
 340   2              LCD1602_Disp(1,0,'x');      //在第1行的第2列显示x
 341   2              j=DISbuf>>4;                //把要显示内容的高4位移到低4位上
 342   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 343   2              {
 344   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 345   3              }
 346   2              else
 347   2              {
 348   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 349   3              }
 350   2              LCD1602_Disp(2,0,j);        //在第1行的第3列显示高4位的十六进制数字
 351   2              j=DISbuf&0x0F;              //把要显示内容的高4位屏蔽掉，保留低4位
 352   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 353   2              {
 354   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 355   3              }
 356   2              else
 357   2              {
 358   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 359   3              }
 360   2              LCD1602_Disp(3,0,j);        //在第1行的第4列显示低4位的十六进制数字
 361   2          //***********************
 362   2      
 363   2          }
 364   1      }
 365          
C51 COMPILER V7.00  TEST54                                                                 09/18/2012 21:11:49 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    392    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
