C51 COMPILER V7.00  TEST64                                                                 09/14/2012 22:51:44 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST64
OBJECT MODULE PLACED IN TEST64.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST64.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //1602液晶相关I/O设置
  13          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  14          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  15          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  16          //---------------------------------------
  17          
  18          //---------------------------------------
  19          //串口接收寄存器设置
  20          unsigned char USARTbuf;    //设置8位的unsigend char型寄存器用来暂存串口接收内容
  21          //---------------------------------------
  22          
  23          //---------------------------------------
  24          //1602液晶寄存器设置
  25          unsigned char DISbuf;     //设置8位的unsigend char型寄存器用来暂存1602要显示的内容
  26          unsigned char j;          //设置8位的unsigend char型寄存器用来暂存转换数据
  27          //---------------------------------------
  28          
  29          //---------------------------------------
  30          //名称：1602液晶用延时函数
  31          //适用：给力者GL9单片机开发学习系统
  32          //公司：宁波芯动电子有限公司
  33          //网址：www.MovingChip.com
  34          //日期：20120914
  35          //---------------------------------------
  36          void Delay1602(unsigned int t)
  37          { 
  38   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
  39   1           for(k=0;k<t;k++);    //延时 
  40   1      } 
  41          
  42          //---------------------------------------
  43          //名称：1602液晶忙检测函数
  44          //适用：给力者GL9单片机开发学习系统
  45          //公司：宁波芯动电子有限公司
  46          //网址：www.MovingChip.com
  47          //日期：20120914
  48          //---------------------------------------
  49          void LCD1602_busy(void)
  50          { 
  51   1           P0_7=1;              //将P0.7置1，为读状态做准备 
  52   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  53   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  54   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  55   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
C51 COMPILER V7.00  TEST64                                                                 09/14/2012 22:51:44 PAGE 2   

  56   1           E=0;                 //读完以后，恢复E的电平
  57   1      } 
  58          
  59          //---------------------------------------
  60          //名称：1600写命令函数
  61          //适用：给力者GL9单片机开发学习系统
  62          //公司：宁波芯动电子有限公司
  63          //网址：www.MovingChip.com
  64          //日期：20120914
  65          //---------------------------------------
  66          void LCD1602_Write_com(unsigned char combuf)
  67          { 
  68   1           RS=0;                //选择指令寄存器
  69   1           RW=0;                //选择写状态
  70   1           P0=combuf;           //将命令字通过P0口送至DB
  71   1           E=1;                 //E高电平将命令字写入1602液晶
  72   1           E=0;                 //写完以后，恢复E的电平
  73   1      } 
  74          
  75          //---------------------------------------
  76          //名称：1602写命令函数(带忙检测)
  77          //适用：给力者GL9单片机开发学习系统
  78          //公司：宁波芯动电子有限公司
  79          //网址：www.MovingChip.com
  80          //日期：20120914
  81          //---------------------------------------
  82          void LCD1602_Write_com_busy(unsigned char combuf)
  83          { 
  84   1           LCD1602_busy();            //调用忙检测函数
  85   1           LCD1602_Write_com(combuf); //调用忙检测函数
  86   1      } 
  87          
  88          //---------------------------------------
  89          //名称：1602写数据函数(带忙检测)
  90          //适用：给力者GL9单片机开发学习系统
  91          //公司：宁波芯动电子有限公司
  92          //网址：www.MovingChip.com
  93          //日期：20120914
  94          //---------------------------------------
  95          void LCD1602_Write_data_busy(unsigned char databuf)
  96          { 
  97   1           LCD1602_busy();      //调用忙检测函数
  98   1           RS=1;                //选择数据寄存器
  99   1           RW=0;                //选择写状态
 100   1           P0=databuf;          //将命令字通过P0口送至DB
 101   1           E=1;                 //E高电平将命令字写入1602液晶
 102   1           E=0;                 //写完以后，恢复E的电平
 103   1      } 
 104          
 105          //---------------------------------------
 106          //名称：1602液晶显示地址写函数
 107          //适用：给力者GL9单片机开发学习系统
 108          //公司：宁波芯动电子有限公司
 109          //网址：www.MovingChip.com
 110          //日期：20120914
 111          //---------------------------------------
 112          void LCD1602_Write_address(unsigned char x,unsigned char y)
 113          { 
 114   1           x&=0x0f;             //列地址限制在0-15间
 115   1           y&=0x01;             //行地址限制在0-1间
 116   1           if(y==0)             //如果是第一行
 117   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
C51 COMPILER V7.00  TEST64                                                                 09/14/2012 22:51:44 PAGE 3   

 118   1           else                 //如果是第二行
 119   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 120   1      } 
 121          
 122          //---------------------------------------
 123          //名称：1602液晶初始化函数
 124          //适用：给力者GL9单片机开发学习系统
 125          //公司：宁波芯动电子有限公司
 126          //网址：www.MovingChip.com
 127          //日期：20120914
 128          //---------------------------------------
 129          void LCD1602_init(void)
 130          { 
 131   1           Delay1602(1500);               //调用延时函数
 132   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 133   1           Delay1602(500);                //调用延时函数
 134   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 135   1           Delay1602(500);                //调用延时函数
 136   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 137   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 138   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 139   1           LCD1602_Write_com_busy(0x01);  //清屏
 140   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 141   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 142   1      } 
 143          
 144          //---------------------------------------
 145          //名称：1602液晶指定地址显示函数
 146          //适用：给力者GL9单片机开发学习系统
 147          //公司：宁波芯动电子有限公司
 148          //网址：www.MovingChip.com
 149          //日期：20120914
 150          //---------------------------------------
 151          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 152          { 
 153   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 154   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 155   1      } 
 156          
 157          //---------------------------------------
 158          //名称: 主函数
 159          //适用：给力者GL9单片机开发学习系统
 160          //公司：宁波芯动电子有限公司
 161          //网址：www.MovingChip.com
 162          //日期：20120914
 163          //---------------------------------------
 164          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 165          {
 166   1      
 167   1          LCD1602_init();        //调用1602液晶初始化函数
 168   1      
 169   1          //*****USART串口初始化*****
 170   1          TMOD&=0x0F;            //把TMOD高4位清0
 171   1          TMOD|=0x20;            //将TMOD的M1位置1，设置成自动装入的8位定时器
 172   1          TH1=0xFA;              //设置波特率为9600
 173   1          TL1=0xFA;              //设置波特率为9600
 174   1          TR1=1;                 //启动定时器T1，作为串口波特率发生器
 175   1          SCON=0x50;             //10位异步收发，波特率由定时器控制，允许串口接收
 176   1          ES=0;                  //禁止串口中断
 177   1          //**************************
 178   1      
 179   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
C51 COMPILER V7.00  TEST64                                                                 09/14/2012 22:51:44 PAGE 4   

 180   1          {
 181   2      
 182   2          //****查询式串口接收程序****
 183   2              if(RI==1)               //如果接收标志位为1，说明有数据接收完毕
 184   2              {                       //RCIF在寄存器被读出后自动清零
 185   3                  USARTbuf=SBUF;      //将接收缓冲区内容转至USARTbuf寄存器中
 186   3                  RI=0;               //清除接收标志位
 187   3                  SBUF=USARTbuf+1;    //将接收到的内容+1后发送出去
 188   3                  while(!TI);         //一直等到数据发送完毕
 189   3              }
 190   2          //**************************
 191   2      
 192   2          //**给1602显示寄存器赋值(0x00-0xFF)**
 193   2              DISbuf=USARTbuf;           //
 194   2          //***********************************
 195   2      
 196   2          //***1602液晶显示0x00-0xFF***
 197   2              LCD1602_Disp(0,0,'0');      //在第1行的第1列显示0
 198   2              LCD1602_Disp(1,0,'x');      //在第1行的第2列显示x
 199   2              j=DISbuf>>4;                //把要显示内容的高4位移到低4位上
 200   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 201   2              {
 202   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 203   3              }
 204   2              else
 205   2              {
 206   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 207   3              }
 208   2              LCD1602_Disp(2,0,j);        //在第1行的第3列显示高4位的十六进制数字
 209   2              j=DISbuf&0x0F;              //把要显示内容的高4位屏蔽掉，保留低4位
 210   2              if(j<10)                    //0-F在ASCII码中并不连续，所以要分开处理
 211   2              {
 212   3                  j+='0';                 //0-9的数据以0为基点进行偏移即可
 213   3              }
 214   2              else
 215   2              {
 216   3                  j=j-10+'A';             //A-F的数据以A为基点进行偏移即可
 217   3              }
 218   2              LCD1602_Disp(3,0,j);        //在第1行的第4列显示低4位的十六进制数字
 219   2          //***********************
 220   2      
 221   2          }
 222   1      }
 223          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
