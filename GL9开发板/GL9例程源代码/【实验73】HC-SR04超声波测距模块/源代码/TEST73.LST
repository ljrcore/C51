C51 COMPILER V7.00  TEST73                                                                 07/20/2013 10:22:13 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST73
OBJECT MODULE PLACED IN TEST73.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST73.c

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          #include <intrins.h>
  11          #include <math.h> 
  12          //---------------------------------------
  13          //1602液晶相关I/O设置
  14          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  15          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  16          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  17          //---------------------------------------
  18          //---------------------------------------
  19          //HC-SR04相关I/O设置
  20          sbit TIRG=P3^4;                 //定义IO口，具体可以去查看原理图
  21          sbit ECHO=P3^2;                 //定义IO口，具体可以去查看原理图        
  22          //---------------------------------------        
  23          bit      flag =0;
  24          unsigned char k;
  25          //---------------------------------------
  26          //名称：1602液晶用延时函数
  27          //适用：给力者GL9单片机开发学习系统
  28          //公司：宁波芯动电子有限公司
  29          //网址：www.MovingChip.com
  30          //日期：20120916
  31          //---------------------------------------
  32          void Delay1602(unsigned int t)
  33          { 
  34   1           unsigned int k;      //定义一个16位寄存器用来做延时用 
  35   1           for(k=0;k<t;k++);    //延时 
  36   1      } 
  37          
  38          //---------------------------------------
  39          //名称：1602液晶忙检测函数
  40          //适用：给力者GL9单片机开发学习系统
  41          //公司：宁波芯动电子有限公司
  42          //网址：www.MovingChip.com
  43          //日期：20120916
  44          //---------------------------------------
  45          void LCD1602_busy(void)
  46          { 
  47   1           P0_7=1;              //将P0.7置1，为读状态做准备 
  48   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  49   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  50   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
  51   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
  52   1           E=0;                 //读完以后，恢复E的电平
  53   1      } 
  54          
  55          //---------------------------------------
C51 COMPILER V7.00  TEST73                                                                 07/20/2013 10:22:13 PAGE 2   

  56          //名称：1600写命令函数
  57          //适用：给力者GL9单片机开发学习系统
  58          //公司：宁波芯动电子有限公司
  59          //网址：www.MovingChip.com
  60          //日期：20120916
  61          //---------------------------------------
  62          void LCD1602_Write_com(unsigned char combuf)
  63          { 
  64   1           RS=0;                //选择指令寄存器
  65   1           RW=0;                //选择写状态
  66   1           P0=combuf;           //将命令字通过P0口送至DB
  67   1           E=1;                 //E高电平将命令字写入1602液晶
  68   1           E=0;                 //写完以后，恢复E的电平
  69   1      } 
  70          
  71          //---------------------------------------
  72          //名称：1602写命令函数(带忙检测)
  73          //适用：给力者GL9单片机开发学习系统
  74          //公司：宁波芯动电子有限公司
  75          //网址：www.MovingChip.com
  76          //日期：20120916
  77          //---------------------------------------
  78          void LCD1602_Write_com_busy(unsigned char combuf)
  79          { 
  80   1           LCD1602_busy();            //调用忙检测函数
  81   1           LCD1602_Write_com(combuf); //调用忙检测函数
  82   1      } 
  83          
  84          //---------------------------------------
  85          //名称：1602写数据函数(带忙检测)
  86          //适用：给力者GL9单片机开发学习系统
  87          //公司：宁波芯动电子有限公司
  88          //网址：www.MovingChip.com
  89          //日期：20120916
  90          //---------------------------------------
  91          void LCD1602_Write_data_busy(unsigned char databuf)
  92          { 
  93   1           LCD1602_busy();      //调用忙检测函数
  94   1           RS=1;                //选择数据寄存器
  95   1           RW=0;                //选择写状态
  96   1           P0=databuf;          //将命令字通过P0口送至DB
  97   1           E=1;                 //E高电平将命令字写入1602液晶
  98   1           E=0;                 //写完以后，恢复E的电平
  99   1      } 
 100          
 101          //---------------------------------------
 102          //名称：1602液晶显示地址写函数
 103          //适用：给力者GL9单片机开发学习系统
 104          //公司：宁波芯动电子有限公司
 105          //网址：www.MovingChip.com
 106          //日期：20120916
 107          //---------------------------------------
 108          void LCD1602_Write_address(unsigned char x,unsigned char y)
 109          { 
 110   1           x&=0x0f;             //列地址限制在0-15间
 111   1           y&=0x01;             //行地址限制在0-1间
 112   1           if(y==0)             //如果是第一行
 113   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 114   1           else                 //如果是第二行
 115   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 116   1      } 
 117          
C51 COMPILER V7.00  TEST73                                                                 07/20/2013 10:22:13 PAGE 3   

 118          //---------------------------------------
 119          //名称：1602液晶初始化函数
 120          //适用：给力者GL9单片机开发学习系统
 121          //公司：宁波芯动电子有限公司
 122          //网址：www.MovingChip.com
 123          //日期：20120916
 124          //---------------------------------------
 125          void LCD1602_init(void)
 126          { 
 127   1           Delay1602(1500);               //调用延时函数
 128   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 129   1           Delay1602(500);                //调用延时函数
 130   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 131   1           Delay1602(500);                //调用延时函数
 132   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 133   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 134   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 135   1           LCD1602_Write_com_busy(0x01);  //清屏
 136   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 137   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 138   1      } 
 139          
 140          //---------------------------------------
 141          //名称：1602液晶指定地址显示函数
 142          //适用：给力者GL9单片机开发学习系统
 143          //公司：宁波芯动电子有限公司
 144          //网址：www.MovingChip.com
 145          //日期：20120916
 146          //---------------------------------------
 147          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 148          { 
 149   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 150   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
 151   1      } 
 152          //---------------------------------------
 153          //名称：定时器0中断服务程序
 154          //适用：给力者GL9单片机开发学习系统
 155          //公司：宁波芯动电子有限公司
 156          //网址：www.MovingChip.com
 157          //日期：20120918
 158          //---------------------------------------
 159          void Timer0(void) interrupt 1 
 160          {                          //
 161   1          //***此处用户自行添加定时器T0中断处理程序***
 162   1              //k++;                                             //中断溢出标志
 163   1              flag=0;
 164   1          //******************************************
 165   1      }
 166          
 167          //---------------------------------------
 168          //名称: 主函数
 169          //适用：给力者GL9单片机开发学习系统
 170          //公司：宁波芯动电子有限公司
 171          //网址：www.MovingChip.com
 172          //日期：20120916
 173          //---------------------------------------
 174          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 175          {
 176   1              long S;
 177   1              unsigned int i;
 178   1              unsigned int  Timeout;
 179   1         LCD1602_init();        //调用1602液晶初始化函数
C51 COMPILER V7.00  TEST73                                                                 07/20/2013 10:22:13 PAGE 4   

 180   1      
 181   1              //***定时器Timer0初始化***
 182   1         TMOD&=0xF0;                  //将TMOD的低4位定时器0控制部分清零
 183   1         TMOD|=0x01;                  //设置定时器0为方式1
 184   1              TMOD=0x01;
 185   1         TL0=0;                       //设置定时器0初值低8位
 186   1         TH0=0;                       //设置定时器0初值高8位
 187   1         TR0=0;                       //停止定时器0
 188   1         ET0=1;                       //Timer0中断允许
 189   1         //**********************
 190   1         //***开全局中断设置****
 191   1         //定时器Timer0设置了中断允许,此处要开全局中断
 192   1         EA=1;                        //开全局中断
 193   1         //*********************
 194   1              while(1)
 195   1              {               
 196   2                      TIRG=1;                                 //发一个脉冲触发信号
 197   2                      i=4;                                       //维持约17US，符合不低于10US的要求
 198   2            while(i>0)                                //维持约17US，符合不低于10US的要求
 199   2              i--;                                    //维持约17US，符合不低于10US的要求              
 200   2                      TIRG=0;                                 //撤销触发信号
 201   2                      TR0=0;                                          //关闭定时器
 202   2                      TL0=0;                          //设置定时器0初值低8位为0
 203   2              TH0=0;                          //设置定时器0初值高8位为0
 204   2                      k=0;                    //清除溢出标志
 205   2                      flag=0;
 206   2                      Timeout=0;
 207   2                 while((ECHO==0)&&((Timeout++)<50000));                               //等待回响高电平                
 208   2                 TR0=1;                                       //回响高电平来后启动定时器
 209   2                      Timeout=0;
 210   2                 while((ECHO==1)&&((Timeout++)<50000));                               //等待回响高电平结束后
 211   2                 TR0=0;                                               //关闭定时器
 212   2            S=((TH0*256+TL0)*0.5425)/58;      
 213   2                      if(flag==1||S>400)              //超出测量范围显示“-”
 214   2                      {                                                       
 215   3                              LCD1602_Disp(0, 0, '-');                                //显示百位-
 216   3                              LCD1602_Disp(1, 0, '-');                                //显示十位-
 217   3                              LCD1602_Disp(2, 0, '-');                                //显示个位-
 218   3                              LCD1602_Disp(3, 0, 'C');                                //显示C
 219   3                              LCD1602_Disp(4, 0, 'M');                                //显示M
 220   3                      }
 221   2                      else                                                            
 222   2                      {                       
 223   3                                      LCD1602_Disp(0, 0, S%1000/100+'0');             //显示百位
 224   3                              LCD1602_Disp(1, 0, S%1000%100/10+'0');  //显示十位
 225   3                              LCD1602_Disp(2, 0, S%1000%100%10+'0');  //显示个位
 226   3                              LCD1602_Disp(3, 0, 'C');                                        //显示C
 227   3                              LCD1602_Disp(4, 0, 'M');                                        //显示M
 228   3                      }
 229   2                      i=18000;                                        //维持约77400US，符合不低于60MS的要求
 230   2            while(i>0)                                //维持约77400US，符合不低于60MS的要求
 231   2              i--;                                    //维持约77400US，符合不低于60MS的要求
 232   2      
 233   2              }
 234   1      }
 235          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    589    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V7.00  TEST73                                                                 07/20/2013 10:22:13 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
