; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Out\usb_int.o --depend=.\Out\usb_int.d --device=DARMSTM --apcs=interwork -O0 -I..\inc -I..\..\..\Libraries\CMSIS\Core\CM3 -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I"D:\Program Files\KeilARM350\ARM\INC\ST\STM32F10x" ..\..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_int.c]
                          THUMB

                          AREA ||i.CTR_HP||, CODE, READONLY, ALIGN=2

                  CTR_HP PROC
;;;157    *******************************************************************************/
;;;158    void CTR_HP(void)
000000  b510              PUSH     {r4,lr}
;;;159    {
;;;160      uint32_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;161    
;;;162      while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e04a              B        |L1.156|
                  |L1.6|
;;;163      {
;;;164        _SetISTR((uint16_t)CLR_CTR); /* clear CTR flag */
000006  f64770ff          MOV      r0,#0x7fff
00000a  4929              LDR      r1,|L1.176|
00000c  6008              STR      r0,[r1,#0]
;;;165        /* extract highest priority endpoint number */
;;;166        EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
00000e  4829              LDR      r0,|L1.180|
000010  8800              LDRH     r0,[r0,#0]  ; wIstr
000012  f000000f          AND      r0,r0,#0xf
000016  4928              LDR      r1,|L1.184|
000018  7008              STRB     r0,[r1,#0]
;;;167        /* process related endpoint register */
;;;168        wEPVal = _GetENDPOINT(EPindex);
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]  ; EPindex
00001e  4927              LDR      r1,|L1.188|
000020  eb010080          ADD      r0,r1,r0,LSL #2
000024  f8d00c00          LDR      r0,[r0,#0xc00]
000028  b284              UXTH     r4,r0
;;;169        if ((wEPVal & EP_CTR_RX) != 0)
00002a  f4144f00          TST      r4,#0x8000
00002e  d019              BEQ      |L1.100|
;;;170        {
;;;171          /* clear int flag */
;;;172          _ClearEP_CTR_RX(EPindex);
000030  4821              LDR      r0,|L1.184|
000032  7800              LDRB     r0,[r0,#0]  ; EPindex
000034  eb010080          ADD      r0,r1,r0,LSL #2
000038  f8d00c00          LDR      r0,[r0,#0xc00]
00003c  f3c0000e          UBFX     r0,r0,#0,#15
000040  f648718f          MOV      r1,#0x8f8f
000044  4008              ANDS     r0,r0,r1
000046  491c              LDR      r1,|L1.184|
000048  7809              LDRB     r1,[r1,#0]  ; EPindex
00004a  4a1c              LDR      r2,|L1.188|
00004c  eb020181          ADD      r1,r2,r1,LSL #2
000050  f8c10c00          STR      r0,[r1,#0xc00]
;;;173    
;;;174          /* call OUT service function */
;;;175          (*pEpInt_OUT[EPindex-1])();
000054  4918              LDR      r1,|L1.184|
000056  7809              LDRB     r1,[r1,#0]  ; EPindex
000058  1e49              SUBS     r1,r1,#1
00005a  4a19              LDR      r2,|L1.192|
00005c  f8520021          LDR      r0,[r2,r1,LSL #2]
000060  4780              BLX      r0
000062  e01b              B        |L1.156|
                  |L1.100|
;;;176    
;;;177        } /* if((wEPVal & EP_CTR_RX) */
;;;178        else if ((wEPVal & EP_CTR_TX) != 0)
000064  f0140f80          TST      r4,#0x80
000068  d018              BEQ      |L1.156|
;;;179        {
;;;180          /* clear int flag */
;;;181          _ClearEP_CTR_TX(EPindex);
00006a  4813              LDR      r0,|L1.184|
00006c  7800              LDRB     r0,[r0,#0]  ; EPindex
00006e  4913              LDR      r1,|L1.188|
000070  eb010080          ADD      r0,r1,r0,LSL #2
000074  f8d00c00          LDR      r0,[r0,#0xc00]
000078  b280              UXTH     r0,r0
00007a  f648710f          MOV      r1,#0x8f0f
00007e  4008              ANDS     r0,r0,r1
000080  490d              LDR      r1,|L1.184|
000082  7809              LDRB     r1,[r1,#0]  ; EPindex
000084  4a0d              LDR      r2,|L1.188|
000086  eb020181          ADD      r1,r2,r1,LSL #2
00008a  f8c10c00          STR      r0,[r1,#0xc00]
;;;182    
;;;183          /* call IN service function */
;;;184          (*pEpInt_IN[EPindex-1])();
00008e  490a              LDR      r1,|L1.184|
000090  7809              LDRB     r1,[r1,#0]  ; EPindex
000092  1e49              SUBS     r1,r1,#1
000094  4a0b              LDR      r2,|L1.196|
000096  f8520021          LDR      r0,[r2,r1,LSL #2]
00009a  4780              BLX      r0
                  |L1.156|
00009c  4804              LDR      r0,|L1.176|
00009e  6800              LDR      r0,[r0,#0]            ;162
0000a0  b280              UXTH     r0,r0                 ;162
0000a2  4904              LDR      r1,|L1.180|
0000a4  8008              STRH     r0,[r1,#0]            ;162
0000a6  f4104f00          TST      r0,#0x8000            ;162
0000aa  d1ac              BNE      |L1.6|
;;;185    
;;;186    
;;;187        } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;188    
;;;189      }/* while(...) */
;;;190    }
0000ac  bd10              POP      {r4,pc}
;;;191    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40005c44
                  |L1.180|
                          DCD      wIstr
                  |L1.184|
                          DCD      EPindex
                  |L1.188|
                          DCD      0x40005000
                  |L1.192|
                          DCD      pEpInt_OUT
                  |L1.196|
                          DCD      pEpInt_IN

                          AREA ||i.CTR_LP||, CODE, READONLY, ALIGN=2

                  CTR_LP PROC
;;;40     *******************************************************************************/
;;;41     void CTR_LP(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43       uint32_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;44       /* stay in loop while pending ints */
;;;45       while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e18a              B        |L2.796|
                  |L2.6|
;;;46       {
;;;47         _SetISTR((uint16_t)CLR_CTR); /* clear CTR flag */
000006  f64770ff          MOV      r0,#0x7fff
00000a  49c9              LDR      r1,|L2.816|
00000c  6008              STR      r0,[r1,#0]
;;;48         /* extract highest priority endpoint number */
;;;49         EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
00000e  48c9              LDR      r0,|L2.820|
000010  8800              LDRH     r0,[r0,#0]  ; wIstr
000012  f000000f          AND      r0,r0,#0xf
000016  49c8              LDR      r1,|L2.824|
000018  7008              STRB     r0,[r1,#0]
;;;50         if (EPindex == 0)
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]  ; EPindex
00001e  2800              CMP      r0,#0
000020  d17e              BNE      |L2.288|
;;;51         {
;;;52           /* Decode and service control endpoint interrupt */
;;;53           /* calling related service routine */
;;;54           /* (Setup0_Process, In0_Process, Out0_Process) */
;;;55     
;;;56           /* save RX & TX status */
;;;57           /* and set both to NAK */
;;;58           SaveRState = _GetEPRxStatus(ENDP0);
000022  48c3              LDR      r0,|L2.816|
000024  3844              SUBS     r0,r0,#0x44
000026  6800              LDR      r0,[r0,#0]
000028  f4005040          AND      r0,r0,#0x3000
00002c  49c3              LDR      r1,|L2.828|
00002e  8008              STRH     r0,[r1,#0]
;;;59           SaveTState = _GetEPTxStatus(ENDP0);
000030  48c3              LDR      r0,|L2.832|
000032  f8d00c00          LDR      r0,[r0,#0xc00]
000036  f0000030          AND      r0,r0,#0x30
00003a  49c2              LDR      r1,|L2.836|
00003c  8008              STRH     r0,[r1,#0]
;;;60           _SetEPRxStatus(ENDP0, EP_RX_NAK);
00003e  49bc              LDR      r1,|L2.816|
000040  3944              SUBS     r1,r1,#0x44
000042  6809              LDR      r1,[r1,#0]
000044  b289              UXTH     r1,r1
000046  f64b728f          MOV      r2,#0xbf8f
00004a  ea010002          AND      r0,r1,r2
00004e  bf00              NOP      
000050  f4805000          EOR      r0,r0,#0x2000
000054  49b6              LDR      r1,|L2.816|
000056  3944              SUBS     r1,r1,#0x44
000058  6008              STR      r0,[r1,#0]
;;;61           _SetEPTxStatus(ENDP0, EP_TX_NAK);
00005a  49b9              LDR      r1,|L2.832|
00005c  f8d11c00          LDR      r1,[r1,#0xc00]
000060  b289              UXTH     r1,r1
000062  f64872bf          MOV      r2,#0x8fbf
000066  ea010002          AND      r0,r1,r2
00006a  bf00              NOP      
00006c  f0800020          EOR      r0,r0,#0x20
000070  49af              LDR      r1,|L2.816|
000072  3944              SUBS     r1,r1,#0x44
000074  6008              STR      r0,[r1,#0]
;;;62     
;;;63     
;;;64           /* DIR bit = origin of the interrupt */
;;;65     
;;;66           if ((wIstr & ISTR_DIR) == 0)
000076  48af              LDR      r0,|L2.820|
000078  8800              LDRH     r0,[r0,#0]  ; wIstr
00007a  f0100f10          TST      r0,#0x10
00007e  d13d              BNE      |L2.252|
;;;67           {
;;;68             /* DIR = 0 */
;;;69     
;;;70             /* DIR = 0      => IN  int */
;;;71             /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
;;;72     
;;;73     
;;;74             _ClearEP_CTR_TX(ENDP0);
000080  4608              MOV      r0,r1
000082  6800              LDR      r0,[r0,#0]
000084  b280              UXTH     r0,r0
000086  f648710f          MOV      r1,#0x8f0f
00008a  4008              ANDS     r0,r0,r1
00008c  49ac              LDR      r1,|L2.832|
00008e  f8c10c00          STR      r0,[r1,#0xc00]
;;;75             In0_Process();
000092  f7fffffe          BL       In0_Process
;;;76     
;;;77                /* before terminate set Tx & Rx status */
;;;78               _SetEPRxStatus(ENDP0, SaveRState);
000096  49a6              LDR      r1,|L2.816|
000098  3944              SUBS     r1,r1,#0x44
00009a  6809              LDR      r1,[r1,#0]
00009c  b289              UXTH     r1,r1
00009e  f64b728f          MOV      r2,#0xbf8f
0000a2  ea010002          AND      r0,r1,r2
0000a6  49a5              LDR      r1,|L2.828|
0000a8  8809              LDRH     r1,[r1,#0]  ; SaveRState
0000aa  f4115f80          TST      r1,#0x1000
0000ae  d001              BEQ      |L2.180|
0000b0  f4805080          EOR      r0,r0,#0x1000
                  |L2.180|
0000b4  49a1              LDR      r1,|L2.828|
0000b6  8809              LDRH     r1,[r1,#0]  ; SaveRState
0000b8  f4115f00          TST      r1,#0x2000
0000bc  d001              BEQ      |L2.194|
0000be  f4805000          EOR      r0,r0,#0x2000
                  |L2.194|
0000c2  499b              LDR      r1,|L2.816|
0000c4  3944              SUBS     r1,r1,#0x44
0000c6  6008              STR      r0,[r1,#0]
;;;79               _SetEPTxStatus(ENDP0, SaveTState);
0000c8  499d              LDR      r1,|L2.832|
0000ca  f8d11c00          LDR      r1,[r1,#0xc00]
0000ce  b289              UXTH     r1,r1
0000d0  f64872bf          MOV      r2,#0x8fbf
0000d4  ea010002          AND      r0,r1,r2
0000d8  499a              LDR      r1,|L2.836|
0000da  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000dc  f0110f10          TST      r1,#0x10
0000e0  d001              BEQ      |L2.230|
0000e2  f0800010          EOR      r0,r0,#0x10
                  |L2.230|
0000e6  4997              LDR      r1,|L2.836|
0000e8  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000ea  f0110f20          TST      r1,#0x20
0000ee  d001              BEQ      |L2.244|
0000f0  f0800020          EOR      r0,r0,#0x20
                  |L2.244|
0000f4  498e              LDR      r1,|L2.816|
0000f6  3944              SUBS     r1,r1,#0x44
0000f8  6008              STR      r0,[r1,#0]
                  |L2.250|
;;;80               return;
;;;81           }
;;;82           else
;;;83           {
;;;84             /* DIR = 1 */
;;;85     
;;;86             /* DIR = 1 & CTR_RX       => SETUP or OUT int */
;;;87             /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
;;;88     
;;;89             wEPVal = _GetENDPOINT(ENDP0);
;;;90             if ((wEPVal & EP_CTR_TX) != 0)
;;;91             {
;;;92               _ClearEP_CTR_TX(ENDP0);
;;;93               In0_Process();
;;;94               /* before terminate set Tx & Rx status */
;;;95               _SetEPRxStatus(ENDP0, SaveRState);
;;;96               _SetEPTxStatus(ENDP0, SaveTState);
;;;97               return;
;;;98             }
;;;99             else if ((wEPVal &EP_SETUP) != 0)
;;;100            {
;;;101              _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
;;;102              Setup0_Process();
;;;103              /* before terminate set Tx & Rx status */
;;;104              _SetEPRxStatus(ENDP0, SaveRState);
;;;105              _SetEPTxStatus(ENDP0, SaveTState);
;;;106              return;
;;;107            }
;;;108    
;;;109            else if ((wEPVal & EP_CTR_RX) != 0)
;;;110            {
;;;111              _ClearEP_CTR_RX(ENDP0);
;;;112              Out0_Process();
;;;113              /* before terminate set Tx & Rx status */
;;;114              _SetEPRxStatus(ENDP0, SaveRState);
;;;115              _SetEPTxStatus(ENDP0, SaveTState);
;;;116              return;
;;;117            }
;;;118          }
;;;119        }/* if(EPindex == 0) */
;;;120        else
;;;121        {
;;;122          /* Decode and service non control endpoints interrupt  */
;;;123    
;;;124          /* process related endpoint register */
;;;125          wEPVal = _GetENDPOINT(EPindex);
;;;126          if ((wEPVal & EP_CTR_RX) != 0)
;;;127          {
;;;128            /* clear int flag */
;;;129            _ClearEP_CTR_RX(EPindex);
;;;130    
;;;131            /* call OUT service function */
;;;132            (*pEpInt_OUT[EPindex-1])();
;;;133    
;;;134          } /* if((wEPVal & EP_CTR_RX) */
;;;135    
;;;136          if ((wEPVal & EP_CTR_TX) != 0)
;;;137          {
;;;138            /* clear int flag */
;;;139            _ClearEP_CTR_TX(EPindex);
;;;140    
;;;141            /* call IN service function */
;;;142            (*pEpInt_IN[EPindex-1])();
;;;143          } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;144    
;;;145        }/* if(EPindex == 0) else */
;;;146    
;;;147      }/* while(...) */
;;;148    }
0000fa  bd10              POP      {r4,pc}
                  |L2.252|
0000fc  488c              LDR      r0,|L2.816|
0000fe  3844              SUBS     r0,r0,#0x44           ;89
000100  6800              LDR      r0,[r0,#0]            ;89
000102  b284              UXTH     r4,r0                 ;89
000104  f0140f80          TST      r4,#0x80              ;90
000108  d040              BEQ      |L2.396|
00010a  4889              LDR      r0,|L2.816|
00010c  3844              SUBS     r0,r0,#0x44           ;92
00010e  6800              LDR      r0,[r0,#0]            ;92
000110  b280              UXTH     r0,r0                 ;92
000112  f648710f          MOV      r1,#0x8f0f            ;92
000116  4008              ANDS     r0,r0,r1              ;92
000118  4989              LDR      r1,|L2.832|
00011a  f8c10c00          STR      r0,[r1,#0xc00]        ;92
00011e  e000              B        |L2.290|
                  |L2.288|
000120  e0ba              B        |L2.664|
                  |L2.290|
000122  f7fffffe          BL       In0_Process
000126  4982              LDR      r1,|L2.816|
000128  3944              SUBS     r1,r1,#0x44           ;95
00012a  6809              LDR      r1,[r1,#0]            ;95
00012c  b289              UXTH     r1,r1                 ;95
00012e  f64b728f          MOV      r2,#0xbf8f            ;95
000132  ea010002          AND      r0,r1,r2              ;95
000136  4981              LDR      r1,|L2.828|
000138  8809              LDRH     r1,[r1,#0]            ;95  ; SaveRState
00013a  f4115f80          TST      r1,#0x1000            ;95
00013e  d001              BEQ      |L2.324|
000140  f4805080          EOR      r0,r0,#0x1000         ;95
                  |L2.324|
000144  497d              LDR      r1,|L2.828|
000146  8809              LDRH     r1,[r1,#0]            ;95  ; SaveRState
000148  f4115f00          TST      r1,#0x2000            ;95
00014c  d001              BEQ      |L2.338|
00014e  f4805000          EOR      r0,r0,#0x2000         ;95
                  |L2.338|
000152  4977              LDR      r1,|L2.816|
000154  3944              SUBS     r1,r1,#0x44           ;95
000156  6008              STR      r0,[r1,#0]            ;95
000158  4979              LDR      r1,|L2.832|
00015a  f8d11c00          LDR      r1,[r1,#0xc00]        ;96
00015e  b289              UXTH     r1,r1                 ;96
000160  f64872bf          MOV      r2,#0x8fbf            ;96
000164  ea010002          AND      r0,r1,r2              ;96
000168  4976              LDR      r1,|L2.836|
00016a  8809              LDRH     r1,[r1,#0]            ;96  ; SaveTState
00016c  f0110f10          TST      r1,#0x10              ;96
000170  d001              BEQ      |L2.374|
000172  f0800010          EOR      r0,r0,#0x10           ;96
                  |L2.374|
000176  4973              LDR      r1,|L2.836|
000178  8809              LDRH     r1,[r1,#0]            ;96  ; SaveTState
00017a  f0110f20          TST      r1,#0x20              ;96
00017e  d001              BEQ      |L2.388|
000180  f0800020          EOR      r0,r0,#0x20           ;96
                  |L2.388|
000184  496a              LDR      r1,|L2.816|
000186  3944              SUBS     r1,r1,#0x44           ;96
000188  6008              STR      r0,[r1,#0]            ;96
00018a  e7b6              B        |L2.250|
                  |L2.396|
00018c  f4146f00          TST      r4,#0x800             ;99
000190  d03f              BEQ      |L2.530|
000192  4867              LDR      r0,|L2.816|
000194  3844              SUBS     r0,r0,#0x44           ;101
000196  6800              LDR      r0,[r0,#0]            ;101
000198  f3c0000e          UBFX     r0,r0,#0,#15          ;101
00019c  f648718f          MOV      r1,#0x8f8f            ;101
0001a0  4008              ANDS     r0,r0,r1              ;101
0001a2  4967              LDR      r1,|L2.832|
0001a4  f8c10c00          STR      r0,[r1,#0xc00]        ;101
0001a8  f7fffffe          BL       Setup0_Process
0001ac  4960              LDR      r1,|L2.816|
0001ae  3944              SUBS     r1,r1,#0x44           ;104
0001b0  6809              LDR      r1,[r1,#0]            ;104
0001b2  b289              UXTH     r1,r1                 ;104
0001b4  f64b728f          MOV      r2,#0xbf8f            ;104
0001b8  ea010002          AND      r0,r1,r2              ;104
0001bc  495f              LDR      r1,|L2.828|
0001be  8809              LDRH     r1,[r1,#0]            ;104  ; SaveRState
0001c0  f4115f80          TST      r1,#0x1000            ;104
0001c4  d001              BEQ      |L2.458|
0001c6  f4805080          EOR      r0,r0,#0x1000         ;104
                  |L2.458|
0001ca  495c              LDR      r1,|L2.828|
0001cc  8809              LDRH     r1,[r1,#0]            ;104  ; SaveRState
0001ce  f4115f00          TST      r1,#0x2000            ;104
0001d2  d001              BEQ      |L2.472|
0001d4  f4805000          EOR      r0,r0,#0x2000         ;104
                  |L2.472|
0001d8  4955              LDR      r1,|L2.816|
0001da  3944              SUBS     r1,r1,#0x44           ;104
0001dc  6008              STR      r0,[r1,#0]            ;104
0001de  4958              LDR      r1,|L2.832|
0001e0  f8d11c00          LDR      r1,[r1,#0xc00]        ;105
0001e4  b289              UXTH     r1,r1                 ;105
0001e6  f64872bf          MOV      r2,#0x8fbf            ;105
0001ea  ea010002          AND      r0,r1,r2              ;105
0001ee  4955              LDR      r1,|L2.836|
0001f0  8809              LDRH     r1,[r1,#0]            ;105  ; SaveTState
0001f2  f0110f10          TST      r1,#0x10              ;105
0001f6  d001              BEQ      |L2.508|
0001f8  f0800010          EOR      r0,r0,#0x10           ;105
                  |L2.508|
0001fc  4951              LDR      r1,|L2.836|
0001fe  8809              LDRH     r1,[r1,#0]            ;105  ; SaveTState
000200  f0110f20          TST      r1,#0x20              ;105
000204  d001              BEQ      |L2.522|
000206  f0800020          EOR      r0,r0,#0x20           ;105
                  |L2.522|
00020a  4949              LDR      r1,|L2.816|
00020c  3944              SUBS     r1,r1,#0x44           ;105
00020e  6008              STR      r0,[r1,#0]            ;105
000210  e773              B        |L2.250|
                  |L2.530|
000212  f4144f00          TST      r4,#0x8000            ;109
000216  d07d              BEQ      |L2.788|
000218  4845              LDR      r0,|L2.816|
00021a  3844              SUBS     r0,r0,#0x44           ;111
00021c  6800              LDR      r0,[r0,#0]            ;111
00021e  f3c0000e          UBFX     r0,r0,#0,#15          ;111
000222  f648718f          MOV      r1,#0x8f8f            ;111
000226  4008              ANDS     r0,r0,r1              ;111
000228  4945              LDR      r1,|L2.832|
00022a  f8c10c00          STR      r0,[r1,#0xc00]        ;111
00022e  f7fffffe          BL       Out0_Process
000232  493f              LDR      r1,|L2.816|
000234  3944              SUBS     r1,r1,#0x44           ;114
000236  6809              LDR      r1,[r1,#0]            ;114
000238  b289              UXTH     r1,r1                 ;114
00023a  f64b728f          MOV      r2,#0xbf8f            ;114
00023e  ea010002          AND      r0,r1,r2              ;114
000242  493e              LDR      r1,|L2.828|
000244  8809              LDRH     r1,[r1,#0]            ;114  ; SaveRState
000246  f4115f80          TST      r1,#0x1000            ;114
00024a  d001              BEQ      |L2.592|
00024c  f4805080          EOR      r0,r0,#0x1000         ;114
                  |L2.592|
000250  493a              LDR      r1,|L2.828|
000252  8809              LDRH     r1,[r1,#0]            ;114  ; SaveRState
000254  f4115f00          TST      r1,#0x2000            ;114
000258  d001              BEQ      |L2.606|
00025a  f4805000          EOR      r0,r0,#0x2000         ;114
                  |L2.606|
00025e  4934              LDR      r1,|L2.816|
000260  3944              SUBS     r1,r1,#0x44           ;114
000262  6008              STR      r0,[r1,#0]            ;114
000264  4936              LDR      r1,|L2.832|
000266  f8d11c00          LDR      r1,[r1,#0xc00]        ;115
00026a  b289              UXTH     r1,r1                 ;115
00026c  f64872bf          MOV      r2,#0x8fbf            ;115
000270  ea010002          AND      r0,r1,r2              ;115
000274  4933              LDR      r1,|L2.836|
000276  8809              LDRH     r1,[r1,#0]            ;115  ; SaveTState
000278  f0110f10          TST      r1,#0x10              ;115
00027c  d001              BEQ      |L2.642|
00027e  f0800010          EOR      r0,r0,#0x10           ;115
                  |L2.642|
000282  4930              LDR      r1,|L2.836|
000284  8809              LDRH     r1,[r1,#0]            ;115  ; SaveTState
000286  f0110f20          TST      r1,#0x20              ;115
00028a  d001              BEQ      |L2.656|
00028c  f0800020          EOR      r0,r0,#0x20           ;115
                  |L2.656|
000290  4927              LDR      r1,|L2.816|
000292  3944              SUBS     r1,r1,#0x44           ;115
000294  6008              STR      r0,[r1,#0]            ;115
000296  e730              B        |L2.250|
                  |L2.664|
000298  4827              LDR      r0,|L2.824|
00029a  7800              LDRB     r0,[r0,#0]            ;125  ; EPindex
00029c  4928              LDR      r1,|L2.832|
00029e  eb010080          ADD      r0,r1,r0,LSL #2       ;125
0002a2  f8d00c00          LDR      r0,[r0,#0xc00]        ;125
0002a6  b284              UXTH     r4,r0                 ;125
0002a8  f4144f00          TST      r4,#0x8000            ;126
0002ac  d018              BEQ      |L2.736|
0002ae  4822              LDR      r0,|L2.824|
0002b0  7800              LDRB     r0,[r0,#0]            ;129  ; EPindex
0002b2  eb010080          ADD      r0,r1,r0,LSL #2       ;129
0002b6  f8d00c00          LDR      r0,[r0,#0xc00]        ;129
0002ba  f3c0000e          UBFX     r0,r0,#0,#15          ;129
0002be  f648718f          MOV      r1,#0x8f8f            ;129
0002c2  4008              ANDS     r0,r0,r1              ;129
0002c4  491c              LDR      r1,|L2.824|
0002c6  7809              LDRB     r1,[r1,#0]            ;129  ; EPindex
0002c8  4a1d              LDR      r2,|L2.832|
0002ca  eb020181          ADD      r1,r2,r1,LSL #2       ;129
0002ce  f8c10c00          STR      r0,[r1,#0xc00]        ;129
0002d2  4919              LDR      r1,|L2.824|
0002d4  7809              LDRB     r1,[r1,#0]            ;132  ; EPindex
0002d6  1e49              SUBS     r1,r1,#1              ;132
0002d8  4a1b              LDR      r2,|L2.840|
0002da  f8520021          LDR      r0,[r2,r1,LSL #2]     ;132
0002de  4780              BLX      r0                    ;132
                  |L2.736|
0002e0  f0140f80          TST      r4,#0x80              ;136
0002e4  d01a              BEQ      |L2.796|
0002e6  4814              LDR      r0,|L2.824|
0002e8  7800              LDRB     r0,[r0,#0]            ;139  ; EPindex
0002ea  4915              LDR      r1,|L2.832|
0002ec  eb010080          ADD      r0,r1,r0,LSL #2       ;139
0002f0  f8d00c00          LDR      r0,[r0,#0xc00]        ;139
0002f4  b280              UXTH     r0,r0                 ;139
0002f6  f648710f          MOV      r1,#0x8f0f            ;139
0002fa  4008              ANDS     r0,r0,r1              ;139
0002fc  490e              LDR      r1,|L2.824|
0002fe  7809              LDRB     r1,[r1,#0]            ;139  ; EPindex
000300  4a0f              LDR      r2,|L2.832|
000302  eb020181          ADD      r1,r2,r1,LSL #2       ;139
000306  f8c10c00          STR      r0,[r1,#0xc00]        ;139
00030a  490b              LDR      r1,|L2.824|
00030c  7809              LDRB     r1,[r1,#0]            ;142  ; EPindex
00030e  1e49              SUBS     r1,r1,#1              ;142
000310  4a0e              LDR      r2,|L2.844|
000312  e000              B        |L2.790|
                  |L2.788|
000314  e002              B        |L2.796|
                  |L2.790|
000316  f8520021          LDR      r0,[r2,r1,LSL #2]     ;142
00031a  4780              BLX      r0                    ;142
                  |L2.796|
00031c  4804              LDR      r0,|L2.816|
00031e  6800              LDR      r0,[r0,#0]            ;45
000320  b280              UXTH     r0,r0                 ;45
000322  4904              LDR      r1,|L2.820|
000324  8008              STRH     r0,[r1,#0]            ;45
000326  f4104f00          TST      r0,#0x8000            ;45
00032a  f47fae6c          BNE      |L2.6|
00032e  e6e4              B        |L2.250|
;;;149    
                          ENDP

                  |L2.816|
                          DCD      0x40005c44
                  |L2.820|
                          DCD      wIstr
                  |L2.824|
                          DCD      EPindex
                  |L2.828|
                          DCD      SaveRState
                  |L2.832|
                          DCD      0x40005000
                  |L2.836|
                          DCD      SaveTState
                  |L2.840|
                          DCD      pEpInt_OUT
                  |L2.844|
                          DCD      pEpInt_IN

                          AREA ||.data||, DATA, ALIGN=1

                  SaveRState
000000  0000              DCB      0x00,0x00
                  SaveTState
000002  0000              DCB      0x00,0x00
