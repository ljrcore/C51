C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE DS18B20_VB
OBJECT MODULE PLACED IN DS18B20-VB.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DS18B20-VB.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          #include <Intrins.h>  
  11          //---------------------------------------
  12          //1602液晶相关I/O设置
  13          sbit E=P2^3;               //1602液晶的E脚接在P2.3口上
  14          sbit RW=P2^4;              //1602液晶的RW脚接在P2.4口上
  15          sbit RS=P2^5;              //1602液晶的RS脚接在P2.5口上
  16          //---------------------------------------
  17          sbit ds18b20=P3^7;      
  18          //---------------------------------------
  19          //1602液晶寄存器设置
  20          unsigned char DISbuf;     //设置8位的unsigend char型寄存器用来暂存1602要显示的内容
  21          //---------------------------------------        
  22          unsigned char temp1;
  23          unsigned char temp2;
  24          unsigned char code table[16]={0,0,1,2,2,3,4,4,5,6,6,7,8,8,9,9};
  25          
  26          //---------------------------------------
  27          //名称：延时函数
  28          //适用：给力者GL9单片机开发学习系统
  29          //公司：宁波芯动电子有限公司
  30          //网址：www.MovingChip.com
  31          //日期：20130608
  32          //---------------------------------------
  33          void Delay(unsigned int nTimeDelay) 
  34          { 
  35   1          unsigned int i;
  36   1          while (nTimeDelay--) 
  37   1              for (i=0;i<125;i++);
  38   1      }
  39          //---------------------------------------
  40          //名称：复位DS18B20函数
  41          //适用：给力者GL9单片机开发学习系统
  42          //公司：宁波芯动电子有限公司
  43          //网址：www.MovingChip.com
  44          //日期：20130608
  45          //---------------------------------------
  46          bit Reset(void)
  47          {
  48   1              unsigned int i;
  49   1         bit k;
  50   1         ds18b20=0;                           //拉低DQ总线开始复位    
  51   1         i=200;                                       //保持DQ低大约870uS，符合不低于48US的要求
  52   1         while(i>0)                           //保持DQ低大约870uS，符合不低于48US的要求 
  53   1             i--;                             //保持DQ低大约870uS，符合不低于48US的要求           
  54   1         ds18b20=1;                           //拉高准备接收数据   
  55   1         i=18;                                        //大约80uS后
C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 2   

  56   1         while(i>0)                                   //大约80uS后 
  57   1             i--;                                     //大约80uS后
  58   1         k=ds18b20;                           //读出数据并保存    
  59   1         i=91;                                                //维持约400US，符合总读时隙不低于480US的要求
  60   1         while(i>0)                                   //维持约400US，符合总读时隙不低于480US的要求
  61   1             i--;                                     //维持约400US，符合总读时隙不低于480US的要求
  62   1         return k;               //k=0为复位成功，k=1为复位失败
  63   1      }
  64          //---------------------------------------
  65          //名称：读一字节函数
  66          //适用：给力者GL9单片机开发学习系统
  67          //公司：宁波芯动电子有限公司
  68          //网址：www.MovingChip.com
  69          //日期：20130608
  70          //---------------------------------------
  71          unsigned char ReadByte(void)
  72          {
  73   1              unsigned int i;
  74   1         unsigned char j,buf=0;
  75   1         for(j=0;j<8;j++)                     //接收8次还原一个字节数据 
  76   1         {
  77   2                      buf=buf>>1;                     //接收前，想将接收缓冲区右移
  78   2                      ds18b20=0;                              //拉低      
  79   2            _nop_();                  //维持2US，符合大于1US小于15US的规范
  80   2            _nop_();                  //维持2US，符合大于1US小于15US的规范
  81   2            _nop_();                  //维持2US，符合大于1US小于15US的规范
  82   2                 _nop_();                     //维持2US，符合大于1US小于15US的规范
  83   2            ds18b20=1;                                //拉高,为读数据做准备 
  84   2                      _nop_();                //维持6US，符合大于1US小于15US的规范
  85   2            _nop_();                  //维持6US，符合大于1US小于15US的规范
  86   2            _nop_();                  //维持6US，符合大于1US小于15US的规范
  87   2                 _nop_();                     //维持6US，符合大于1US小于15US的规范
  88   2                      _nop_();                //维持6US，符合大于1US小于15US的规范
  89   2            _nop_();                  //维持6US，符合大于1US小于15US的规范
  90   2            _nop_();                  //维持6US，符合大于1US小于15US的规范
  91   2                 _nop_();                     //维持6US，符合大于1US小于15US的规范
  92   2                      _nop_();                //维持6US，符合大于1US小于15US的规范
  93   2            _nop_();                  //维持6US，符合大于1US小于15US的规范
  94   2            _nop_();                  //维持6US，符合大于1US小于15US的规范
  95   2                 _nop_();                     //维持6US，符合大于1US小于15US的规范
  96   2                      if(ds18b20==1) buf|=0x80;  //读出1位数据保存于buf中
  97   2                      i=12;                                   //维持约52US，符合总读时隙不低于60US的要求
  98   2            while(i>0)                        //维持约52US，符合总读时隙不低于60US的要求
  99   2              i--;                            //维持约52US，符合总读时隙不低于60US的要求
 100   2              }
 101   1         return buf;             //退出的同时将接收缓冲区参数返回
 102   1      }
 103          
 104          //---------------------------------------
 105          //名称：写一字节函数
 106          //适用：给力者GL9单片机开发学习系统
 107          //公司：宁波芯动电子有限公司
 108          //网址：www.MovingChip.com
 109          //日期：20130608
 110          //---------------------------------------
 111          void WriteByte(unsigned char dat)
 112          {
 113   1              unsigned int i;
 114   1         unsigned char j;
 115   1         for(j=0;j<8;j++)
 116   1         {             
 117   2                      if(dat&0x01)                    //如果写1
C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 3   

 118   2            {      
 119   3                      ds18b20=0;                      //拉低      
 120   3               _nop_();               //维持2US，符合大于1US小于15US的规范
 121   3               _nop_();               //维持2US，符合大于1US小于15US的规范
 122   3               _nop_();               //维持2US，符合大于1US小于15US的规范
 123   3                      _nop_();        //维持2US，符合大于1US小于15US的规范
 124   3               ds18b20=1;                     //拉高        
 125   3               i=14;                                  //维持约63US，符合不低于60US的要求
 126   3               while(i>0)             //维持约63US，符合不低于60US的要求
 127   3                      i--;                    //维持约63US，符合不低于60US的要求
 128   3                      }
 129   2            else                                              //如果写0
 130   2            {            
 131   3                              ds18b20=0;                      //拉低          
 132   3               i=14;                                  //维持约63US，符合不低于60US的要求 
 133   3               while(i>0)                     //维持约63US，符合不低于60US的要求 
 134   3                      i--;                            //维持约63US，符合不低于60US的要求        
 135   3               ds18b20=1;                     //拉高          
 136   3               _nop_();               //维持2US，符合大于1US的规范
 137   3               _nop_();               //维持2US，符合大于1US的规范
 138   3               _nop_();               //维持2US，符合大于1US的规范
 139   3                      _nop_();        //维持2US，符合大于1US的规范
 140   3            }
 141   2                      dat=dat>>1;                             //写入字节右移1位
 142   2              }
 143   1      }
 144          
 145          //---------------------------------------
 146          //名称：DS18B20温度转换函数
 147          //适用：给力者GL9单片机开发学习系统
 148          //公司：宁波芯动电子有限公司
 149          //网址：www.MovingChip.com
 150          //日期：20130608
 151          //---------------------------------------
 152          bit Convert(void)
 153          {    
 154   1              if(Reset()==0)          //复位DS18B20
 155   1              {               
 156   2              WriteByte(0xcc);                //写入跳过序列号命令字 Skip Rom
 157   2            WriteByte(0x44);          //写入温度转换命令字 Convert T  
 158   2                      return 1;            //启动温度转换成功
 159   2              }
 160   1              else
 161   1              {         
 162   2                      return 0;            //启动温度转换失败
 163   2              }
 164   1      }
 165          
 166          //---------------------------------------
 167          //名称：转换结束处理函数
 168          //适用：给力者GL9单片机开发学习系统
 169          //公司：宁波芯动电子有限公司
 170          //网址：www.MovingChip.com
 171          //日期：20130608
 172          //---------------------------------------
 173          void ReadFlash(void)
 174          {    
 175   1              unsigned char Lsb,Msb;  
 176   1         if(Reset()==0)          //复位DS18B20
 177   1              {
 178   2            WriteByte(0xcc);          //写入跳过序列号命令字 Skip Rom
 179   2            WriteByte(0xbe);          //写入读取数据令字 Read Scratchpad
C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 4   

 180   2            Lsb=ReadByte();           //读出第一个字节暂存于LSB
 181   2            Msb=ReadByte();           //读出第二个字节暂存于MSB       
 182   2                      temp1=Lsb&0x0f;         //temp1内装温度参数的小数部分
 183   2            temp2=(Lsb>>4)|(Msb<<4);//temp2内装温度参数的整数部分      
 184   2              }       
 185   1              else
 186   1              {
 187   2                      temp1=0;                                        //如果复位失败，温度参数清零
 188   2            temp2=0;                                  //如果复位失败，温度参数清零    
 189   2              }
 190   1      }
 191          //---------------------------------------
 192          //名称：1602液晶忙检测函数
 193          //适用：给力者GL9单片机开发学习系统
 194          //公司：宁波芯动电子有限公司
 195          //网址：www.MovingChip.com
 196          //日期：20130608
 197          //---------------------------------------
 198          void LCD1602_busy(void)
 199          { 
 200   1           P0_7=1;              //将P0.7置1，为读状态做准备 
 201   1           RS=0;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 202   1           RW=1;                //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 203   1           E=1;                 //RS=0、RW=1、E=1时，忙信号输出到DB7，由P0.7读入
 204   1           while(P0_7==1);      //由P0.7读入1，表示1602液晶忙，需要等待
 205   1           E=0;                 //读完以后，恢复E的电平
 206   1      } 
 207          
 208          //---------------------------------------
 209          //名称：1600写命令函数
 210          //适用：给力者GL9单片机开发学习系统
 211          //公司：宁波芯动电子有限公司
 212          //网址：www.MovingChip.com
 213          //日期：20130608
 214          //---------------------------------------
 215          void LCD1602_Write_com(unsigned char combuf)
 216          { 
 217   1           RS=0;                //选择指令寄存器
 218   1           RW=0;                //选择写状态
 219   1           P0=combuf;           //将命令字通过P0口送至DB
 220   1           E=1;                 //E高电平将命令字写入1602液晶
 221   1           E=0;                 //写完以后，恢复E的电平
 222   1      } 
 223          
 224          //---------------------------------------
 225          //名称：1602写命令函数(带忙检测)
 226          //适用：给力者GL9单片机开发学习系统
 227          //公司：宁波芯动电子有限公司
 228          //网址：www.MovingChip.com
 229          //日期：20130608
 230          //---------------------------------------
 231          void LCD1602_Write_com_busy(unsigned char combuf)
 232          { 
 233   1           LCD1602_busy();            //调用忙检测函数
 234   1           LCD1602_Write_com(combuf); //调用忙检测函数
 235   1      } 
 236          
 237          //---------------------------------------
 238          //名称：1602写数据函数(带忙检测)
 239          //适用：给力者GL9单片机开发学习系统
 240          //公司：宁波芯动电子有限公司
 241          //网址：www.MovingChip.com
C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 5   

 242          //日期：20130608
 243          //---------------------------------------
 244          void LCD1602_Write_data_busy(unsigned char databuf)
 245          { 
 246   1           LCD1602_busy();      //调用忙检测函数
 247   1           RS=1;                //选择数据寄存器
 248   1           RW=0;                //选择写状态
 249   1           P0=databuf;          //将命令字通过P0口送至DB
 250   1           E=1;                 //E高电平将命令字写入1602液晶
 251   1           E=0;                 //写完以后，恢复E的电平
 252   1      } 
 253          
 254          //---------------------------------------
 255          //名称：1602液晶显示地址写函数
 256          //适用：给力者GL9单片机开发学习系统
 257          //公司：宁波芯动电子有限公司
 258          //网址：www.MovingChip.com
 259          //日期：20130608
 260          //---------------------------------------
 261          void LCD1602_Write_address(unsigned char x,unsigned char y)
 262          { 
 263   1           x&=0x0f;             //列地址限制在0-15间
 264   1           y&=0x01;             //行地址限制在0-1间
 265   1           if(y==0)             //如果是第一行
 266   1               LCD1602_Write_com_busy(x|0x80);        //将列地址写入
 267   1           else                 //如果是第二行
 268   1               LCD1602_Write_com_busy((x+0x40)|0x80); //将列地址写入
 269   1      } 
 270          
 271          //---------------------------------------
 272          //名称：1602液晶初始化函数
 273          //适用：给力者GL9单片机开发学习系统
 274          //公司：宁波芯动电子有限公司
 275          //网址：www.MovingChip.com
 276          //日期：20130608
 277          //---------------------------------------
 278          void LCD1602_init(void)
 279          { 
 280   1           Delay(150);               //调用延时函数
 281   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 282   1           Delay(50);                //调用延时函数
 283   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 284   1           Delay(50);                //调用延时函数
 285   1           LCD1602_Write_com(0x38);       //8位数据总线，两行显示模式，5*7点阵显示
 286   1           LCD1602_Write_com_busy(0x38);  //8位数据总线，两行显示模式，5*7点阵显示
 287   1           LCD1602_Write_com_busy(0x08);  //显示功能关，无光标
 288   1           LCD1602_Write_com_busy(0x01);  //清屏
 289   1           LCD1602_Write_com_busy(0x06);  //写入新的数据后，光标右移，显示屏不移动
 290   1           LCD1602_Write_com_busy(0x0C);  //显示功能开，无光标
 291   1      } 
 292          
 293          //---------------------------------------
 294          //名称：1602液晶指定地址显示函数
 295          //适用：给力者GL9单片机开发学习系统
 296          //公司：宁波芯动电子有限公司
 297          //网址：www.MovingChip.com
 298          //日期：20130608
 299          //---------------------------------------
 300          void LCD1602_Disp(unsigned char x,unsigned char y,unsigned char buf)
 301          { 
 302   1           LCD1602_Write_address(x,y);    //先将地址信息写入
 303   1           LCD1602_Write_data_busy(buf);  //再写入要显示的数据
C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 6   

 304   1      } 
 305          
 306          //---------------------------------------
 307          //名称: 主函数
 308          //适用：给力者GL9单片机开发学习系统
 309          //公司：宁波芯动电子有限公司
 310          //网址：www.MovingChip.com
 311          //日期：20130608
 312          //---------------------------------------
 313          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
 314          {
 315   1              unsigned char USARTbuf;
 316   1         LCD1602_init();        //调用1602液晶初始化函数
 317   1              //*****USART串口初始化*****
 318   1          TMOD&=0x0F;            //把TMOD高4位清0
 319   1          TMOD|=0x20;            //将TMOD的M1位置1，设置成自动装入的8位定时器
 320   1          TH1=0xFA;              //设置波特率为9600
 321   1          TL1=0xFA;              //设置波特率为9600
 322   1          TR1=1;                 //启动定时器T1，作为串口波特率发生器
 323   1          SCON=0x50;             //10位异步收发，波特率由定时器控制，允许串口接收
 324   1          ES=0;                  //禁止串口中断
 325   1          //**************************
 326   1         while(1)               //死循环,单片机初始化后,将一直运行这个死循环
 327   1         {
 328   2            if(Convert()==1)                                          //启动转换
 329   2                      {            
 330   3                      ReadFlash();                    //读取温度                       
 331   3               if(temp2>99) temp2=99;                  
 332   3                              if(temp1>15) temp1=0; 
 333   3                              temp1=table[temp1];                     
 334   3                              LCD1602_Disp(0,0,temp2/10+'0');  //温度整数部分十位                             
 335   3                         LCD1602_Disp(1,0,temp2%10+'0');  //温度整数部分个位
 336   3                              LCD1602_Disp(2,0,'.');  //.             
 337   3                              LCD1602_Disp(3,0,temp1+'0');  //温度小数部分
 338   3                              LCD1602_Disp(4,0,0xdf);   //.
 339   3                              LCD1602_Disp(5,0,0x43);   //C                                                           
 340   3                  }  
 341   2                      //****查询式串口接收程序****
 342   2              if(RI==1)               //如果接收标志位为1，说明有数据接收完毕
 343   2              {                       //RCIF在寄存器被读出后自动清零
 344   3                  USARTbuf=SBUF;      //将接收缓冲区内容转至USARTbuf寄存器中
 345   3                  RI=0;               //清除接收标志位
 346   3                              if(USARTbuf==0x89)
 347   3                              {
 348   4                                              TI=0;
 349   4                      SBUF=0x90;    //发回第一个数据0X90，作为数据头使用
 350   4                      while(!TI);         //一直等到数据发送完毕
 351   4                                              TI=0;
 352   4                                      SBUF=temp2;    //发回温度的整数部分
 353   4                      while(!TI);         //一直等到数据发送完毕
 354   4                                              TI=0;
 355   4                                      SBUF=temp1;    //发回温度的小数部分
 356   4                      while(!TI);         //一直等到数据发送完毕
 357   4                              }
 358   3              }
 359   2          //************************** 
 360   2          }
 361   1      }
 362          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.00  DS18B20_VB                                                             07/26/2013 17:14:00 PAGE 7   

   CODE SIZE        =    549    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
