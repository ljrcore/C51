C51 COMPILER V7.00  TEST10                                                                 07/14/2013 22:23:29 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE TEST10
OBJECT MODULE PLACED IN TEST10.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEST10.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          ////////////////////////////////////////////////////////////////////////////
   2          //                给力者单片机开发学习系统，开发学习都给力！              //
   3          ////////////////////////////////////////////////////////////////////////////
   4          //                     学习51单片机，其实可以很简单                       //
   5          ////////////////////////////////////////////////////////////////////////////
   6          //                宁波芯动电子有限公司  www.MovingChip.com                //
   7          ////////////////////////////////////////////////////////////////////////////
   8          
   9          #include <AT89X52.h>       //调用51单片机的头文件
  10          
  11          //---------------------------------------
  12          //定义一个数据表格
  13          unsigned char code TAB[10]=
  14          {                          //定义表格一定要使用code，这样会做到程序存储区中
  15              0x3F,                  //表格第1步数据0b00111111
  16              0x06,                  //表格第2步数据0b00000110
  17              0x5B,                  //表格第3步数据0b01011011
  18              0x4F,                  //表格第4步数据0b01001111
  19              0x66,                  //表格第5步数据0b01100110
  20              0x6D,                  //表格第6步数据0b01101101
  21              0x7D,                  //表格第7步数据0b01111101
  22              0x07,                  //表格第8步数据0b00000111
  23              0x7F,                  //表格第9步数据0b01111111
  24              0x6F,                  //表格第10步数据0b01101111
  25          };
  26          
  27          //---------------------------------------
  28          //8独立按键相关I/O设置
  29          sbit P1key=P1^0;           //按键P1接在P0.0口上
  30          sbit P2key=P1^1;           //按键P2接在P0.1口上
  31          sbit P3key=P1^2;           //按键P3接在P0.2口上
  32          sbit P4key=P1^3;           //按键P4接在P0.3口上
  33          sbit P5key=P1^4;           //按键P5接在P0.4口上
  34          sbit P6key=P1^5;           //按键P6接在P0.5口上
  35          sbit P7key=P1^6;           //按键P7接在P0.6口上
  36          sbit P8key=P1^7;           //按键P8接在P0.7口上
  37          //---------------------------------------
  38          
  39          //---------------------------------------
  40          //按键部分用寄存器设置
  41          unsigned char KEYbuf;      //设置8位的寄存器用来暂存按键键值数据
  42          //---------------------------------------
  43          
  44          //---------------------------------------
  45          //名称: 主函数
  46          //适用：给力者GL9单片机开发学习系统
  47          //公司：宁波芯动电子有限公司
  48          //网址：www.MovingChip.com
  49          //日期：20120914
  50          //---------------------------------------
  51          void main(void)            //主函数,单片机开机后就是从这个函数开始运行
  52          {
  53   1      
  54   1          while(1)               //死循环,单片机初始化后,将一直运行这个死循环
  55   1          {
C51 COMPILER V7.00  TEST10                                                                 07/14/2013 22:23:29 PAGE 2   

  56   2              
  57   2          //***8独立按键扫描部分***
  58   2          //按P1-P8键，KEYbuf赋值1-8
  59   2              if(P1key==0) KEYbuf=1;     //如果P1键按下，KEYbuf赋值写1
  60   2              else if(P2key==0) KEYbuf=2; //如果P2键按下，KEYbuf赋值写2
  61   2              else if(P3key==0) KEYbuf=3; //如果P3键按下，KEYbuf赋值写3
  62   2              else if(P4key==0) KEYbuf=4; //如果P4键按下，KEYbuf赋值写4
  63   2              else if(P5key==0) KEYbuf=5; //如果P5键按下，KEYbuf赋值写5
  64   2              else if(P6key==0) KEYbuf=6; //如果P6键按下，KEYbuf赋值写6
  65   2              else if(P7key==0) KEYbuf=7; //如果P7键按下，KEYbuf赋值写7
  66   2              else if(P8key==0) KEYbuf=8; //如果P8键按下，KEYbuf赋值写8
  67   2          //*********************
  68   2                      P2=TAB[KEYbuf];                 //将TAB[KEYbuf]的值送入P2口输出
  69   2      
  70   2          }
  71   1      }
  72          
  73          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     72    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
